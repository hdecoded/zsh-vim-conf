{
  "version": 3,
  "sources": ["../node_modules/semver/internal/constants.js", "../node_modules/semver/internal/debug.js", "../node_modules/semver/internal/re.js", "../node_modules/semver/internal/parse-options.js", "../node_modules/semver/internal/identifiers.js", "../node_modules/semver/classes/semver.js", "../node_modules/semver/functions/parse.js", "../node_modules/semver/functions/valid.js", "../node_modules/semver/functions/clean.js", "../node_modules/semver/functions/inc.js", "../node_modules/semver/functions/diff.js", "../node_modules/semver/functions/major.js", "../node_modules/semver/functions/minor.js", "../node_modules/semver/functions/patch.js", "../node_modules/semver/functions/prerelease.js", "../node_modules/semver/functions/compare.js", "../node_modules/semver/functions/rcompare.js", "../node_modules/semver/functions/compare-loose.js", "../node_modules/semver/functions/compare-build.js", "../node_modules/semver/functions/sort.js", "../node_modules/semver/functions/rsort.js", "../node_modules/semver/functions/gt.js", "../node_modules/semver/functions/lt.js", "../node_modules/semver/functions/eq.js", "../node_modules/semver/functions/neq.js", "../node_modules/semver/functions/gte.js", "../node_modules/semver/functions/lte.js", "../node_modules/semver/functions/cmp.js", "../node_modules/semver/functions/coerce.js", "../node_modules/semver/internal/lrucache.js", "../node_modules/semver/classes/range.js", "../node_modules/semver/classes/comparator.js", "../node_modules/semver/functions/satisfies.js", "../node_modules/semver/ranges/to-comparators.js", "../node_modules/semver/ranges/max-satisfying.js", "../node_modules/semver/ranges/min-satisfying.js", "../node_modules/semver/ranges/min-version.js", "../node_modules/semver/ranges/valid.js", "../node_modules/semver/ranges/outside.js", "../node_modules/semver/ranges/gtr.js", "../node_modules/semver/ranges/ltr.js", "../node_modules/semver/ranges/intersects.js", "../node_modules/semver/ranges/simplify.js", "../node_modules/semver/ranges/subset.js", "../node_modules/semver/index.js", "../node_modules/systeminformation/package.json", "../node_modules/systeminformation/lib/util.js", "../node_modules/systeminformation/lib/system.js", "../node_modules/systeminformation/lib/osinfo.js", "../node_modules/systeminformation/lib/cpu.js", "../node_modules/systeminformation/lib/memory.js", "../node_modules/systeminformation/lib/battery.js", "../node_modules/systeminformation/lib/graphics.js", "../node_modules/systeminformation/lib/filesystem.js", "../node_modules/systeminformation/lib/network.js", "../node_modules/systeminformation/lib/wifi.js", "../node_modules/systeminformation/lib/processes.js", "../node_modules/systeminformation/lib/users.js", "../node_modules/systeminformation/lib/internet.js", "../node_modules/systeminformation/lib/dockerSocket.js", "../node_modules/systeminformation/lib/docker.js", "../node_modules/systeminformation/lib/virtualbox.js", "../node_modules/systeminformation/lib/printer.js", "../node_modules/systeminformation/lib/usb.js", "../node_modules/systeminformation/lib/audio.js", "../node_modules/systeminformation/lib/bluetooth.js", "../node_modules/systeminformation/lib/index.js", "../src/index.jsx", "../node_modules/macos-release/index.js", "../node_modules/macos-version/index.js"],
  "sourcesContent": ["// Note: this is the semver.org version of the spec that it implements\n// Not necessarily the package version of this code.\nconst SEMVER_SPEC_VERSION = '2.0.0'\n\nconst MAX_LENGTH = 256\nconst MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER ||\n/* istanbul ignore next */ 9007199254740991\n\n// Max safe segment length for coercion.\nconst MAX_SAFE_COMPONENT_LENGTH = 16\n\n// Max safe length for a build identifier. The max length minus 6 characters for\n// the shortest version with a build 0.0.0+BUILD.\nconst MAX_SAFE_BUILD_LENGTH = MAX_LENGTH - 6\n\nconst RELEASE_TYPES = [\n  'major',\n  'premajor',\n  'minor',\n  'preminor',\n  'patch',\n  'prepatch',\n  'prerelease',\n]\n\nmodule.exports = {\n  MAX_LENGTH,\n  MAX_SAFE_COMPONENT_LENGTH,\n  MAX_SAFE_BUILD_LENGTH,\n  MAX_SAFE_INTEGER,\n  RELEASE_TYPES,\n  SEMVER_SPEC_VERSION,\n  FLAG_INCLUDE_PRERELEASE: 0b001,\n  FLAG_LOOSE: 0b010,\n}\n", "const debug = (\n  typeof process === 'object' &&\n  process.env &&\n  process.env.NODE_DEBUG &&\n  /\\bsemver\\b/i.test(process.env.NODE_DEBUG)\n) ? (...args) => console.error('SEMVER', ...args)\n  : () => {}\n\nmodule.exports = debug\n", "const {\n  MAX_SAFE_COMPONENT_LENGTH,\n  MAX_SAFE_BUILD_LENGTH,\n  MAX_LENGTH,\n} = require('./constants')\nconst debug = require('./debug')\nexports = module.exports = {}\n\n// The actual regexps go on exports.re\nconst re = exports.re = []\nconst safeRe = exports.safeRe = []\nconst src = exports.src = []\nconst t = exports.t = {}\nlet R = 0\n\nconst LETTERDASHNUMBER = '[a-zA-Z0-9-]'\n\n// Replace some greedy regex tokens to prevent regex dos issues. These regex are\n// used internally via the safeRe object since all inputs in this library get\n// normalized first to trim and collapse all extra whitespace. The original\n// regexes are exported for userland consumption and lower level usage. A\n// future breaking change could export the safer regex only with a note that\n// all input should have extra whitespace removed.\nconst safeRegexReplacements = [\n  ['\\\\s', 1],\n  ['\\\\d', MAX_LENGTH],\n  [LETTERDASHNUMBER, MAX_SAFE_BUILD_LENGTH],\n]\n\nconst makeSafeRegex = (value) => {\n  for (const [token, max] of safeRegexReplacements) {\n    value = value\n      .split(`${token}*`).join(`${token}{0,${max}}`)\n      .split(`${token}+`).join(`${token}{1,${max}}`)\n  }\n  return value\n}\n\nconst createToken = (name, value, isGlobal) => {\n  const safe = makeSafeRegex(value)\n  const index = R++\n  debug(name, index, value)\n  t[name] = index\n  src[index] = value\n  re[index] = new RegExp(value, isGlobal ? 'g' : undefined)\n  safeRe[index] = new RegExp(safe, isGlobal ? 'g' : undefined)\n}\n\n// The following Regular Expressions can be used for tokenizing,\n// validating, and parsing SemVer version strings.\n\n// ## Numeric Identifier\n// A single `0`, or a non-zero digit followed by zero or more digits.\n\ncreateToken('NUMERICIDENTIFIER', '0|[1-9]\\\\d*')\ncreateToken('NUMERICIDENTIFIERLOOSE', '\\\\d+')\n\n// ## Non-numeric Identifier\n// Zero or more digits, followed by a letter or hyphen, and then zero or\n// more letters, digits, or hyphens.\n\ncreateToken('NONNUMERICIDENTIFIER', `\\\\d*[a-zA-Z-]${LETTERDASHNUMBER}*`)\n\n// ## Main Version\n// Three dot-separated numeric identifiers.\n\ncreateToken('MAINVERSION', `(${src[t.NUMERICIDENTIFIER]})\\\\.` +\n                   `(${src[t.NUMERICIDENTIFIER]})\\\\.` +\n                   `(${src[t.NUMERICIDENTIFIER]})`)\n\ncreateToken('MAINVERSIONLOOSE', `(${src[t.NUMERICIDENTIFIERLOOSE]})\\\\.` +\n                        `(${src[t.NUMERICIDENTIFIERLOOSE]})\\\\.` +\n                        `(${src[t.NUMERICIDENTIFIERLOOSE]})`)\n\n// ## Pre-release Version Identifier\n// A numeric identifier, or a non-numeric identifier.\n\ncreateToken('PRERELEASEIDENTIFIER', `(?:${src[t.NUMERICIDENTIFIER]\n}|${src[t.NONNUMERICIDENTIFIER]})`)\n\ncreateToken('PRERELEASEIDENTIFIERLOOSE', `(?:${src[t.NUMERICIDENTIFIERLOOSE]\n}|${src[t.NONNUMERICIDENTIFIER]})`)\n\n// ## Pre-release Version\n// Hyphen, followed by one or more dot-separated pre-release version\n// identifiers.\n\ncreateToken('PRERELEASE', `(?:-(${src[t.PRERELEASEIDENTIFIER]\n}(?:\\\\.${src[t.PRERELEASEIDENTIFIER]})*))`)\n\ncreateToken('PRERELEASELOOSE', `(?:-?(${src[t.PRERELEASEIDENTIFIERLOOSE]\n}(?:\\\\.${src[t.PRERELEASEIDENTIFIERLOOSE]})*))`)\n\n// ## Build Metadata Identifier\n// Any combination of digits, letters, or hyphens.\n\ncreateToken('BUILDIDENTIFIER', `${LETTERDASHNUMBER}+`)\n\n// ## Build Metadata\n// Plus sign, followed by one or more period-separated build metadata\n// identifiers.\n\ncreateToken('BUILD', `(?:\\\\+(${src[t.BUILDIDENTIFIER]\n}(?:\\\\.${src[t.BUILDIDENTIFIER]})*))`)\n\n// ## Full Version String\n// A main version, followed optionally by a pre-release version and\n// build metadata.\n\n// Note that the only major, minor, patch, and pre-release sections of\n// the version string are capturing groups.  The build metadata is not a\n// capturing group, because it should not ever be used in version\n// comparison.\n\ncreateToken('FULLPLAIN', `v?${src[t.MAINVERSION]\n}${src[t.PRERELEASE]}?${\n  src[t.BUILD]}?`)\n\ncreateToken('FULL', `^${src[t.FULLPLAIN]}$`)\n\n// like full, but allows v1.2.3 and =1.2.3, which people do sometimes.\n// also, 1.0.0alpha1 (prerelease without the hyphen) which is pretty\n// common in the npm registry.\ncreateToken('LOOSEPLAIN', `[v=\\\\s]*${src[t.MAINVERSIONLOOSE]\n}${src[t.PRERELEASELOOSE]}?${\n  src[t.BUILD]}?`)\n\ncreateToken('LOOSE', `^${src[t.LOOSEPLAIN]}$`)\n\ncreateToken('GTLT', '((?:<|>)?=?)')\n\n// Something like \"2.*\" or \"1.2.x\".\n// Note that \"x.x\" is a valid xRange identifer, meaning \"any version\"\n// Only the first item is strictly required.\ncreateToken('XRANGEIDENTIFIERLOOSE', `${src[t.NUMERICIDENTIFIERLOOSE]}|x|X|\\\\*`)\ncreateToken('XRANGEIDENTIFIER', `${src[t.NUMERICIDENTIFIER]}|x|X|\\\\*`)\n\ncreateToken('XRANGEPLAIN', `[v=\\\\s]*(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:\\\\.(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:\\\\.(${src[t.XRANGEIDENTIFIER]})` +\n                   `(?:${src[t.PRERELEASE]})?${\n                     src[t.BUILD]}?` +\n                   `)?)?`)\n\ncreateToken('XRANGEPLAINLOOSE', `[v=\\\\s]*(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:\\\\.(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:\\\\.(${src[t.XRANGEIDENTIFIERLOOSE]})` +\n                        `(?:${src[t.PRERELEASELOOSE]})?${\n                          src[t.BUILD]}?` +\n                        `)?)?`)\n\ncreateToken('XRANGE', `^${src[t.GTLT]}\\\\s*${src[t.XRANGEPLAIN]}$`)\ncreateToken('XRANGELOOSE', `^${src[t.GTLT]}\\\\s*${src[t.XRANGEPLAINLOOSE]}$`)\n\n// Coercion.\n// Extract anything that could conceivably be a part of a valid semver\ncreateToken('COERCEPLAIN', `${'(^|[^\\\\d])' +\n              '(\\\\d{1,'}${MAX_SAFE_COMPONENT_LENGTH}})` +\n              `(?:\\\\.(\\\\d{1,${MAX_SAFE_COMPONENT_LENGTH}}))?` +\n              `(?:\\\\.(\\\\d{1,${MAX_SAFE_COMPONENT_LENGTH}}))?`)\ncreateToken('COERCE', `${src[t.COERCEPLAIN]}(?:$|[^\\\\d])`)\ncreateToken('COERCEFULL', src[t.COERCEPLAIN] +\n              `(?:${src[t.PRERELEASE]})?` +\n              `(?:${src[t.BUILD]})?` +\n              `(?:$|[^\\\\d])`)\ncreateToken('COERCERTL', src[t.COERCE], true)\ncreateToken('COERCERTLFULL', src[t.COERCEFULL], true)\n\n// Tilde ranges.\n// Meaning is \"reasonably at or greater than\"\ncreateToken('LONETILDE', '(?:~>?)')\n\ncreateToken('TILDETRIM', `(\\\\s*)${src[t.LONETILDE]}\\\\s+`, true)\nexports.tildeTrimReplace = '$1~'\n\ncreateToken('TILDE', `^${src[t.LONETILDE]}${src[t.XRANGEPLAIN]}$`)\ncreateToken('TILDELOOSE', `^${src[t.LONETILDE]}${src[t.XRANGEPLAINLOOSE]}$`)\n\n// Caret ranges.\n// Meaning is \"at least and backwards compatible with\"\ncreateToken('LONECARET', '(?:\\\\^)')\n\ncreateToken('CARETTRIM', `(\\\\s*)${src[t.LONECARET]}\\\\s+`, true)\nexports.caretTrimReplace = '$1^'\n\ncreateToken('CARET', `^${src[t.LONECARET]}${src[t.XRANGEPLAIN]}$`)\ncreateToken('CARETLOOSE', `^${src[t.LONECARET]}${src[t.XRANGEPLAINLOOSE]}$`)\n\n// A simple gt/lt/eq thing, or just \"\" to indicate \"any version\"\ncreateToken('COMPARATORLOOSE', `^${src[t.GTLT]}\\\\s*(${src[t.LOOSEPLAIN]})$|^$`)\ncreateToken('COMPARATOR', `^${src[t.GTLT]}\\\\s*(${src[t.FULLPLAIN]})$|^$`)\n\n// An expression to strip any whitespace between the gtlt and the thing\n// it modifies, so that `> 1.2.3` ==> `>1.2.3`\ncreateToken('COMPARATORTRIM', `(\\\\s*)${src[t.GTLT]\n}\\\\s*(${src[t.LOOSEPLAIN]}|${src[t.XRANGEPLAIN]})`, true)\nexports.comparatorTrimReplace = '$1$2$3'\n\n// Something like `1.2.3 - 1.2.4`\n// Note that these all use the loose form, because they'll be\n// checked against either the strict or loose comparator form\n// later.\ncreateToken('HYPHENRANGE', `^\\\\s*(${src[t.XRANGEPLAIN]})` +\n                   `\\\\s+-\\\\s+` +\n                   `(${src[t.XRANGEPLAIN]})` +\n                   `\\\\s*$`)\n\ncreateToken('HYPHENRANGELOOSE', `^\\\\s*(${src[t.XRANGEPLAINLOOSE]})` +\n                        `\\\\s+-\\\\s+` +\n                        `(${src[t.XRANGEPLAINLOOSE]})` +\n                        `\\\\s*$`)\n\n// Star ranges basically just allow anything at all.\ncreateToken('STAR', '(<|>)?=?\\\\s*\\\\*')\n// >=0.0.0 is like a star\ncreateToken('GTE0', '^\\\\s*>=\\\\s*0\\\\.0\\\\.0\\\\s*$')\ncreateToken('GTE0PRE', '^\\\\s*>=\\\\s*0\\\\.0\\\\.0-0\\\\s*$')\n", "// parse out just the options we care about\nconst looseOption = Object.freeze({ loose: true })\nconst emptyOpts = Object.freeze({ })\nconst parseOptions = options => {\n  if (!options) {\n    return emptyOpts\n  }\n\n  if (typeof options !== 'object') {\n    return looseOption\n  }\n\n  return options\n}\nmodule.exports = parseOptions\n", "const numeric = /^[0-9]+$/\nconst compareIdentifiers = (a, b) => {\n  const anum = numeric.test(a)\n  const bnum = numeric.test(b)\n\n  if (anum && bnum) {\n    a = +a\n    b = +b\n  }\n\n  return a === b ? 0\n    : (anum && !bnum) ? -1\n    : (bnum && !anum) ? 1\n    : a < b ? -1\n    : 1\n}\n\nconst rcompareIdentifiers = (a, b) => compareIdentifiers(b, a)\n\nmodule.exports = {\n  compareIdentifiers,\n  rcompareIdentifiers,\n}\n", "const debug = require('../internal/debug')\nconst { MAX_LENGTH, MAX_SAFE_INTEGER } = require('../internal/constants')\nconst { safeRe: re, t } = require('../internal/re')\n\nconst parseOptions = require('../internal/parse-options')\nconst { compareIdentifiers } = require('../internal/identifiers')\nclass SemVer {\n  constructor (version, options) {\n    options = parseOptions(options)\n\n    if (version instanceof SemVer) {\n      if (version.loose === !!options.loose &&\n          version.includePrerelease === !!options.includePrerelease) {\n        return version\n      } else {\n        version = version.version\n      }\n    } else if (typeof version !== 'string') {\n      throw new TypeError(`Invalid version. Must be a string. Got type \"${typeof version}\".`)\n    }\n\n    if (version.length > MAX_LENGTH) {\n      throw new TypeError(\n        `version is longer than ${MAX_LENGTH} characters`\n      )\n    }\n\n    debug('SemVer', version, options)\n    this.options = options\n    this.loose = !!options.loose\n    // this isn't actually relevant for versions, but keep it so that we\n    // don't run into trouble passing this.options around.\n    this.includePrerelease = !!options.includePrerelease\n\n    const m = version.trim().match(options.loose ? re[t.LOOSE] : re[t.FULL])\n\n    if (!m) {\n      throw new TypeError(`Invalid Version: ${version}`)\n    }\n\n    this.raw = version\n\n    // these are actually numbers\n    this.major = +m[1]\n    this.minor = +m[2]\n    this.patch = +m[3]\n\n    if (this.major > MAX_SAFE_INTEGER || this.major < 0) {\n      throw new TypeError('Invalid major version')\n    }\n\n    if (this.minor > MAX_SAFE_INTEGER || this.minor < 0) {\n      throw new TypeError('Invalid minor version')\n    }\n\n    if (this.patch > MAX_SAFE_INTEGER || this.patch < 0) {\n      throw new TypeError('Invalid patch version')\n    }\n\n    // numberify any prerelease numeric ids\n    if (!m[4]) {\n      this.prerelease = []\n    } else {\n      this.prerelease = m[4].split('.').map((id) => {\n        if (/^[0-9]+$/.test(id)) {\n          const num = +id\n          if (num >= 0 && num < MAX_SAFE_INTEGER) {\n            return num\n          }\n        }\n        return id\n      })\n    }\n\n    this.build = m[5] ? m[5].split('.') : []\n    this.format()\n  }\n\n  format () {\n    this.version = `${this.major}.${this.minor}.${this.patch}`\n    if (this.prerelease.length) {\n      this.version += `-${this.prerelease.join('.')}`\n    }\n    return this.version\n  }\n\n  toString () {\n    return this.version\n  }\n\n  compare (other) {\n    debug('SemVer.compare', this.version, this.options, other)\n    if (!(other instanceof SemVer)) {\n      if (typeof other === 'string' && other === this.version) {\n        return 0\n      }\n      other = new SemVer(other, this.options)\n    }\n\n    if (other.version === this.version) {\n      return 0\n    }\n\n    return this.compareMain(other) || this.comparePre(other)\n  }\n\n  compareMain (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    return (\n      compareIdentifiers(this.major, other.major) ||\n      compareIdentifiers(this.minor, other.minor) ||\n      compareIdentifiers(this.patch, other.patch)\n    )\n  }\n\n  comparePre (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    // NOT having a prerelease is > having one\n    if (this.prerelease.length && !other.prerelease.length) {\n      return -1\n    } else if (!this.prerelease.length && other.prerelease.length) {\n      return 1\n    } else if (!this.prerelease.length && !other.prerelease.length) {\n      return 0\n    }\n\n    let i = 0\n    do {\n      const a = this.prerelease[i]\n      const b = other.prerelease[i]\n      debug('prerelease compare', i, a, b)\n      if (a === undefined && b === undefined) {\n        return 0\n      } else if (b === undefined) {\n        return 1\n      } else if (a === undefined) {\n        return -1\n      } else if (a === b) {\n        continue\n      } else {\n        return compareIdentifiers(a, b)\n      }\n    } while (++i)\n  }\n\n  compareBuild (other) {\n    if (!(other instanceof SemVer)) {\n      other = new SemVer(other, this.options)\n    }\n\n    let i = 0\n    do {\n      const a = this.build[i]\n      const b = other.build[i]\n      debug('build compare', i, a, b)\n      if (a === undefined && b === undefined) {\n        return 0\n      } else if (b === undefined) {\n        return 1\n      } else if (a === undefined) {\n        return -1\n      } else if (a === b) {\n        continue\n      } else {\n        return compareIdentifiers(a, b)\n      }\n    } while (++i)\n  }\n\n  // preminor will bump the version up to the next minor release, and immediately\n  // down to pre-release. premajor and prepatch work the same way.\n  inc (release, identifier, identifierBase) {\n    switch (release) {\n      case 'premajor':\n        this.prerelease.length = 0\n        this.patch = 0\n        this.minor = 0\n        this.major++\n        this.inc('pre', identifier, identifierBase)\n        break\n      case 'preminor':\n        this.prerelease.length = 0\n        this.patch = 0\n        this.minor++\n        this.inc('pre', identifier, identifierBase)\n        break\n      case 'prepatch':\n        // If this is already a prerelease, it will bump to the next version\n        // drop any prereleases that might already exist, since they are not\n        // relevant at this point.\n        this.prerelease.length = 0\n        this.inc('patch', identifier, identifierBase)\n        this.inc('pre', identifier, identifierBase)\n        break\n      // If the input is a non-prerelease version, this acts the same as\n      // prepatch.\n      case 'prerelease':\n        if (this.prerelease.length === 0) {\n          this.inc('patch', identifier, identifierBase)\n        }\n        this.inc('pre', identifier, identifierBase)\n        break\n\n      case 'major':\n        // If this is a pre-major version, bump up to the same major version.\n        // Otherwise increment major.\n        // 1.0.0-5 bumps to 1.0.0\n        // 1.1.0 bumps to 2.0.0\n        if (\n          this.minor !== 0 ||\n          this.patch !== 0 ||\n          this.prerelease.length === 0\n        ) {\n          this.major++\n        }\n        this.minor = 0\n        this.patch = 0\n        this.prerelease = []\n        break\n      case 'minor':\n        // If this is a pre-minor version, bump up to the same minor version.\n        // Otherwise increment minor.\n        // 1.2.0-5 bumps to 1.2.0\n        // 1.2.1 bumps to 1.3.0\n        if (this.patch !== 0 || this.prerelease.length === 0) {\n          this.minor++\n        }\n        this.patch = 0\n        this.prerelease = []\n        break\n      case 'patch':\n        // If this is not a pre-release version, it will increment the patch.\n        // If it is a pre-release it will bump up to the same patch version.\n        // 1.2.0-5 patches to 1.2.0\n        // 1.2.0 patches to 1.2.1\n        if (this.prerelease.length === 0) {\n          this.patch++\n        }\n        this.prerelease = []\n        break\n      // This probably shouldn't be used publicly.\n      // 1.0.0 'pre' would become 1.0.0-0 which is the wrong direction.\n      case 'pre': {\n        const base = Number(identifierBase) ? 1 : 0\n\n        if (!identifier && identifierBase === false) {\n          throw new Error('invalid increment argument: identifier is empty')\n        }\n\n        if (this.prerelease.length === 0) {\n          this.prerelease = [base]\n        } else {\n          let i = this.prerelease.length\n          while (--i >= 0) {\n            if (typeof this.prerelease[i] === 'number') {\n              this.prerelease[i]++\n              i = -2\n            }\n          }\n          if (i === -1) {\n            // didn't increment anything\n            if (identifier === this.prerelease.join('.') && identifierBase === false) {\n              throw new Error('invalid increment argument: identifier already exists')\n            }\n            this.prerelease.push(base)\n          }\n        }\n        if (identifier) {\n          // 1.2.0-beta.1 bumps to 1.2.0-beta.2,\n          // 1.2.0-beta.fooblz or 1.2.0-beta bumps to 1.2.0-beta.0\n          let prerelease = [identifier, base]\n          if (identifierBase === false) {\n            prerelease = [identifier]\n          }\n          if (compareIdentifiers(this.prerelease[0], identifier) === 0) {\n            if (isNaN(this.prerelease[1])) {\n              this.prerelease = prerelease\n            }\n          } else {\n            this.prerelease = prerelease\n          }\n        }\n        break\n      }\n      default:\n        throw new Error(`invalid increment argument: ${release}`)\n    }\n    this.raw = this.format()\n    if (this.build.length) {\n      this.raw += `+${this.build.join('.')}`\n    }\n    return this\n  }\n}\n\nmodule.exports = SemVer\n", "const SemVer = require('../classes/semver')\nconst parse = (version, options, throwErrors = false) => {\n  if (version instanceof SemVer) {\n    return version\n  }\n  try {\n    return new SemVer(version, options)\n  } catch (er) {\n    if (!throwErrors) {\n      return null\n    }\n    throw er\n  }\n}\n\nmodule.exports = parse\n", "const parse = require('./parse')\nconst valid = (version, options) => {\n  const v = parse(version, options)\n  return v ? v.version : null\n}\nmodule.exports = valid\n", "const parse = require('./parse')\nconst clean = (version, options) => {\n  const s = parse(version.trim().replace(/^[=v]+/, ''), options)\n  return s ? s.version : null\n}\nmodule.exports = clean\n", "const SemVer = require('../classes/semver')\n\nconst inc = (version, release, options, identifier, identifierBase) => {\n  if (typeof (options) === 'string') {\n    identifierBase = identifier\n    identifier = options\n    options = undefined\n  }\n\n  try {\n    return new SemVer(\n      version instanceof SemVer ? version.version : version,\n      options\n    ).inc(release, identifier, identifierBase).version\n  } catch (er) {\n    return null\n  }\n}\nmodule.exports = inc\n", "const parse = require('./parse.js')\n\nconst diff = (version1, version2) => {\n  const v1 = parse(version1, null, true)\n  const v2 = parse(version2, null, true)\n  const comparison = v1.compare(v2)\n\n  if (comparison === 0) {\n    return null\n  }\n\n  const v1Higher = comparison > 0\n  const highVersion = v1Higher ? v1 : v2\n  const lowVersion = v1Higher ? v2 : v1\n  const highHasPre = !!highVersion.prerelease.length\n  const lowHasPre = !!lowVersion.prerelease.length\n\n  if (lowHasPre && !highHasPre) {\n    // Going from prerelease -> no prerelease requires some special casing\n\n    // If the low version has only a major, then it will always be a major\n    // Some examples:\n    // 1.0.0-1 -> 1.0.0\n    // 1.0.0-1 -> 1.1.1\n    // 1.0.0-1 -> 2.0.0\n    if (!lowVersion.patch && !lowVersion.minor) {\n      return 'major'\n    }\n\n    // Otherwise it can be determined by checking the high version\n\n    if (highVersion.patch) {\n      // anything higher than a patch bump would result in the wrong version\n      return 'patch'\n    }\n\n    if (highVersion.minor) {\n      // anything higher than a minor bump would result in the wrong version\n      return 'minor'\n    }\n\n    // bumping major/minor/patch all have same result\n    return 'major'\n  }\n\n  // add the `pre` prefix if we are going to a prerelease version\n  const prefix = highHasPre ? 'pre' : ''\n\n  if (v1.major !== v2.major) {\n    return prefix + 'major'\n  }\n\n  if (v1.minor !== v2.minor) {\n    return prefix + 'minor'\n  }\n\n  if (v1.patch !== v2.patch) {\n    return prefix + 'patch'\n  }\n\n  // high and low are preleases\n  return 'prerelease'\n}\n\nmodule.exports = diff\n", "const SemVer = require('../classes/semver')\nconst major = (a, loose) => new SemVer(a, loose).major\nmodule.exports = major\n", "const SemVer = require('../classes/semver')\nconst minor = (a, loose) => new SemVer(a, loose).minor\nmodule.exports = minor\n", "const SemVer = require('../classes/semver')\nconst patch = (a, loose) => new SemVer(a, loose).patch\nmodule.exports = patch\n", "const parse = require('./parse')\nconst prerelease = (version, options) => {\n  const parsed = parse(version, options)\n  return (parsed && parsed.prerelease.length) ? parsed.prerelease : null\n}\nmodule.exports = prerelease\n", "const SemVer = require('../classes/semver')\nconst compare = (a, b, loose) =>\n  new SemVer(a, loose).compare(new SemVer(b, loose))\n\nmodule.exports = compare\n", "const compare = require('./compare')\nconst rcompare = (a, b, loose) => compare(b, a, loose)\nmodule.exports = rcompare\n", "const compare = require('./compare')\nconst compareLoose = (a, b) => compare(a, b, true)\nmodule.exports = compareLoose\n", "const SemVer = require('../classes/semver')\nconst compareBuild = (a, b, loose) => {\n  const versionA = new SemVer(a, loose)\n  const versionB = new SemVer(b, loose)\n  return versionA.compare(versionB) || versionA.compareBuild(versionB)\n}\nmodule.exports = compareBuild\n", "const compareBuild = require('./compare-build')\nconst sort = (list, loose) => list.sort((a, b) => compareBuild(a, b, loose))\nmodule.exports = sort\n", "const compareBuild = require('./compare-build')\nconst rsort = (list, loose) => list.sort((a, b) => compareBuild(b, a, loose))\nmodule.exports = rsort\n", "const compare = require('./compare')\nconst gt = (a, b, loose) => compare(a, b, loose) > 0\nmodule.exports = gt\n", "const compare = require('./compare')\nconst lt = (a, b, loose) => compare(a, b, loose) < 0\nmodule.exports = lt\n", "const compare = require('./compare')\nconst eq = (a, b, loose) => compare(a, b, loose) === 0\nmodule.exports = eq\n", "const compare = require('./compare')\nconst neq = (a, b, loose) => compare(a, b, loose) !== 0\nmodule.exports = neq\n", "const compare = require('./compare')\nconst gte = (a, b, loose) => compare(a, b, loose) >= 0\nmodule.exports = gte\n", "const compare = require('./compare')\nconst lte = (a, b, loose) => compare(a, b, loose) <= 0\nmodule.exports = lte\n", "const eq = require('./eq')\nconst neq = require('./neq')\nconst gt = require('./gt')\nconst gte = require('./gte')\nconst lt = require('./lt')\nconst lte = require('./lte')\n\nconst cmp = (a, op, b, loose) => {\n  switch (op) {\n    case '===':\n      if (typeof a === 'object') {\n        a = a.version\n      }\n      if (typeof b === 'object') {\n        b = b.version\n      }\n      return a === b\n\n    case '!==':\n      if (typeof a === 'object') {\n        a = a.version\n      }\n      if (typeof b === 'object') {\n        b = b.version\n      }\n      return a !== b\n\n    case '':\n    case '=':\n    case '==':\n      return eq(a, b, loose)\n\n    case '!=':\n      return neq(a, b, loose)\n\n    case '>':\n      return gt(a, b, loose)\n\n    case '>=':\n      return gte(a, b, loose)\n\n    case '<':\n      return lt(a, b, loose)\n\n    case '<=':\n      return lte(a, b, loose)\n\n    default:\n      throw new TypeError(`Invalid operator: ${op}`)\n  }\n}\nmodule.exports = cmp\n", "const SemVer = require('../classes/semver')\nconst parse = require('./parse')\nconst { safeRe: re, t } = require('../internal/re')\n\nconst coerce = (version, options) => {\n  if (version instanceof SemVer) {\n    return version\n  }\n\n  if (typeof version === 'number') {\n    version = String(version)\n  }\n\n  if (typeof version !== 'string') {\n    return null\n  }\n\n  options = options || {}\n\n  let match = null\n  if (!options.rtl) {\n    match = version.match(options.includePrerelease ? re[t.COERCEFULL] : re[t.COERCE])\n  } else {\n    // Find the right-most coercible string that does not share\n    // a terminus with a more left-ward coercible string.\n    // Eg, '1.2.3.4' wants to coerce '2.3.4', not '3.4' or '4'\n    // With includePrerelease option set, '1.2.3.4-rc' wants to coerce '2.3.4-rc', not '2.3.4'\n    //\n    // Walk through the string checking with a /g regexp\n    // Manually set the index so as to pick up overlapping matches.\n    // Stop when we get a match that ends at the string end, since no\n    // coercible string can be more right-ward without the same terminus.\n    const coerceRtlRegex = options.includePrerelease ? re[t.COERCERTLFULL] : re[t.COERCERTL]\n    let next\n    while ((next = coerceRtlRegex.exec(version)) &&\n        (!match || match.index + match[0].length !== version.length)\n    ) {\n      if (!match ||\n            next.index + next[0].length !== match.index + match[0].length) {\n        match = next\n      }\n      coerceRtlRegex.lastIndex = next.index + next[1].length + next[2].length\n    }\n    // leave it in a clean state\n    coerceRtlRegex.lastIndex = -1\n  }\n\n  if (match === null) {\n    return null\n  }\n\n  const major = match[2]\n  const minor = match[3] || '0'\n  const patch = match[4] || '0'\n  const prerelease = options.includePrerelease && match[5] ? `-${match[5]}` : ''\n  const build = options.includePrerelease && match[6] ? `+${match[6]}` : ''\n\n  return parse(`${major}.${minor}.${patch}${prerelease}${build}`, options)\n}\nmodule.exports = coerce\n", "class LRUCache {\n  constructor () {\n    this.max = 1000\n    this.map = new Map()\n  }\n\n  get (key) {\n    const value = this.map.get(key)\n    if (value === undefined) {\n      return undefined\n    } else {\n      // Remove the key from the map and add it to the end\n      this.map.delete(key)\n      this.map.set(key, value)\n      return value\n    }\n  }\n\n  delete (key) {\n    return this.map.delete(key)\n  }\n\n  set (key, value) {\n    const deleted = this.delete(key)\n\n    if (!deleted && value !== undefined) {\n      // If cache is full, delete the least recently used item\n      if (this.map.size >= this.max) {\n        const firstKey = this.map.keys().next().value\n        this.delete(firstKey)\n      }\n\n      this.map.set(key, value)\n    }\n\n    return this\n  }\n}\n\nmodule.exports = LRUCache\n", "// hoisted class for cyclic dependency\nclass Range {\n  constructor (range, options) {\n    options = parseOptions(options)\n\n    if (range instanceof Range) {\n      if (\n        range.loose === !!options.loose &&\n        range.includePrerelease === !!options.includePrerelease\n      ) {\n        return range\n      } else {\n        return new Range(range.raw, options)\n      }\n    }\n\n    if (range instanceof Comparator) {\n      // just put it in the set and return\n      this.raw = range.value\n      this.set = [[range]]\n      this.format()\n      return this\n    }\n\n    this.options = options\n    this.loose = !!options.loose\n    this.includePrerelease = !!options.includePrerelease\n\n    // First reduce all whitespace as much as possible so we do not have to rely\n    // on potentially slow regexes like \\s*. This is then stored and used for\n    // future error messages as well.\n    this.raw = range\n      .trim()\n      .split(/\\s+/)\n      .join(' ')\n\n    // First, split on ||\n    this.set = this.raw\n      .split('||')\n      // map the range to a 2d array of comparators\n      .map(r => this.parseRange(r.trim()))\n      // throw out any comparator lists that are empty\n      // this generally means that it was not a valid range, which is allowed\n      // in loose mode, but will still throw if the WHOLE range is invalid.\n      .filter(c => c.length)\n\n    if (!this.set.length) {\n      throw new TypeError(`Invalid SemVer Range: ${this.raw}`)\n    }\n\n    // if we have any that are not the null set, throw out null sets.\n    if (this.set.length > 1) {\n      // keep the first one, in case they're all null sets\n      const first = this.set[0]\n      this.set = this.set.filter(c => !isNullSet(c[0]))\n      if (this.set.length === 0) {\n        this.set = [first]\n      } else if (this.set.length > 1) {\n        // if we have any that are *, then the range is just *\n        for (const c of this.set) {\n          if (c.length === 1 && isAny(c[0])) {\n            this.set = [c]\n            break\n          }\n        }\n      }\n    }\n\n    this.format()\n  }\n\n  format () {\n    this.range = this.set\n      .map((comps) => comps.join(' ').trim())\n      .join('||')\n      .trim()\n    return this.range\n  }\n\n  toString () {\n    return this.range\n  }\n\n  parseRange (range) {\n    // memoize range parsing for performance.\n    // this is a very hot path, and fully deterministic.\n    const memoOpts =\n      (this.options.includePrerelease && FLAG_INCLUDE_PRERELEASE) |\n      (this.options.loose && FLAG_LOOSE)\n    const memoKey = memoOpts + ':' + range\n    const cached = cache.get(memoKey)\n    if (cached) {\n      return cached\n    }\n\n    const loose = this.options.loose\n    // `1.2.3 - 1.2.4` => `>=1.2.3 <=1.2.4`\n    const hr = loose ? re[t.HYPHENRANGELOOSE] : re[t.HYPHENRANGE]\n    range = range.replace(hr, hyphenReplace(this.options.includePrerelease))\n    debug('hyphen replace', range)\n\n    // `> 1.2.3 < 1.2.5` => `>1.2.3 <1.2.5`\n    range = range.replace(re[t.COMPARATORTRIM], comparatorTrimReplace)\n    debug('comparator trim', range)\n\n    // `~ 1.2.3` => `~1.2.3`\n    range = range.replace(re[t.TILDETRIM], tildeTrimReplace)\n    debug('tilde trim', range)\n\n    // `^ 1.2.3` => `^1.2.3`\n    range = range.replace(re[t.CARETTRIM], caretTrimReplace)\n    debug('caret trim', range)\n\n    // At this point, the range is completely trimmed and\n    // ready to be split into comparators.\n\n    let rangeList = range\n      .split(' ')\n      .map(comp => parseComparator(comp, this.options))\n      .join(' ')\n      .split(/\\s+/)\n      // >=0.0.0 is equivalent to *\n      .map(comp => replaceGTE0(comp, this.options))\n\n    if (loose) {\n      // in loose mode, throw out any that are not valid comparators\n      rangeList = rangeList.filter(comp => {\n        debug('loose invalid filter', comp, this.options)\n        return !!comp.match(re[t.COMPARATORLOOSE])\n      })\n    }\n    debug('range list', rangeList)\n\n    // if any comparators are the null set, then replace with JUST null set\n    // if more than one comparator, remove any * comparators\n    // also, don't include the same comparator more than once\n    const rangeMap = new Map()\n    const comparators = rangeList.map(comp => new Comparator(comp, this.options))\n    for (const comp of comparators) {\n      if (isNullSet(comp)) {\n        return [comp]\n      }\n      rangeMap.set(comp.value, comp)\n    }\n    if (rangeMap.size > 1 && rangeMap.has('')) {\n      rangeMap.delete('')\n    }\n\n    const result = [...rangeMap.values()]\n    cache.set(memoKey, result)\n    return result\n  }\n\n  intersects (range, options) {\n    if (!(range instanceof Range)) {\n      throw new TypeError('a Range is required')\n    }\n\n    return this.set.some((thisComparators) => {\n      return (\n        isSatisfiable(thisComparators, options) &&\n        range.set.some((rangeComparators) => {\n          return (\n            isSatisfiable(rangeComparators, options) &&\n            thisComparators.every((thisComparator) => {\n              return rangeComparators.every((rangeComparator) => {\n                return thisComparator.intersects(rangeComparator, options)\n              })\n            })\n          )\n        })\n      )\n    })\n  }\n\n  // if ANY of the sets match ALL of its comparators, then pass\n  test (version) {\n    if (!version) {\n      return false\n    }\n\n    if (typeof version === 'string') {\n      try {\n        version = new SemVer(version, this.options)\n      } catch (er) {\n        return false\n      }\n    }\n\n    for (let i = 0; i < this.set.length; i++) {\n      if (testSet(this.set[i], version, this.options)) {\n        return true\n      }\n    }\n    return false\n  }\n}\n\nmodule.exports = Range\n\nconst LRU = require('../internal/lrucache')\nconst cache = new LRU()\n\nconst parseOptions = require('../internal/parse-options')\nconst Comparator = require('./comparator')\nconst debug = require('../internal/debug')\nconst SemVer = require('./semver')\nconst {\n  safeRe: re,\n  t,\n  comparatorTrimReplace,\n  tildeTrimReplace,\n  caretTrimReplace,\n} = require('../internal/re')\nconst { FLAG_INCLUDE_PRERELEASE, FLAG_LOOSE } = require('../internal/constants')\n\nconst isNullSet = c => c.value === '<0.0.0-0'\nconst isAny = c => c.value === ''\n\n// take a set of comparators and determine whether there\n// exists a version which can satisfy it\nconst isSatisfiable = (comparators, options) => {\n  let result = true\n  const remainingComparators = comparators.slice()\n  let testComparator = remainingComparators.pop()\n\n  while (result && remainingComparators.length) {\n    result = remainingComparators.every((otherComparator) => {\n      return testComparator.intersects(otherComparator, options)\n    })\n\n    testComparator = remainingComparators.pop()\n  }\n\n  return result\n}\n\n// comprised of xranges, tildes, stars, and gtlt's at this point.\n// already replaced the hyphen ranges\n// turn into a set of JUST comparators.\nconst parseComparator = (comp, options) => {\n  debug('comp', comp, options)\n  comp = replaceCarets(comp, options)\n  debug('caret', comp)\n  comp = replaceTildes(comp, options)\n  debug('tildes', comp)\n  comp = replaceXRanges(comp, options)\n  debug('xrange', comp)\n  comp = replaceStars(comp, options)\n  debug('stars', comp)\n  return comp\n}\n\nconst isX = id => !id || id.toLowerCase() === 'x' || id === '*'\n\n// ~, ~> --> * (any, kinda silly)\n// ~2, ~2.x, ~2.x.x, ~>2, ~>2.x ~>2.x.x --> >=2.0.0 <3.0.0-0\n// ~2.0, ~2.0.x, ~>2.0, ~>2.0.x --> >=2.0.0 <2.1.0-0\n// ~1.2, ~1.2.x, ~>1.2, ~>1.2.x --> >=1.2.0 <1.3.0-0\n// ~1.2.3, ~>1.2.3 --> >=1.2.3 <1.3.0-0\n// ~1.2.0, ~>1.2.0 --> >=1.2.0 <1.3.0-0\n// ~0.0.1 --> >=0.0.1 <0.1.0-0\nconst replaceTildes = (comp, options) => {\n  return comp\n    .trim()\n    .split(/\\s+/)\n    .map((c) => replaceTilde(c, options))\n    .join(' ')\n}\n\nconst replaceTilde = (comp, options) => {\n  const r = options.loose ? re[t.TILDELOOSE] : re[t.TILDE]\n  return comp.replace(r, (_, M, m, p, pr) => {\n    debug('tilde', comp, _, M, m, p, pr)\n    let ret\n\n    if (isX(M)) {\n      ret = ''\n    } else if (isX(m)) {\n      ret = `>=${M}.0.0 <${+M + 1}.0.0-0`\n    } else if (isX(p)) {\n      // ~1.2 == >=1.2.0 <1.3.0-0\n      ret = `>=${M}.${m}.0 <${M}.${+m + 1}.0-0`\n    } else if (pr) {\n      debug('replaceTilde pr', pr)\n      ret = `>=${M}.${m}.${p}-${pr\n      } <${M}.${+m + 1}.0-0`\n    } else {\n      // ~1.2.3 == >=1.2.3 <1.3.0-0\n      ret = `>=${M}.${m}.${p\n      } <${M}.${+m + 1}.0-0`\n    }\n\n    debug('tilde return', ret)\n    return ret\n  })\n}\n\n// ^ --> * (any, kinda silly)\n// ^2, ^2.x, ^2.x.x --> >=2.0.0 <3.0.0-0\n// ^2.0, ^2.0.x --> >=2.0.0 <3.0.0-0\n// ^1.2, ^1.2.x --> >=1.2.0 <2.0.0-0\n// ^1.2.3 --> >=1.2.3 <2.0.0-0\n// ^1.2.0 --> >=1.2.0 <2.0.0-0\n// ^0.0.1 --> >=0.0.1 <0.0.2-0\n// ^0.1.0 --> >=0.1.0 <0.2.0-0\nconst replaceCarets = (comp, options) => {\n  return comp\n    .trim()\n    .split(/\\s+/)\n    .map((c) => replaceCaret(c, options))\n    .join(' ')\n}\n\nconst replaceCaret = (comp, options) => {\n  debug('caret', comp, options)\n  const r = options.loose ? re[t.CARETLOOSE] : re[t.CARET]\n  const z = options.includePrerelease ? '-0' : ''\n  return comp.replace(r, (_, M, m, p, pr) => {\n    debug('caret', comp, _, M, m, p, pr)\n    let ret\n\n    if (isX(M)) {\n      ret = ''\n    } else if (isX(m)) {\n      ret = `>=${M}.0.0${z} <${+M + 1}.0.0-0`\n    } else if (isX(p)) {\n      if (M === '0') {\n        ret = `>=${M}.${m}.0${z} <${M}.${+m + 1}.0-0`\n      } else {\n        ret = `>=${M}.${m}.0${z} <${+M + 1}.0.0-0`\n      }\n    } else if (pr) {\n      debug('replaceCaret pr', pr)\n      if (M === '0') {\n        if (m === '0') {\n          ret = `>=${M}.${m}.${p}-${pr\n          } <${M}.${m}.${+p + 1}-0`\n        } else {\n          ret = `>=${M}.${m}.${p}-${pr\n          } <${M}.${+m + 1}.0-0`\n        }\n      } else {\n        ret = `>=${M}.${m}.${p}-${pr\n        } <${+M + 1}.0.0-0`\n      }\n    } else {\n      debug('no pr')\n      if (M === '0') {\n        if (m === '0') {\n          ret = `>=${M}.${m}.${p\n          }${z} <${M}.${m}.${+p + 1}-0`\n        } else {\n          ret = `>=${M}.${m}.${p\n          }${z} <${M}.${+m + 1}.0-0`\n        }\n      } else {\n        ret = `>=${M}.${m}.${p\n        } <${+M + 1}.0.0-0`\n      }\n    }\n\n    debug('caret return', ret)\n    return ret\n  })\n}\n\nconst replaceXRanges = (comp, options) => {\n  debug('replaceXRanges', comp, options)\n  return comp\n    .split(/\\s+/)\n    .map((c) => replaceXRange(c, options))\n    .join(' ')\n}\n\nconst replaceXRange = (comp, options) => {\n  comp = comp.trim()\n  const r = options.loose ? re[t.XRANGELOOSE] : re[t.XRANGE]\n  return comp.replace(r, (ret, gtlt, M, m, p, pr) => {\n    debug('xRange', comp, ret, gtlt, M, m, p, pr)\n    const xM = isX(M)\n    const xm = xM || isX(m)\n    const xp = xm || isX(p)\n    const anyX = xp\n\n    if (gtlt === '=' && anyX) {\n      gtlt = ''\n    }\n\n    // if we're including prereleases in the match, then we need\n    // to fix this to -0, the lowest possible prerelease value\n    pr = options.includePrerelease ? '-0' : ''\n\n    if (xM) {\n      if (gtlt === '>' || gtlt === '<') {\n        // nothing is allowed\n        ret = '<0.0.0-0'\n      } else {\n        // nothing is forbidden\n        ret = '*'\n      }\n    } else if (gtlt && anyX) {\n      // we know patch is an x, because we have any x at all.\n      // replace X with 0\n      if (xm) {\n        m = 0\n      }\n      p = 0\n\n      if (gtlt === '>') {\n        // >1 => >=2.0.0\n        // >1.2 => >=1.3.0\n        gtlt = '>='\n        if (xm) {\n          M = +M + 1\n          m = 0\n          p = 0\n        } else {\n          m = +m + 1\n          p = 0\n        }\n      } else if (gtlt === '<=') {\n        // <=0.7.x is actually <0.8.0, since any 0.7.x should\n        // pass.  Similarly, <=7.x is actually <8.0.0, etc.\n        gtlt = '<'\n        if (xm) {\n          M = +M + 1\n        } else {\n          m = +m + 1\n        }\n      }\n\n      if (gtlt === '<') {\n        pr = '-0'\n      }\n\n      ret = `${gtlt + M}.${m}.${p}${pr}`\n    } else if (xm) {\n      ret = `>=${M}.0.0${pr} <${+M + 1}.0.0-0`\n    } else if (xp) {\n      ret = `>=${M}.${m}.0${pr\n      } <${M}.${+m + 1}.0-0`\n    }\n\n    debug('xRange return', ret)\n\n    return ret\n  })\n}\n\n// Because * is AND-ed with everything else in the comparator,\n// and '' means \"any version\", just remove the *s entirely.\nconst replaceStars = (comp, options) => {\n  debug('replaceStars', comp, options)\n  // Looseness is ignored here.  star is always as loose as it gets!\n  return comp\n    .trim()\n    .replace(re[t.STAR], '')\n}\n\nconst replaceGTE0 = (comp, options) => {\n  debug('replaceGTE0', comp, options)\n  return comp\n    .trim()\n    .replace(re[options.includePrerelease ? t.GTE0PRE : t.GTE0], '')\n}\n\n// This function is passed to string.replace(re[t.HYPHENRANGE])\n// M, m, patch, prerelease, build\n// 1.2 - 3.4.5 => >=1.2.0 <=3.4.5\n// 1.2.3 - 3.4 => >=1.2.0 <3.5.0-0 Any 3.4.x will do\n// 1.2 - 3.4 => >=1.2.0 <3.5.0-0\n// TODO build?\nconst hyphenReplace = incPr => ($0,\n  from, fM, fm, fp, fpr, fb,\n  to, tM, tm, tp, tpr) => {\n  if (isX(fM)) {\n    from = ''\n  } else if (isX(fm)) {\n    from = `>=${fM}.0.0${incPr ? '-0' : ''}`\n  } else if (isX(fp)) {\n    from = `>=${fM}.${fm}.0${incPr ? '-0' : ''}`\n  } else if (fpr) {\n    from = `>=${from}`\n  } else {\n    from = `>=${from}${incPr ? '-0' : ''}`\n  }\n\n  if (isX(tM)) {\n    to = ''\n  } else if (isX(tm)) {\n    to = `<${+tM + 1}.0.0-0`\n  } else if (isX(tp)) {\n    to = `<${tM}.${+tm + 1}.0-0`\n  } else if (tpr) {\n    to = `<=${tM}.${tm}.${tp}-${tpr}`\n  } else if (incPr) {\n    to = `<${tM}.${tm}.${+tp + 1}-0`\n  } else {\n    to = `<=${to}`\n  }\n\n  return `${from} ${to}`.trim()\n}\n\nconst testSet = (set, version, options) => {\n  for (let i = 0; i < set.length; i++) {\n    if (!set[i].test(version)) {\n      return false\n    }\n  }\n\n  if (version.prerelease.length && !options.includePrerelease) {\n    // Find the set of versions that are allowed to have prereleases\n    // For example, ^1.2.3-pr.1 desugars to >=1.2.3-pr.1 <2.0.0\n    // That should allow `1.2.3-pr.2` to pass.\n    // However, `1.2.4-alpha.notready` should NOT be allowed,\n    // even though it's within the range set by the comparators.\n    for (let i = 0; i < set.length; i++) {\n      debug(set[i].semver)\n      if (set[i].semver === Comparator.ANY) {\n        continue\n      }\n\n      if (set[i].semver.prerelease.length > 0) {\n        const allowed = set[i].semver\n        if (allowed.major === version.major &&\n            allowed.minor === version.minor &&\n            allowed.patch === version.patch) {\n          return true\n        }\n      }\n    }\n\n    // Version has a -pre, but it's not one of the ones we like.\n    return false\n  }\n\n  return true\n}\n", "const ANY = Symbol('SemVer ANY')\n// hoisted class for cyclic dependency\nclass Comparator {\n  static get ANY () {\n    return ANY\n  }\n\n  constructor (comp, options) {\n    options = parseOptions(options)\n\n    if (comp instanceof Comparator) {\n      if (comp.loose === !!options.loose) {\n        return comp\n      } else {\n        comp = comp.value\n      }\n    }\n\n    comp = comp.trim().split(/\\s+/).join(' ')\n    debug('comparator', comp, options)\n    this.options = options\n    this.loose = !!options.loose\n    this.parse(comp)\n\n    if (this.semver === ANY) {\n      this.value = ''\n    } else {\n      this.value = this.operator + this.semver.version\n    }\n\n    debug('comp', this)\n  }\n\n  parse (comp) {\n    const r = this.options.loose ? re[t.COMPARATORLOOSE] : re[t.COMPARATOR]\n    const m = comp.match(r)\n\n    if (!m) {\n      throw new TypeError(`Invalid comparator: ${comp}`)\n    }\n\n    this.operator = m[1] !== undefined ? m[1] : ''\n    if (this.operator === '=') {\n      this.operator = ''\n    }\n\n    // if it literally is just '>' or '' then allow anything.\n    if (!m[2]) {\n      this.semver = ANY\n    } else {\n      this.semver = new SemVer(m[2], this.options.loose)\n    }\n  }\n\n  toString () {\n    return this.value\n  }\n\n  test (version) {\n    debug('Comparator.test', version, this.options.loose)\n\n    if (this.semver === ANY || version === ANY) {\n      return true\n    }\n\n    if (typeof version === 'string') {\n      try {\n        version = new SemVer(version, this.options)\n      } catch (er) {\n        return false\n      }\n    }\n\n    return cmp(version, this.operator, this.semver, this.options)\n  }\n\n  intersects (comp, options) {\n    if (!(comp instanceof Comparator)) {\n      throw new TypeError('a Comparator is required')\n    }\n\n    if (this.operator === '') {\n      if (this.value === '') {\n        return true\n      }\n      return new Range(comp.value, options).test(this.value)\n    } else if (comp.operator === '') {\n      if (comp.value === '') {\n        return true\n      }\n      return new Range(this.value, options).test(comp.semver)\n    }\n\n    options = parseOptions(options)\n\n    // Special cases where nothing can possibly be lower\n    if (options.includePrerelease &&\n      (this.value === '<0.0.0-0' || comp.value === '<0.0.0-0')) {\n      return false\n    }\n    if (!options.includePrerelease &&\n      (this.value.startsWith('<0.0.0') || comp.value.startsWith('<0.0.0'))) {\n      return false\n    }\n\n    // Same direction increasing (> or >=)\n    if (this.operator.startsWith('>') && comp.operator.startsWith('>')) {\n      return true\n    }\n    // Same direction decreasing (< or <=)\n    if (this.operator.startsWith('<') && comp.operator.startsWith('<')) {\n      return true\n    }\n    // same SemVer and both sides are inclusive (<= or >=)\n    if (\n      (this.semver.version === comp.semver.version) &&\n      this.operator.includes('=') && comp.operator.includes('=')) {\n      return true\n    }\n    // opposite directions less than\n    if (cmp(this.semver, '<', comp.semver, options) &&\n      this.operator.startsWith('>') && comp.operator.startsWith('<')) {\n      return true\n    }\n    // opposite directions greater than\n    if (cmp(this.semver, '>', comp.semver, options) &&\n      this.operator.startsWith('<') && comp.operator.startsWith('>')) {\n      return true\n    }\n    return false\n  }\n}\n\nmodule.exports = Comparator\n\nconst parseOptions = require('../internal/parse-options')\nconst { safeRe: re, t } = require('../internal/re')\nconst cmp = require('../functions/cmp')\nconst debug = require('../internal/debug')\nconst SemVer = require('./semver')\nconst Range = require('./range')\n", "const Range = require('../classes/range')\nconst satisfies = (version, range, options) => {\n  try {\n    range = new Range(range, options)\n  } catch (er) {\n    return false\n  }\n  return range.test(version)\n}\nmodule.exports = satisfies\n", "const Range = require('../classes/range')\n\n// Mostly just for testing and legacy API reasons\nconst toComparators = (range, options) =>\n  new Range(range, options).set\n    .map(comp => comp.map(c => c.value).join(' ').trim().split(' '))\n\nmodule.exports = toComparators\n", "const SemVer = require('../classes/semver')\nconst Range = require('../classes/range')\n\nconst maxSatisfying = (versions, range, options) => {\n  let max = null\n  let maxSV = null\n  let rangeObj = null\n  try {\n    rangeObj = new Range(range, options)\n  } catch (er) {\n    return null\n  }\n  versions.forEach((v) => {\n    if (rangeObj.test(v)) {\n      // satisfies(v, range, options)\n      if (!max || maxSV.compare(v) === -1) {\n        // compare(max, v, true)\n        max = v\n        maxSV = new SemVer(max, options)\n      }\n    }\n  })\n  return max\n}\nmodule.exports = maxSatisfying\n", "const SemVer = require('../classes/semver')\nconst Range = require('../classes/range')\nconst minSatisfying = (versions, range, options) => {\n  let min = null\n  let minSV = null\n  let rangeObj = null\n  try {\n    rangeObj = new Range(range, options)\n  } catch (er) {\n    return null\n  }\n  versions.forEach((v) => {\n    if (rangeObj.test(v)) {\n      // satisfies(v, range, options)\n      if (!min || minSV.compare(v) === 1) {\n        // compare(min, v, true)\n        min = v\n        minSV = new SemVer(min, options)\n      }\n    }\n  })\n  return min\n}\nmodule.exports = minSatisfying\n", "const SemVer = require('../classes/semver')\nconst Range = require('../classes/range')\nconst gt = require('../functions/gt')\n\nconst minVersion = (range, loose) => {\n  range = new Range(range, loose)\n\n  let minver = new SemVer('0.0.0')\n  if (range.test(minver)) {\n    return minver\n  }\n\n  minver = new SemVer('0.0.0-0')\n  if (range.test(minver)) {\n    return minver\n  }\n\n  minver = null\n  for (let i = 0; i < range.set.length; ++i) {\n    const comparators = range.set[i]\n\n    let setMin = null\n    comparators.forEach((comparator) => {\n      // Clone to avoid manipulating the comparator's semver object.\n      const compver = new SemVer(comparator.semver.version)\n      switch (comparator.operator) {\n        case '>':\n          if (compver.prerelease.length === 0) {\n            compver.patch++\n          } else {\n            compver.prerelease.push(0)\n          }\n          compver.raw = compver.format()\n          /* fallthrough */\n        case '':\n        case '>=':\n          if (!setMin || gt(compver, setMin)) {\n            setMin = compver\n          }\n          break\n        case '<':\n        case '<=':\n          /* Ignore maximum versions */\n          break\n        /* istanbul ignore next */\n        default:\n          throw new Error(`Unexpected operation: ${comparator.operator}`)\n      }\n    })\n    if (setMin && (!minver || gt(minver, setMin))) {\n      minver = setMin\n    }\n  }\n\n  if (minver && range.test(minver)) {\n    return minver\n  }\n\n  return null\n}\nmodule.exports = minVersion\n", "const Range = require('../classes/range')\nconst validRange = (range, options) => {\n  try {\n    // Return '*' instead of '' so that truthiness works.\n    // This will throw if it's invalid anyway\n    return new Range(range, options).range || '*'\n  } catch (er) {\n    return null\n  }\n}\nmodule.exports = validRange\n", "const SemVer = require('../classes/semver')\nconst Comparator = require('../classes/comparator')\nconst { ANY } = Comparator\nconst Range = require('../classes/range')\nconst satisfies = require('../functions/satisfies')\nconst gt = require('../functions/gt')\nconst lt = require('../functions/lt')\nconst lte = require('../functions/lte')\nconst gte = require('../functions/gte')\n\nconst outside = (version, range, hilo, options) => {\n  version = new SemVer(version, options)\n  range = new Range(range, options)\n\n  let gtfn, ltefn, ltfn, comp, ecomp\n  switch (hilo) {\n    case '>':\n      gtfn = gt\n      ltefn = lte\n      ltfn = lt\n      comp = '>'\n      ecomp = '>='\n      break\n    case '<':\n      gtfn = lt\n      ltefn = gte\n      ltfn = gt\n      comp = '<'\n      ecomp = '<='\n      break\n    default:\n      throw new TypeError('Must provide a hilo val of \"<\" or \">\"')\n  }\n\n  // If it satisfies the range it is not outside\n  if (satisfies(version, range, options)) {\n    return false\n  }\n\n  // From now on, variable terms are as if we're in \"gtr\" mode.\n  // but note that everything is flipped for the \"ltr\" function.\n\n  for (let i = 0; i < range.set.length; ++i) {\n    const comparators = range.set[i]\n\n    let high = null\n    let low = null\n\n    comparators.forEach((comparator) => {\n      if (comparator.semver === ANY) {\n        comparator = new Comparator('>=0.0.0')\n      }\n      high = high || comparator\n      low = low || comparator\n      if (gtfn(comparator.semver, high.semver, options)) {\n        high = comparator\n      } else if (ltfn(comparator.semver, low.semver, options)) {\n        low = comparator\n      }\n    })\n\n    // If the edge version comparator has a operator then our version\n    // isn't outside it\n    if (high.operator === comp || high.operator === ecomp) {\n      return false\n    }\n\n    // If the lowest version comparator has an operator and our version\n    // is less than it then it isn't higher than the range\n    if ((!low.operator || low.operator === comp) &&\n        ltefn(version, low.semver)) {\n      return false\n    } else if (low.operator === ecomp && ltfn(version, low.semver)) {\n      return false\n    }\n  }\n  return true\n}\n\nmodule.exports = outside\n", "// Determine if version is greater than all the versions possible in the range.\nconst outside = require('./outside')\nconst gtr = (version, range, options) => outside(version, range, '>', options)\nmodule.exports = gtr\n", "const outside = require('./outside')\n// Determine if version is less than all the versions possible in the range\nconst ltr = (version, range, options) => outside(version, range, '<', options)\nmodule.exports = ltr\n", "const Range = require('../classes/range')\nconst intersects = (r1, r2, options) => {\n  r1 = new Range(r1, options)\n  r2 = new Range(r2, options)\n  return r1.intersects(r2, options)\n}\nmodule.exports = intersects\n", "// given a set of versions and a range, create a \"simplified\" range\n// that includes the same versions that the original range does\n// If the original range is shorter than the simplified one, return that.\nconst satisfies = require('../functions/satisfies.js')\nconst compare = require('../functions/compare.js')\nmodule.exports = (versions, range, options) => {\n  const set = []\n  let first = null\n  let prev = null\n  const v = versions.sort((a, b) => compare(a, b, options))\n  for (const version of v) {\n    const included = satisfies(version, range, options)\n    if (included) {\n      prev = version\n      if (!first) {\n        first = version\n      }\n    } else {\n      if (prev) {\n        set.push([first, prev])\n      }\n      prev = null\n      first = null\n    }\n  }\n  if (first) {\n    set.push([first, null])\n  }\n\n  const ranges = []\n  for (const [min, max] of set) {\n    if (min === max) {\n      ranges.push(min)\n    } else if (!max && min === v[0]) {\n      ranges.push('*')\n    } else if (!max) {\n      ranges.push(`>=${min}`)\n    } else if (min === v[0]) {\n      ranges.push(`<=${max}`)\n    } else {\n      ranges.push(`${min} - ${max}`)\n    }\n  }\n  const simplified = ranges.join(' || ')\n  const original = typeof range.raw === 'string' ? range.raw : String(range)\n  return simplified.length < original.length ? simplified : range\n}\n", "const Range = require('../classes/range.js')\nconst Comparator = require('../classes/comparator.js')\nconst { ANY } = Comparator\nconst satisfies = require('../functions/satisfies.js')\nconst compare = require('../functions/compare.js')\n\n// Complex range `r1 || r2 || ...` is a subset of `R1 || R2 || ...` iff:\n// - Every simple range `r1, r2, ...` is a null set, OR\n// - Every simple range `r1, r2, ...` which is not a null set is a subset of\n//   some `R1, R2, ...`\n//\n// Simple range `c1 c2 ...` is a subset of simple range `C1 C2 ...` iff:\n// - If c is only the ANY comparator\n//   - If C is only the ANY comparator, return true\n//   - Else if in prerelease mode, return false\n//   - else replace c with `[>=0.0.0]`\n// - If C is only the ANY comparator\n//   - if in prerelease mode, return true\n//   - else replace C with `[>=0.0.0]`\n// - Let EQ be the set of = comparators in c\n// - If EQ is more than one, return true (null set)\n// - Let GT be the highest > or >= comparator in c\n// - Let LT be the lowest < or <= comparator in c\n// - If GT and LT, and GT.semver > LT.semver, return true (null set)\n// - If any C is a = range, and GT or LT are set, return false\n// - If EQ\n//   - If GT, and EQ does not satisfy GT, return true (null set)\n//   - If LT, and EQ does not satisfy LT, return true (null set)\n//   - If EQ satisfies every C, return true\n//   - Else return false\n// - If GT\n//   - If GT.semver is lower than any > or >= comp in C, return false\n//   - If GT is >=, and GT.semver does not satisfy every C, return false\n//   - If GT.semver has a prerelease, and not in prerelease mode\n//     - If no C has a prerelease and the GT.semver tuple, return false\n// - If LT\n//   - If LT.semver is greater than any < or <= comp in C, return false\n//   - If LT is <=, and LT.semver does not satisfy every C, return false\n//   - If GT.semver has a prerelease, and not in prerelease mode\n//     - If no C has a prerelease and the LT.semver tuple, return false\n// - Else return true\n\nconst subset = (sub, dom, options = {}) => {\n  if (sub === dom) {\n    return true\n  }\n\n  sub = new Range(sub, options)\n  dom = new Range(dom, options)\n  let sawNonNull = false\n\n  OUTER: for (const simpleSub of sub.set) {\n    for (const simpleDom of dom.set) {\n      const isSub = simpleSubset(simpleSub, simpleDom, options)\n      sawNonNull = sawNonNull || isSub !== null\n      if (isSub) {\n        continue OUTER\n      }\n    }\n    // the null set is a subset of everything, but null simple ranges in\n    // a complex range should be ignored.  so if we saw a non-null range,\n    // then we know this isn't a subset, but if EVERY simple range was null,\n    // then it is a subset.\n    if (sawNonNull) {\n      return false\n    }\n  }\n  return true\n}\n\nconst minimumVersionWithPreRelease = [new Comparator('>=0.0.0-0')]\nconst minimumVersion = [new Comparator('>=0.0.0')]\n\nconst simpleSubset = (sub, dom, options) => {\n  if (sub === dom) {\n    return true\n  }\n\n  if (sub.length === 1 && sub[0].semver === ANY) {\n    if (dom.length === 1 && dom[0].semver === ANY) {\n      return true\n    } else if (options.includePrerelease) {\n      sub = minimumVersionWithPreRelease\n    } else {\n      sub = minimumVersion\n    }\n  }\n\n  if (dom.length === 1 && dom[0].semver === ANY) {\n    if (options.includePrerelease) {\n      return true\n    } else {\n      dom = minimumVersion\n    }\n  }\n\n  const eqSet = new Set()\n  let gt, lt\n  for (const c of sub) {\n    if (c.operator === '>' || c.operator === '>=') {\n      gt = higherGT(gt, c, options)\n    } else if (c.operator === '<' || c.operator === '<=') {\n      lt = lowerLT(lt, c, options)\n    } else {\n      eqSet.add(c.semver)\n    }\n  }\n\n  if (eqSet.size > 1) {\n    return null\n  }\n\n  let gtltComp\n  if (gt && lt) {\n    gtltComp = compare(gt.semver, lt.semver, options)\n    if (gtltComp > 0) {\n      return null\n    } else if (gtltComp === 0 && (gt.operator !== '>=' || lt.operator !== '<=')) {\n      return null\n    }\n  }\n\n  // will iterate one or zero times\n  for (const eq of eqSet) {\n    if (gt && !satisfies(eq, String(gt), options)) {\n      return null\n    }\n\n    if (lt && !satisfies(eq, String(lt), options)) {\n      return null\n    }\n\n    for (const c of dom) {\n      if (!satisfies(eq, String(c), options)) {\n        return false\n      }\n    }\n\n    return true\n  }\n\n  let higher, lower\n  let hasDomLT, hasDomGT\n  // if the subset has a prerelease, we need a comparator in the superset\n  // with the same tuple and a prerelease, or it's not a subset\n  let needDomLTPre = lt &&\n    !options.includePrerelease &&\n    lt.semver.prerelease.length ? lt.semver : false\n  let needDomGTPre = gt &&\n    !options.includePrerelease &&\n    gt.semver.prerelease.length ? gt.semver : false\n  // exception: <1.2.3-0 is the same as <1.2.3\n  if (needDomLTPre && needDomLTPre.prerelease.length === 1 &&\n      lt.operator === '<' && needDomLTPre.prerelease[0] === 0) {\n    needDomLTPre = false\n  }\n\n  for (const c of dom) {\n    hasDomGT = hasDomGT || c.operator === '>' || c.operator === '>='\n    hasDomLT = hasDomLT || c.operator === '<' || c.operator === '<='\n    if (gt) {\n      if (needDomGTPre) {\n        if (c.semver.prerelease && c.semver.prerelease.length &&\n            c.semver.major === needDomGTPre.major &&\n            c.semver.minor === needDomGTPre.minor &&\n            c.semver.patch === needDomGTPre.patch) {\n          needDomGTPre = false\n        }\n      }\n      if (c.operator === '>' || c.operator === '>=') {\n        higher = higherGT(gt, c, options)\n        if (higher === c && higher !== gt) {\n          return false\n        }\n      } else if (gt.operator === '>=' && !satisfies(gt.semver, String(c), options)) {\n        return false\n      }\n    }\n    if (lt) {\n      if (needDomLTPre) {\n        if (c.semver.prerelease && c.semver.prerelease.length &&\n            c.semver.major === needDomLTPre.major &&\n            c.semver.minor === needDomLTPre.minor &&\n            c.semver.patch === needDomLTPre.patch) {\n          needDomLTPre = false\n        }\n      }\n      if (c.operator === '<' || c.operator === '<=') {\n        lower = lowerLT(lt, c, options)\n        if (lower === c && lower !== lt) {\n          return false\n        }\n      } else if (lt.operator === '<=' && !satisfies(lt.semver, String(c), options)) {\n        return false\n      }\n    }\n    if (!c.operator && (lt || gt) && gtltComp !== 0) {\n      return false\n    }\n  }\n\n  // if there was a < or >, and nothing in the dom, then must be false\n  // UNLESS it was limited by another range in the other direction.\n  // Eg, >1.0.0 <1.0.1 is still a subset of <2.0.0\n  if (gt && hasDomLT && !lt && gtltComp !== 0) {\n    return false\n  }\n\n  if (lt && hasDomGT && !gt && gtltComp !== 0) {\n    return false\n  }\n\n  // we needed a prerelease range in a specific tuple, but didn't get one\n  // then this isn't a subset.  eg >=1.2.3-pre is not a subset of >=1.0.0,\n  // because it includes prereleases in the 1.2.3 tuple\n  if (needDomGTPre || needDomLTPre) {\n    return false\n  }\n\n  return true\n}\n\n// >=1.2.3 is lower than >1.2.3\nconst higherGT = (a, b, options) => {\n  if (!a) {\n    return b\n  }\n  const comp = compare(a.semver, b.semver, options)\n  return comp > 0 ? a\n    : comp < 0 ? b\n    : b.operator === '>' && a.operator === '>=' ? b\n    : a\n}\n\n// <=1.2.3 is higher than <1.2.3\nconst lowerLT = (a, b, options) => {\n  if (!a) {\n    return b\n  }\n  const comp = compare(a.semver, b.semver, options)\n  return comp < 0 ? a\n    : comp > 0 ? b\n    : b.operator === '<' && a.operator === '<=' ? b\n    : a\n}\n\nmodule.exports = subset\n", "// just pre-load all the stuff that index.js lazily exports\nconst internalRe = require('./internal/re')\nconst constants = require('./internal/constants')\nconst SemVer = require('./classes/semver')\nconst identifiers = require('./internal/identifiers')\nconst parse = require('./functions/parse')\nconst valid = require('./functions/valid')\nconst clean = require('./functions/clean')\nconst inc = require('./functions/inc')\nconst diff = require('./functions/diff')\nconst major = require('./functions/major')\nconst minor = require('./functions/minor')\nconst patch = require('./functions/patch')\nconst prerelease = require('./functions/prerelease')\nconst compare = require('./functions/compare')\nconst rcompare = require('./functions/rcompare')\nconst compareLoose = require('./functions/compare-loose')\nconst compareBuild = require('./functions/compare-build')\nconst sort = require('./functions/sort')\nconst rsort = require('./functions/rsort')\nconst gt = require('./functions/gt')\nconst lt = require('./functions/lt')\nconst eq = require('./functions/eq')\nconst neq = require('./functions/neq')\nconst gte = require('./functions/gte')\nconst lte = require('./functions/lte')\nconst cmp = require('./functions/cmp')\nconst coerce = require('./functions/coerce')\nconst Comparator = require('./classes/comparator')\nconst Range = require('./classes/range')\nconst satisfies = require('./functions/satisfies')\nconst toComparators = require('./ranges/to-comparators')\nconst maxSatisfying = require('./ranges/max-satisfying')\nconst minSatisfying = require('./ranges/min-satisfying')\nconst minVersion = require('./ranges/min-version')\nconst validRange = require('./ranges/valid')\nconst outside = require('./ranges/outside')\nconst gtr = require('./ranges/gtr')\nconst ltr = require('./ranges/ltr')\nconst intersects = require('./ranges/intersects')\nconst simplifyRange = require('./ranges/simplify')\nconst subset = require('./ranges/subset')\nmodule.exports = {\n  parse,\n  valid,\n  clean,\n  inc,\n  diff,\n  major,\n  minor,\n  patch,\n  prerelease,\n  compare,\n  rcompare,\n  compareLoose,\n  compareBuild,\n  sort,\n  rsort,\n  gt,\n  lt,\n  eq,\n  neq,\n  gte,\n  lte,\n  cmp,\n  coerce,\n  Comparator,\n  Range,\n  satisfies,\n  toComparators,\n  maxSatisfying,\n  minSatisfying,\n  minVersion,\n  validRange,\n  outside,\n  gtr,\n  ltr,\n  intersects,\n  simplifyRange,\n  subset,\n  SemVer,\n  re: internalRe.re,\n  src: internalRe.src,\n  tokens: internalRe.t,\n  SEMVER_SPEC_VERSION: constants.SEMVER_SPEC_VERSION,\n  RELEASE_TYPES: constants.RELEASE_TYPES,\n  compareIdentifiers: identifiers.compareIdentifiers,\n  rcompareIdentifiers: identifiers.rcompareIdentifiers,\n}\n", "{\n  \"name\": \"systeminformation\",\n  \"version\": \"5.22.11\",\n  \"description\": \"Advanced, lightweight system and OS information library\",\n  \"license\": \"MIT\",\n  \"author\": \"Sebastian Hildebrandt <hildebrandt@plus-innovations.com> (https://plus-innovations.com)\",\n  \"homepage\": \"https://systeminformation.io\",\n  \"main\": \"./lib/index.js\",\n  \"bin\": {\n    \"systeminformation\": \"lib/cli.js\"\n  },\n  \"types\": \"./lib/index.d.ts\",\n  \"scripts\": {\n    \"test\": \"node ./test/test.js\"\n  },\n  \"files\": [\n    \"lib/\"\n  ],\n  \"keywords\": [\n    \"system information\",\n    \"sysinfo\",\n    \"monitor\",\n    \"monitoring\",\n    \"os\",\n    \"linux\",\n    \"osx\",\n    \"windows\",\n    \"freebsd\",\n    \"openbsd\",\n    \"netbsd\",\n    \"cpu\",\n    \"cpuload\",\n    \"physical cores\",\n    \"logical cores\",\n    \"processor\",\n    \"cores\",\n    \"threads\",\n    \"socket type\",\n    \"memory\",\n    \"file system\",\n    \"fsstats\",\n    \"diskio\",\n    \"block devices\",\n    \"netstats\",\n    \"network\",\n    \"network interfaces\",\n    \"network connections\",\n    \"network stats\",\n    \"iface\",\n    \"printer\",\n    \"processes\",\n    \"users\",\n    \"internet\",\n    \"battery\",\n    \"docker\",\n    \"docker stats\",\n    \"docker processes\",\n    \"graphics\",\n    \"graphic card\",\n    \"graphic controller\",\n    \"gpu\",\n    \"display\",\n    \"smart\",\n    \"disk layout\",\n    \"usb\",\n    \"audio\",\n    \"bluetooth\",\n    \"wifi\",\n    \"wifinetworks\",\n    \"virtual box\",\n    \"virtualbox\",\n    \"vm\",\n    \"backend\",\n    \"hardware\",\n    \"BIOS\",\n    \"chassis\"\n  ],\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"https://github.com/sebhildebrandt/systeminformation.git\"\n  },\n  \"funding\": {\n    \"type\": \"Buy me a coffee\",\n    \"url\": \"https://www.buymeacoffee.com/systeminfo\"\n  },\n  \"os\": [\n    \"darwin\",\n    \"linux\",\n    \"win32\",\n    \"freebsd\",\n    \"openbsd\",\n    \"netbsd\",\n    \"sunos\",\n    \"android\"\n  ],\n  \"engines\": {\n    \"node\": \">=8.0.0\"\n  }\n}\n", "'use strict';\n// @ts-check\n// ==================================================================================\n// utils.js\n// ----------------------------------------------------------------------------------\n// Description:   System Information - library\n//                for Node.js\n// Copyright:     (c) 2014 - 2024\n// Author:        Sebastian Hildebrandt\n// ----------------------------------------------------------------------------------\n// License:       MIT\n// ==================================================================================\n// 0. helper functions\n// ----------------------------------------------------------------------------------\n\nconst os = require('os');\nconst fs = require('fs');\nconst path = require('path');\nconst spawn = require('child_process').spawn;\nconst exec = require('child_process').exec;\nconst execSync = require('child_process').execSync;\nconst util = require('util');\n\nlet _platform = process.platform;\nconst _linux = (_platform === 'linux' || _platform === 'android');\nconst _darwin = (_platform === 'darwin');\nconst _windows = (_platform === 'win32');\nconst _freebsd = (_platform === 'freebsd');\nconst _openbsd = (_platform === 'openbsd');\nconst _netbsd = (_platform === 'netbsd');\n\nlet _cores = 0;\nlet wmicPath = '';\nlet codepage = '';\nlet _smartMonToolsInstalled = null;\nlet _rpi_cpuinfo = null;\n\nconst WINDIR = process.env.WINDIR || 'C:\\\\Windows';\n\n// powerShell\nlet _psChild;\nlet _psResult = '';\nlet _psCmds = [];\nlet _psPersistent = false;\nconst _psToUTF8 = '$OutputEncoding = [System.Console]::OutputEncoding = [System.Console]::InputEncoding = [System.Text.Encoding]::UTF8 ; ';\nconst _psCmdStart = '--###START###--';\nconst _psError = '--ERROR--';\nconst _psCmdSeperator = '--###ENDCMD###--';\nconst _psIdSeperator = '--##ID##--';\n\nconst execOptsWin = {\n  windowsHide: true,\n  maxBuffer: 1024 * 20000,\n  encoding: 'UTF-8',\n  env: Object.assign({}, process.env, { LANG: 'en_US.UTF-8' })\n};\n\nfunction toInt(value) {\n  let result = parseInt(value, 10);\n  if (isNaN(result)) {\n    result = 0;\n  }\n  return result;\n}\n\nfunction splitByNumber(str) {\n  let numberStarted = false;\n  let num = '';\n  let cpart = '';\n  for (const c of str) {\n    if ((c >= '0' && c <= '9') || numberStarted) {\n      numberStarted = true;\n      num += c;\n    } else {\n      cpart += c;\n    }\n  }\n  return [cpart, num];\n}\n\nconst stringReplace = new String().replace;\nconst stringToLower = new String().toLowerCase;\nconst stringToString = new String().toString;\nconst stringSubstr = new String().substr;\nconst stringTrim = new String().trim;\nconst stringStartWith = new String().startsWith;\nconst mathMin = Math.min;\n\nfunction isFunction(functionToCheck) {\n  let getType = {};\n  return functionToCheck && getType.toString.call(functionToCheck) === '[object Function]';\n}\n\nfunction unique(obj) {\n  let uniques = [];\n  let stringify = {};\n  for (let i = 0; i < obj.length; i++) {\n    let keys = Object.keys(obj[i]);\n    keys.sort(function (a, b) { return a - b; });\n    let str = '';\n    for (let j = 0; j < keys.length; j++) {\n      str += JSON.stringify(keys[j]);\n      str += JSON.stringify(obj[i][keys[j]]);\n    }\n    if (!{}.hasOwnProperty.call(stringify, str)) {\n      uniques.push(obj[i]);\n      stringify[str] = true;\n    }\n  }\n  return uniques;\n}\n\nfunction sortByKey(array, keys) {\n  return array.sort(function (a, b) {\n    let x = '';\n    let y = '';\n    keys.forEach(function (key) {\n      x = x + a[key]; y = y + b[key];\n    });\n    return ((x < y) ? -1 : ((x > y) ? 1 : 0));\n  });\n}\n\nfunction cores() {\n  if (_cores === 0) {\n    _cores = os.cpus().length;\n  }\n  return _cores;\n}\n\nfunction getValue(lines, property, separator, trimmed, lineMatch) {\n  separator = separator || ':';\n  property = property.toLowerCase();\n  trimmed = trimmed || false;\n  lineMatch = lineMatch || false;\n  let result = '';\n  lines.some((line) => {\n    let lineLower = line.toLowerCase().replace(/\\t/g, '');\n    if (trimmed) {\n      lineLower = lineLower.trim();\n    }\n    if (lineLower.startsWith(property) && (lineMatch ? (lineLower.match(property + separator)) || (lineLower.match(property + ' ' + separator)) : true)) {\n      const parts = trimmed ? line.trim().split(separator) : line.split(separator);\n      if (parts.length >= 2) {\n        parts.shift();\n        result = parts.join(separator).trim();\n        return true;\n      }\n    }\n  });\n  return result;\n}\n\nfunction decodeEscapeSequence(str, base) {\n  base = base || 16;\n  return str.replace(/\\\\x([0-9A-Fa-f]{2})/g, function () {\n    return String.fromCharCode(parseInt(arguments[1], base));\n  });\n}\n\nfunction detectSplit(str) {\n  let seperator = '';\n  let part = 0;\n  str.split('').forEach(element => {\n    if (element >= '0' && element <= '9') {\n      if (part === 1) { part++; }\n    } else {\n      if (part === 0) { part++; }\n      if (part === 1) {\n        seperator += element;\n      }\n    }\n  });\n  return seperator;\n}\n\nfunction parseTime(t, pmDesignator) {\n  pmDesignator = pmDesignator || '';\n  t = t.toUpperCase();\n  let hour = 0;\n  let min = 0;\n  let splitter = detectSplit(t);\n  let parts = t.split(splitter);\n  if (parts.length >= 2) {\n    if (parts[2]) {\n      parts[1] += parts[2];\n    }\n    let isPM = (parts[1] && (parts[1].toLowerCase().indexOf('pm') > -1) || (parts[1].toLowerCase().indexOf('p.m.') > -1) || (parts[1].toLowerCase().indexOf('p. m.') > -1) || (parts[1].toLowerCase().indexOf('n') > -1) || (parts[1].toLowerCase().indexOf('ch') > -1) || (parts[1].toLowerCase().indexOf('\u00F6s') > -1) || (pmDesignator && parts[1].toLowerCase().indexOf(pmDesignator) > -1));\n    hour = parseInt(parts[0], 10);\n    min = parseInt(parts[1], 10);\n    hour = isPM && hour < 12 ? hour + 12 : hour;\n    return ('0' + hour).substr(-2) + ':' + ('0' + min).substr(-2);\n  }\n}\n\nfunction parseDateTime(dt, culture) {\n  const result = {\n    date: '',\n    time: ''\n  };\n  culture = culture || {};\n  let dateFormat = (culture.dateFormat || '').toLowerCase();\n  let pmDesignator = (culture.pmDesignator || '');\n\n  const parts = dt.split(' ');\n  if (parts[0]) {\n    if (parts[0].indexOf('/') >= 0) {\n      // Dateformat: mm/dd/yyyy or dd/mm/yyyy or dd/mm/yy or yyyy/mm/dd\n      const dtparts = parts[0].split('/');\n      if (dtparts.length === 3) {\n        if (dtparts[0].length === 4) {\n          // Dateformat: yyyy/mm/dd\n          result.date = dtparts[0] + '-' + ('0' + dtparts[1]).substr(-2) + '-' + ('0' + dtparts[2]).substr(-2);\n        } else if (dtparts[2].length === 2) {\n          if ((dateFormat.indexOf('/d/') > -1 || dateFormat.indexOf('/dd/') > -1)) {\n            // Dateformat: mm/dd/yy\n            result.date = '20' + dtparts[2] + '-' + ('0' + dtparts[1]).substr(-2) + '-' + ('0' + dtparts[0]).substr(-2);\n          } else {\n            // Dateformat: dd/mm/yy\n            result.date = '20' + dtparts[2] + '-' + ('0' + dtparts[1]).substr(-2) + '-' + ('0' + dtparts[0]).substr(-2);\n          }\n        } else {\n          // Dateformat: mm/dd/yyyy or dd/mm/yyyy\n          const isEN = ((dt.toLowerCase().indexOf('pm') > -1) || (dt.toLowerCase().indexOf('p.m.') > -1) || (dt.toLowerCase().indexOf('p. m.') > -1) || (dt.toLowerCase().indexOf('am') > -1) || (dt.toLowerCase().indexOf('a.m.') > -1) || (dt.toLowerCase().indexOf('a. m.') > -1));\n          if ((isEN || dateFormat.indexOf('/d/') > -1 || dateFormat.indexOf('/dd/') > -1) && dateFormat.indexOf('dd/') !== 0) {\n            // Dateformat: mm/dd/yyyy\n            result.date = dtparts[2] + '-' + ('0' + dtparts[0]).substr(-2) + '-' + ('0' + dtparts[1]).substr(-2);\n          } else {\n            // Dateformat: dd/mm/yyyy\n            result.date = dtparts[2] + '-' + ('0' + dtparts[1]).substr(-2) + '-' + ('0' + dtparts[0]).substr(-2);\n          }\n        }\n      }\n    }\n    if (parts[0].indexOf('.') >= 0) {\n      const dtparts = parts[0].split('.');\n      if (dtparts.length === 3) {\n        if (dateFormat.indexOf('.d.') > -1 || dateFormat.indexOf('.dd.') > -1) {\n          // Dateformat: mm.dd.yyyy\n          result.date = dtparts[2] + '-' + ('0' + dtparts[0]).substr(-2) + '-' + ('0' + dtparts[1]).substr(-2);\n        } else {\n          // Dateformat: dd.mm.yyyy\n          result.date = dtparts[2] + '-' + ('0' + dtparts[1]).substr(-2) + '-' + ('0' + dtparts[0]).substr(-2);\n        }\n      }\n    }\n    if (parts[0].indexOf('-') >= 0) {\n      // Dateformat: yyyy-mm-dd\n      const dtparts = parts[0].split('-');\n      if (dtparts.length === 3) {\n        result.date = dtparts[0] + '-' + ('0' + dtparts[1]).substr(-2) + '-' + ('0' + dtparts[2]).substr(-2);\n      }\n    }\n  }\n  if (parts[1]) {\n    parts.shift();\n    let time = parts.join(' ');\n    result.time = parseTime(time, pmDesignator);\n  }\n  return result;\n}\n\nfunction parseHead(head, rights) {\n  let space = (rights > 0);\n  let count = 1;\n  let from = 0;\n  let to = 0;\n  let result = [];\n  for (let i = 0; i < head.length; i++) {\n    if (count <= rights) {\n      if (/\\s/.test(head[i]) && !space) {\n        to = i - 1;\n        result.push({\n          from: from,\n          to: to + 1,\n          cap: head.substring(from, to + 1)\n        });\n        from = to + 2;\n        count++;\n      }\n      space = head[i] === ' ';\n    } else {\n      if (!/\\s/.test(head[i]) && space) {\n        to = i - 1;\n        if (from < to) {\n          result.push({\n            from: from,\n            to: to,\n            cap: head.substring(from, to)\n          });\n        }\n        from = to + 1;\n        count++;\n      }\n      space = head[i] === ' ';\n    }\n  }\n  to = 5000;\n  result.push({\n    from: from,\n    to: to,\n    cap: head.substring(from, to)\n  });\n  let len = result.length;\n  for (let i = 0; i < len; i++) {\n    if (result[i].cap.replace(/\\s/g, '').length === 0) {\n      if (i + 1 < len) {\n        result[i].to = result[i + 1].to;\n        result[i].cap = result[i].cap + result[i + 1].cap;\n        result.splice(i + 1, 1);\n        len = len - 1;\n      }\n    }\n  }\n  return result;\n}\n\nfunction findObjectByKey(array, key, value) {\n  for (let i = 0; i < array.length; i++) {\n    if (array[i][key] === value) {\n      return i;\n    }\n  }\n  return -1;\n}\n\nfunction getWmic() {\n  if (os.type() === 'Windows_NT' && !wmicPath) {\n    wmicPath = WINDIR + '\\\\system32\\\\wbem\\\\wmic.exe';\n    if (!fs.existsSync(wmicPath)) {\n      try {\n        const wmicPathArray = execSync('WHERE WMIC', execOptsWin).toString().split('\\r\\n');\n        if (wmicPathArray && wmicPathArray.length) {\n          wmicPath = wmicPathArray[0];\n        } else {\n          wmicPath = 'wmic';\n        }\n      } catch (e) {\n        wmicPath = 'wmic';\n      }\n    }\n  }\n  return wmicPath;\n}\n\nfunction wmic(command) {\n  return new Promise((resolve) => {\n    process.nextTick(() => {\n      try {\n        powerShell(getWmic() + ' ' + command).then(stdout => {\n          resolve(stdout, '');\n        });\n      } catch (e) {\n        resolve('', e);\n      }\n    });\n  });\n}\n\nfunction getVboxmanage() {\n  return _windows ? `\"${process.env.VBOX_INSTALL_PATH || process.env.VBOX_MSI_INSTALL_PATH}\\\\VBoxManage.exe\"` : 'vboxmanage';\n}\n\nfunction powerShellProceedResults(data) {\n  let id = '';\n  let parts;\n  let res = '';\n  // startID\n  if (data.indexOf(_psCmdStart) >= 0) {\n    parts = data.split(_psCmdStart);\n    const parts2 = parts[1].split(_psIdSeperator);\n    id = parts2[0];\n    if (parts2.length > 1) {\n      data = parts2.slice(1).join(_psIdSeperator);\n    }\n  }\n  // result;\n  if (data.indexOf(_psCmdSeperator) >= 0) {\n    parts = data.split(_psCmdSeperator);\n    res = parts[0];\n  }\n  let remove = -1;\n  for (let i = 0; i < _psCmds.length; i++) {\n    if (_psCmds[i].id === id) {\n      remove = i;\n      _psCmds[i].callback(res);\n    }\n  }\n  if (remove >= 0) {\n    _psCmds.splice(remove, 1);\n  }\n}\n\nfunction powerShellStart() {\n  if (!_psChild) {\n    _psChild = spawn('powershell.exe', ['-NoProfile', '-NoLogo', '-InputFormat', 'Text', '-NoExit', '-Command', '-'], {\n      stdio: 'pipe',\n      windowsHide: true,\n      maxBuffer: 1024 * 20000,\n      encoding: 'UTF-8',\n      env: Object.assign({}, process.env, { LANG: 'en_US.UTF-8' })\n    });\n    if (_psChild && _psChild.pid) {\n      _psPersistent = true;\n      _psChild.stdout.on('data', function (data) {\n        _psResult = _psResult + data.toString('utf8');\n        if (data.indexOf(_psCmdSeperator) >= 0) {\n          powerShellProceedResults(_psResult);\n          _psResult = '';\n        }\n      });\n      _psChild.stderr.on('data', function () {\n        powerShellProceedResults(_psResult + _psError);\n      });\n      _psChild.on('error', function () {\n        powerShellProceedResults(_psResult + _psError);\n      });\n      _psChild.on('close', function () {\n        if (_psChild) { _psChild.kill(); }\n      });\n    }\n  }\n}\n\nfunction powerShellRelease() {\n  try {\n    if (_psChild) {\n      _psChild.stdin.write('exit' + os.EOL);\n      _psChild.stdin.end();\n      _psPersistent = false;\n    }\n  } catch (e) {\n    if (_psChild) { _psChild.kill(); }\n  }\n  _psChild = null;\n}\n\nfunction powerShell(cmd) {\n\n  /// const pattern = [\n  ///   '[\\\\u001B\\\\u009B][[\\\\]()#;?]*(?:(?:(?:(?:;[-a-zA-Z\\\\d\\\\/#&.:=?%@~_]+)*|[a-zA-Z\\\\d]+(?:;[-a-zA-Z\\\\d\\\\/#&.:=?%@~_]*)*)?\\\\u0007)',\n  ///   '(?:(?:\\\\d{1,4}(?:;\\\\d{0,4})*)?[\\\\dA-PR-TZcf-nq-uy=><~]))'\n  /// ].join('|');\n\n  if (_psPersistent) {\n    const id = Math.random().toString(36).substring(2, 12);\n    return new Promise((resolve) => {\n      process.nextTick(() => {\n        function callback(data) {\n          resolve(data);\n        }\n        _psCmds.push({\n          id,\n          cmd,\n          callback,\n          start: new Date()\n        });\n        try {\n          if (_psChild && _psChild.pid) {\n            _psChild.stdin.write(_psToUTF8 + 'echo ' + _psCmdStart + id + _psIdSeperator + '; ' + os.EOL + cmd + os.EOL + 'echo ' + _psCmdSeperator + os.EOL);\n          }\n        } catch (e) {\n          resolve('');\n        }\n      });\n    });\n\n  } else {\n    let result = '';\n\n    return new Promise((resolve) => {\n      process.nextTick(() => {\n        try {\n          const child = spawn('powershell.exe', ['-NoProfile', '-NoLogo', '-InputFormat', 'Text', '-NoExit', '-ExecutionPolicy', 'Unrestricted', '-Command', '-'], {\n            stdio: 'pipe',\n            windowsHide: true,\n            maxBuffer: 1024 * 20000,\n            encoding: 'UTF-8',\n            env: Object.assign({}, process.env, { LANG: 'en_US.UTF-8' })\n          });\n\n          if (child && !child.pid) {\n            child.on('error', function () {\n              resolve(result);\n            });\n          }\n          if (child && child.pid) {\n            child.stdout.on('data', function (data) {\n              result = result + data.toString('utf8');\n            });\n            child.stderr.on('data', function () {\n              child.kill();\n              resolve(result);\n            });\n            child.on('close', function () {\n              child.kill();\n\n              resolve(result);\n            });\n            child.on('error', function () {\n              child.kill();\n              resolve(result);\n            });\n            try {\n              child.stdin.write(_psToUTF8 + cmd + os.EOL);\n              child.stdin.write('exit' + os.EOL);\n              child.stdin.end();\n            } catch (e) {\n              child.kill();\n              resolve(result);\n            }\n          } else {\n            resolve(result);\n          }\n        } catch (e) {\n          resolve(result);\n        }\n      });\n    });\n  }\n}\n\nfunction execSafe(cmd, args, options) {\n  let result = '';\n  options = options || {};\n\n  return new Promise((resolve) => {\n    process.nextTick(() => {\n      try {\n        const child = spawn(cmd, args, options);\n\n        if (child && !child.pid) {\n          child.on('error', function () {\n            resolve(result);\n          });\n        }\n        if (child && child.pid) {\n          child.stdout.on('data', function (data) {\n            result += data.toString();\n          });\n          child.on('close', function () {\n            child.kill();\n            resolve(result);\n          });\n          child.on('error', function () {\n            child.kill();\n            resolve(result);\n          });\n        } else {\n          resolve(result);\n        }\n      } catch (e) {\n        resolve(result);\n      }\n    });\n  });\n}\n\nfunction getCodepage() {\n  if (_windows) {\n    if (!codepage) {\n      try {\n        const stdout = execSync('chcp', execOptsWin);\n        const lines = stdout.toString().split('\\r\\n');\n        const parts = lines[0].split(':');\n        codepage = parts.length > 1 ? parts[1].replace('.', '').trim() : '';\n      } catch (err) {\n        codepage = '437';\n      }\n    }\n    return codepage;\n  }\n  if (_linux || _darwin || _freebsd || _openbsd || _netbsd) {\n    if (!codepage) {\n      try {\n        const stdout = execSync('echo $LANG');\n        const lines = stdout.toString().split('\\r\\n');\n        const parts = lines[0].split('.');\n        codepage = parts.length > 1 ? parts[1].trim() : '';\n        if (!codepage) {\n          codepage = 'UTF-8';\n        }\n      } catch (err) {\n        codepage = 'UTF-8';\n      }\n    }\n    return codepage;\n  }\n}\n\nfunction smartMonToolsInstalled() {\n  if (_smartMonToolsInstalled !== null) {\n    return _smartMonToolsInstalled;\n  }\n  _smartMonToolsInstalled = false;\n  if (_windows) {\n    try {\n      const pathArray = execSync('WHERE smartctl 2>nul', execOptsWin).toString().split('\\r\\n');\n      if (pathArray && pathArray.length) {\n        _smartMonToolsInstalled = pathArray[0].indexOf(':\\\\') >= 0;\n      } else {\n        _smartMonToolsInstalled = false;\n      }\n    } catch (e) {\n      _smartMonToolsInstalled = false;\n    }\n  }\n  if (_linux || _darwin || _freebsd || _openbsd || _netbsd) {\n    try {\n      const pathArray = execSync('which smartctl 2>/dev/null', execOptsWin).toString().split('\\r\\n');\n      _smartMonToolsInstalled = pathArray.length > 0;\n    } catch (e) {\n      util.noop();\n    }\n  }\n  return _smartMonToolsInstalled;\n}\n\nfunction isRaspberry() {\n  const PI_MODEL_NO = [\n    'BCM2708',\n    'BCM2709',\n    'BCM2710',\n    'BCM2711',\n    'BCM2712',\n    'BCM2835',\n    'BCM2836',\n    'BCM2837',\n    'BCM2837B0'\n  ];\n  let cpuinfo = [];\n\n  if (_rpi_cpuinfo !== null) {\n    cpuinfo = _rpi_cpuinfo;\n  } else {\n    try {\n      cpuinfo = fs.readFileSync('/proc/cpuinfo', { encoding: 'utf8' }).toString().split('\\n');\n      _rpi_cpuinfo = cpuinfo;\n    } catch (e) {\n      return false;\n    }\n  }\n\n  const hardware = getValue(cpuinfo, 'hardware');\n  return (hardware && PI_MODEL_NO.indexOf(hardware) > -1);\n}\n\nfunction isRaspbian() {\n  let osrelease = [];\n  try {\n    osrelease = fs.readFileSync('/etc/os-release', { encoding: 'utf8' }).toString().split('\\n');\n  } catch (e) {\n    return false;\n  }\n  const id = getValue(osrelease, 'id', '=');\n  return (id && id.indexOf('raspbian') > -1);\n}\n\nfunction execWin(cmd, opts, callback) {\n  if (!callback) {\n    callback = opts;\n    opts = execOptsWin;\n  }\n  let newCmd = 'chcp 65001 > nul && cmd /C ' + cmd + ' && chcp ' + codepage + ' > nul';\n  exec(newCmd, opts, function (error, stdout) {\n    callback(error, stdout);\n  });\n}\n\nfunction darwinXcodeExists() {\n  const cmdLineToolsExists = fs.existsSync('/Library/Developer/CommandLineTools/usr/bin/');\n  const xcodeAppExists = fs.existsSync('/Applications/Xcode.app/Contents/Developer/Tools');\n  const xcodeExists = fs.existsSync('/Library/Developer/Xcode/');\n  return (cmdLineToolsExists || xcodeExists || xcodeAppExists);\n}\n\nfunction nanoSeconds() {\n  const time = process.hrtime();\n  if (!Array.isArray(time) || time.length !== 2) {\n    return 0;\n  }\n  return +time[0] * 1e9 + +time[1];\n}\n\nfunction countUniqueLines(lines, startingWith) {\n  startingWith = startingWith || '';\n  const uniqueLines = [];\n  lines.forEach(line => {\n    if (line.startsWith(startingWith)) {\n      if (uniqueLines.indexOf(line) === -1) {\n        uniqueLines.push(line);\n      }\n    }\n  });\n  return uniqueLines.length;\n}\n\nfunction countLines(lines, startingWith) {\n  startingWith = startingWith || '';\n  const uniqueLines = [];\n  lines.forEach(line => {\n    if (line.startsWith(startingWith)) {\n      uniqueLines.push(line);\n    }\n  });\n  return uniqueLines.length;\n}\n\nfunction sanitizeShellString(str, strict) {\n  if (typeof strict === 'undefined') { strict = false; }\n  const s = str || '';\n  let result = '';\n  const l = mathMin(s.length, 2000);\n  for (let i = 0; i <= l; i++) {\n    if (!(s[i] === undefined ||\n      s[i] === '>' ||\n      s[i] === '<' ||\n      s[i] === '*' ||\n      s[i] === '?' ||\n      s[i] === '[' ||\n      s[i] === ']' ||\n      s[i] === '|' ||\n      s[i] === '\u02DA' ||\n      s[i] === '$' ||\n      s[i] === ';' ||\n      s[i] === '&' ||\n      s[i] === ']' ||\n      s[i] === '#' ||\n      s[i] === '\\\\' ||\n      s[i] === '\\t' ||\n      s[i] === '\\n' ||\n      s[i] === '\\r' ||\n      s[i] === '\\'' ||\n      s[i] === '`' ||\n      s[i] === '\"' ||\n      s[i].length > 1 ||\n      (strict && s[i] === '(') ||\n      (strict && s[i] === ')') ||\n      (strict && s[i] === '@') ||\n      (strict && s[i] === ' ') ||\n      (strict && s[i] == '{') ||\n      (strict && s[i] == ';') ||\n      (strict && s[i] == '}'))) {\n      result = result + s[i];\n    }\n  }\n  return result;\n}\n\nfunction isPrototypePolluted() {\n  const s = '1234567890abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\n  let notPolluted = true;\n  let st = '';\n\n  st.__proto__.replace = stringReplace;\n  st.__proto__.toLowerCase = stringToLower;\n  st.__proto__.toString = stringToString;\n  st.__proto__.substr = stringSubstr;\n\n  notPolluted = notPolluted || (s.length !== 62);\n  const ms = Date.now();\n  if (typeof ms === 'number' && ms > 1600000000000) {\n    const l = ms % 100 + 15;\n    for (let i = 0; i < l; i++) {\n      const r = Math.random() * 61.99999999 + 1;\n      const rs = parseInt(Math.floor(r).toString(), 10);\n      const rs2 = parseInt(r.toString().split('.')[0], 10);\n      const q = Math.random() * 61.99999999 + 1;\n      const qs = parseInt(Math.floor(q).toString(), 10);\n      const qs2 = parseInt(q.toString().split('.')[0], 10);\n      notPolluted = notPolluted && (r !== q);\n      notPolluted = notPolluted && rs === rs2 && qs === qs2;\n      st += s[rs - 1];\n    }\n    notPolluted = notPolluted && st.length === l;\n    // string manipulation\n    let p = Math.random() * l * 0.9999999999;\n    let stm = st.substr(0, p) + ' ' + st.substr(p, 2000);\n    stm.__proto__.replace = stringReplace;\n    let sto = stm.replace(/ /g, '');\n    notPolluted = notPolluted && st === sto;\n    p = Math.random() * l * 0.9999999999;\n    stm = st.substr(0, p) + '{' + st.substr(p, 2000);\n    sto = stm.replace(/{/g, '');\n    notPolluted = notPolluted && st === sto;\n    p = Math.random() * l * 0.9999999999;\n    stm = st.substr(0, p) + '*' + st.substr(p, 2000);\n    sto = stm.replace(/\\*/g, '');\n    notPolluted = notPolluted && st === sto;\n    p = Math.random() * l * 0.9999999999;\n    stm = st.substr(0, p) + '$' + st.substr(p, 2000);\n    sto = stm.replace(/\\$/g, '');\n    notPolluted = notPolluted && st === sto;\n\n    // lower\n    const stl = st.toLowerCase();\n    notPolluted = notPolluted && (stl.length === l) && stl[l - 1] && !(stl[l]);\n    for (let i = 0; i < l; i++) {\n      const s1 = st[i];\n      s1.__proto__.toLowerCase = stringToLower;\n      const s2 = stl ? stl[i] : '';\n      const s1l = s1.toLowerCase();\n      notPolluted = notPolluted && s1l[0] === s2 && s1l[0] && !(s1l[1]);\n    }\n  }\n  return !notPolluted;\n}\n\nfunction hex2bin(hex) {\n  return ('00000000' + (parseInt(hex, 16)).toString(2)).substr(-8);\n}\n\nfunction getFilesInPath(source) {\n  const lstatSync = fs.lstatSync;\n  const readdirSync = fs.readdirSync;\n  const join = path.join;\n\n  function isDirectory(source) {\n    return lstatSync(source).isDirectory();\n  }\n  function isFile(source) { return lstatSync(source).isFile(); }\n\n  function getDirectories(source) {\n    return readdirSync(source).map(function (name) { return join(source, name); }).filter(isDirectory);\n  }\n  function getFiles(source) {\n    return readdirSync(source).map(function (name) { return join(source, name); }).filter(isFile);\n  }\n\n  function getFilesRecursively(source) {\n    try {\n      let dirs = getDirectories(source);\n      let files = dirs\n        .map(function (dir) { return getFilesRecursively(dir); })\n        .reduce(function (a, b) { return a.concat(b); }, []);\n      return files.concat(getFiles(source));\n    } catch (e) {\n      return [];\n    }\n  }\n\n  if (fs.existsSync(source)) {\n    return getFilesRecursively(source);\n  } else {\n    return [];\n  }\n}\n\nfunction decodePiCpuinfo(lines) {\n\n  if (_rpi_cpuinfo === null) {\n    _rpi_cpuinfo = lines;\n  }\n\n  // https://www.raspberrypi.org/documentation/hardware/raspberrypi/revision-codes/README.md\n\n  const oldRevisionCodes = {\n    '0002': {\n      type: 'B',\n      revision: '1.0',\n      memory: 256,\n      manufacturer: 'Egoman',\n      processor: 'BCM2835'\n    },\n    '0003': {\n      type: 'B',\n      revision: '1.0',\n      memory: 256,\n      manufacturer: 'Egoman',\n      processor: 'BCM2835'\n    },\n    '0004': {\n      type: 'B',\n      revision: '2.0',\n      memory: 256,\n      manufacturer: 'Sony UK',\n      processor: 'BCM2835'\n    },\n    '0005': {\n      type: 'B',\n      revision: '2.0',\n      memory: 256,\n      manufacturer: 'Qisda',\n      processor: 'BCM2835'\n    },\n    '0006': {\n      type: 'B',\n      revision: '2.0',\n      memory: 256,\n      manufacturer: 'Egoman',\n      processor: 'BCM2835'\n    },\n    '0007': {\n      type: 'A',\n      revision: '2.0',\n      memory: 256,\n      manufacturer: 'Egoman',\n      processor: 'BCM2835'\n    },\n    '0008': {\n      type: 'A',\n      revision: '2.0',\n      memory: 256,\n      manufacturer: 'Sony UK',\n      processor: 'BCM2835'\n    },\n    '0009': {\n      type: 'A',\n      revision: '2.0',\n      memory: 256,\n      manufacturer: 'Qisda',\n      processor: 'BCM2835'\n    },\n    '000d': {\n      type: 'B',\n      revision: '2.0',\n      memory: 512,\n      manufacturer: 'Egoman',\n      processor: 'BCM2835'\n    },\n    '000e': {\n      type: 'B',\n      revision: '2.0',\n      memory: 512,\n      manufacturer: 'Sony UK',\n      processor: 'BCM2835'\n    },\n    '000f': {\n      type: 'B',\n      revision: '2.0',\n      memory: 512,\n      manufacturer: 'Egoman',\n      processor: 'BCM2835'\n    },\n    '0010': {\n      type: 'B+',\n      revision: '1.2',\n      memory: 512,\n      manufacturer: 'Sony UK',\n      processor: 'BCM2835'\n    },\n    '0011': {\n      type: 'CM1',\n      revision: '1.0',\n      memory: 512,\n      manufacturer: 'Sony UK',\n      processor: 'BCM2835'\n    },\n    '0012': {\n      type: 'A+',\n      revision: '1.1',\n      memory: 256,\n      manufacturer: 'Sony UK',\n      processor: 'BCM2835'\n    },\n    '0013': {\n      type: 'B+',\n      revision: '1.2',\n      memory: 512,\n      manufacturer: 'Embest',\n      processor: 'BCM2835'\n    },\n    '0014': {\n      type: 'CM1',\n      revision: '1.0',\n      memory: 512,\n      manufacturer: 'Embest',\n      processor: 'BCM2835'\n    },\n    '0015': {\n      type: 'A+',\n      revision: '1.1',\n      memory: 256,\n      manufacturer: '512MB\tEmbest',\n      processor: 'BCM2835'\n    }\n  };\n\n  const processorList = [\n    'BCM2835',\n    'BCM2836',\n    'BCM2837',\n    'BCM2711',\n    'BCM2712',\n  ];\n  const manufacturerList = [\n    'Sony UK',\n    'Egoman',\n    'Embest',\n    'Sony Japan',\n    'Embest',\n    'Stadium'\n  ];\n  const typeList = {\n    '00': 'A',\n    '01': 'B',\n    '02': 'A+',\n    '03': 'B+',\n    '04': '2B',\n    '05': 'Alpha (early prototype)',\n    '06': 'CM1',\n    '08': '3B',\n    '09': 'Zero',\n    '0a': 'CM3',\n    '0c': 'Zero W',\n    '0d': '3B+',\n    '0e': '3A+',\n    '0f': 'Internal use only',\n    '10': 'CM3+',\n    '11': '4B',\n    '12': 'Zero 2 W',\n    '13': '400',\n    '14': 'CM4',\n    '15': 'CM4S',\n    '17': '5',\n  };\n\n  const revisionCode = getValue(lines, 'revision', ':', true);\n  const model = getValue(lines, 'model:', ':', true);\n  const serial = getValue(lines, 'serial', ':', true);\n\n  let result = {};\n  if ({}.hasOwnProperty.call(oldRevisionCodes, revisionCode)) {\n    // old revision codes\n    result = {\n      model,\n      serial,\n      revisionCode,\n      memory: oldRevisionCodes[revisionCode].memory,\n      manufacturer: oldRevisionCodes[revisionCode].manufacturer,\n      processor: oldRevisionCodes[revisionCode].processor,\n      type: oldRevisionCodes[revisionCode].type,\n      revision: oldRevisionCodes[revisionCode].revision,\n    };\n\n  } else {\n    // new revision code\n    const revision = ('00000000' + getValue(lines, 'revision', ':', true).toLowerCase()).substr(-8);\n    const memSizeCode = parseInt(hex2bin(revision.substr(2, 1)).substr(5, 3), 2) || 0;\n    const manufacturer = manufacturerList[parseInt(revision.substr(3, 1), 10)];\n    const processor = processorList[parseInt(revision.substr(4, 1), 10)];\n    const typeCode = revision.substr(5, 2);\n\n\n    result = {\n      model,\n      serial,\n      revisionCode,\n      memory: 256 * Math.pow(2, memSizeCode),\n      manufacturer,\n      processor,\n      type: {}.hasOwnProperty.call(typeList, typeCode) ? typeList[typeCode] : '',\n      revision: '1.' + revision.substr(7, 1),\n    };\n  }\n  return result;\n}\n\nfunction getRpiGpu() {\n  let cpuinfo = null;\n  if (_rpi_cpuinfo !== null) {\n    cpuinfo = _rpi_cpuinfo;\n  } else {\n    try {\n      cpuinfo = fs.readFileSync('/proc/cpuinfo', { encoding: 'utf8' }).toString().split('\\n');\n      _rpi_cpuinfo = cpuinfo;\n    } catch (e) {\n      return false;\n    }\n  }\n\n  const rpi = decodePiCpuinfo(cpuinfo);\n  if (rpi.type === '4B' || rpi.type === 'CM4' || rpi.type === 'CM4S' || rpi.type === '400') { return 'VideoCore VI'; }\n  if (rpi.type === '5') { return 'VideoCore VII'; }\n  return 'VideoCore IV';\n}\n\nfunction promiseAll(promises) {\n  const resolvingPromises = promises.map(function (promise) {\n    return new Promise(function (resolve) {\n      let payload = new Array(2);\n      promise.then(function (result) {\n        payload[0] = result;\n      })\n        .catch(function (error) {\n          payload[1] = error;\n        })\n        .then(function () {\n          // The wrapped Promise returns an array: 0 = result, 1 = error ... we resolve all\n          resolve(payload);\n        });\n    });\n  });\n  const errors = [];\n  const results = [];\n\n  // Execute all wrapped Promises\n  return Promise.all(resolvingPromises)\n    .then(function (items) {\n      items.forEach(function (payload) {\n        if (payload[1]) {\n          errors.push(payload[1]);\n          results.push(null);\n        } else {\n          errors.push(null);\n          results.push(payload[0]);\n        }\n      });\n\n      return {\n        errors: errors,\n        results: results\n      };\n    });\n}\n\nfunction promisify(nodeStyleFunction) {\n  return function () {\n    const args = Array.prototype.slice.call(arguments);\n    return new Promise(function (resolve, reject) {\n      args.push(function (err, data) {\n        if (err) {\n          reject(err);\n        } else {\n          resolve(data);\n        }\n      });\n      nodeStyleFunction.apply(null, args);\n    });\n  };\n}\n\nfunction promisifySave(nodeStyleFunction) {\n  return function () {\n    const args = Array.prototype.slice.call(arguments);\n    return new Promise(function (resolve) {\n      args.push(function (err, data) {\n        resolve(data);\n      });\n      nodeStyleFunction.apply(null, args);\n    });\n  };\n}\n\nfunction linuxVersion() {\n  let result = '';\n  if (_linux) {\n    try {\n      result = execSync('uname -v').toString();\n    } catch (e) {\n      result = '';\n    }\n  }\n  return result;\n}\n\nfunction plistParser(xmlStr) {\n  const tags = ['array', 'dict', 'key', 'string', 'integer', 'date', 'real', 'data', 'boolean', 'arrayEmpty'];\n  const startStr = '<plist version';\n\n  let pos = xmlStr.indexOf(startStr);\n  let len = xmlStr.length;\n  while (xmlStr[pos] !== '>' && pos < len) {\n    pos++;\n  }\n\n  let depth = 0;\n  let inTagStart = false;\n  let inTagContent = false;\n  let inTagEnd = false;\n  let metaData = [{ tagStart: '', tagEnd: '', tagContent: '', key: '', data: null }];\n  let c = '';\n  let cn = xmlStr[pos];\n\n  while (pos < len) {\n    c = cn;\n    if (pos + 1 < len) { cn = xmlStr[pos + 1]; }\n    if (c === '<') {\n      inTagContent = false;\n      if (cn === '/') { inTagEnd = true; }\n      else if (metaData[depth].tagStart) {\n        metaData[depth].tagContent = '';\n        if (!metaData[depth].data) { metaData[depth].data = metaData[depth].tagStart === 'array' ? [] : {}; }\n        depth++;\n        metaData.push({ tagStart: '', tagEnd: '', tagContent: '', key: null, data: null });\n        inTagStart = true;\n        inTagContent = false;\n      }\n      else if (!inTagStart) { inTagStart = true; }\n    } else if (c === '>') {\n      if (metaData[depth].tagStart === 'true/') { inTagStart = false; inTagEnd = true; metaData[depth].tagStart = ''; metaData[depth].tagEnd = '/boolean'; metaData[depth].data = true; }\n      if (metaData[depth].tagStart === 'false/') { inTagStart = false; inTagEnd = true; metaData[depth].tagStart = ''; metaData[depth].tagEnd = '/boolean'; metaData[depth].data = false; }\n      if (metaData[depth].tagStart === 'array/') { inTagStart = false; inTagEnd = true; metaData[depth].tagStart = ''; metaData[depth].tagEnd = '/arrayEmpty'; metaData[depth].data = []; }\n      if (inTagContent) { inTagContent = false; }\n      if (inTagStart) {\n        inTagStart = false;\n        inTagContent = true;\n        if (metaData[depth].tagStart === 'array') {\n          metaData[depth].data = [];\n        }\n        if (metaData[depth].tagStart === 'dict') {\n          metaData[depth].data = {};\n        }\n      }\n      if (inTagEnd) {\n        inTagEnd = false;\n        if (metaData[depth].tagEnd && tags.indexOf(metaData[depth].tagEnd.substr(1)) >= 0) {\n          if (metaData[depth].tagEnd === '/dict' || metaData[depth].tagEnd === '/array') {\n            if (depth > 1 && metaData[depth - 2].tagStart === 'array') {\n              metaData[depth - 2].data.push(metaData[depth - 1].data);\n            }\n            if (depth > 1 && metaData[depth - 2].tagStart === 'dict') {\n              metaData[depth - 2].data[metaData[depth - 1].key] = metaData[depth - 1].data;\n            }\n            depth--;\n            metaData.pop();\n            metaData[depth].tagContent = '';\n            metaData[depth].tagStart = '';\n            metaData[depth].tagEnd = '';\n          }\n          else {\n            if (metaData[depth].tagEnd === '/key' && metaData[depth].tagContent) {\n              metaData[depth].key = metaData[depth].tagContent;\n            } else {\n              if (metaData[depth].tagEnd === '/real' && metaData[depth].tagContent) { metaData[depth].data = parseFloat(metaData[depth].tagContent) || 0; }\n              if (metaData[depth].tagEnd === '/integer' && metaData[depth].tagContent) { metaData[depth].data = parseInt(metaData[depth].tagContent) || 0; }\n              if (metaData[depth].tagEnd === '/string' && metaData[depth].tagContent) { metaData[depth].data = metaData[depth].tagContent || ''; }\n              if (metaData[depth].tagEnd === '/boolean') { metaData[depth].data = metaData[depth].tagContent || false; }\n              if (metaData[depth].tagEnd === '/arrayEmpty') { metaData[depth].data = metaData[depth].tagContent || []; }\n              if (depth > 0 && metaData[depth - 1].tagStart === 'array') { metaData[depth - 1].data.push(metaData[depth].data); }\n              if (depth > 0 && metaData[depth - 1].tagStart === 'dict') { metaData[depth - 1].data[metaData[depth].key] = metaData[depth].data; }\n            }\n            metaData[depth].tagContent = '';\n            metaData[depth].tagStart = '';\n            metaData[depth].tagEnd = '';\n          }\n        }\n        metaData[depth].tagEnd = '';\n        inTagStart = false;\n        inTagContent = false;\n      }\n    } else {\n      if (inTagStart) { metaData[depth].tagStart += c; }\n      if (inTagEnd) { metaData[depth].tagEnd += c; }\n      if (inTagContent) { metaData[depth].tagContent += c; }\n    }\n    pos++;\n  }\n  return metaData[0].data;\n}\n\nfunction strIsNumeric(str) {\n  return typeof str === 'string' && !isNaN(str) && !isNaN(parseFloat(str));\n}\n\nfunction plistReader(output) {\n  const lines = output.split('\\n');\n  for (let i = 0; i < lines.length; i++) {\n    if (lines[i].indexOf(' = ') >= 0) {\n      const lineParts = lines[i].split(' = ');\n      lineParts[0] = lineParts[0].trim();\n      if (!lineParts[0].startsWith('\"')) {\n        lineParts[0] = '\"' + lineParts[0] + '\"';\n      }\n      lineParts[1] = lineParts[1].trim();\n      if (lineParts[1].indexOf('\"') === -1 && lineParts[1].endsWith(';')) {\n        const valueString = lineParts[1].substring(0, lineParts[1].length - 1);\n        if (!strIsNumeric(valueString)) {\n          lineParts[1] = `\"${valueString}\";`;\n        }\n      }\n      if (lineParts[1].indexOf('\"') >= 0 && lineParts[1].endsWith(';')) {\n        const valueString = lineParts[1].substring(0, lineParts[1].length - 1).replace(/\"/g, '');\n        if (strIsNumeric(valueString)) {\n          lineParts[1] = `${valueString};`;\n        }\n      }\n      lines[i] = lineParts.join(' : ');\n    }\n    lines[i] = lines[i].replace(/\\(/g, '[').replace(/\\)/g, ']').replace(/;/g, ',').trim();\n    if (lines[i].startsWith('}') && lines[i - 1] && lines[i - 1].endsWith(',')) {\n      lines[i - 1] = lines[i - 1].substring(0, lines[i - 1].length - 1);\n    }\n  }\n  output = lines.join('');\n  let obj = {};\n  try {\n    obj = JSON.parse(output);\n  } catch (e) {\n    noop();\n  }\n  return obj;\n}\n\nfunction semverCompare(v1, v2) {\n  let res = 0;\n  const parts1 = v1.split('.');\n  const parts2 = v2.split('.');\n  if (parts1[0] < parts2[0]) { res = 1; }\n  else if (parts1[0] > parts2[0]) { res = -1; }\n  else if (parts1[0] === parts2[0] && parts1.length >= 2 && parts2.length >= 2) {\n    if (parts1[1] < parts2[1]) { res = 1; }\n    else if (parts1[1] > parts2[1]) { res = -1; }\n    else if (parts1[1] === parts2[1]) {\n      if (parts1.length >= 3 && parts2.length >= 3) {\n        if (parts1[2] < parts2[2]) { res = 1; }\n        else if (parts1[2] > parts2[2]) { res = -1; }\n      } else if (parts2.length >= 3) {\n        res = 1;\n      }\n    }\n  }\n  return res;\n}\n\nfunction noop() { }\n\nexports.toInt = toInt;\nexports.splitByNumber = splitByNumber;\nexports.execOptsWin = execOptsWin;\nexports.getCodepage = getCodepage;\nexports.execWin = execWin;\nexports.isFunction = isFunction;\nexports.unique = unique;\nexports.sortByKey = sortByKey;\nexports.cores = cores;\nexports.getValue = getValue;\nexports.decodeEscapeSequence = decodeEscapeSequence;\nexports.parseDateTime = parseDateTime;\nexports.parseHead = parseHead;\nexports.findObjectByKey = findObjectByKey;\nexports.getWmic = getWmic;\nexports.wmic = wmic;\nexports.darwinXcodeExists = darwinXcodeExists;\nexports.getVboxmanage = getVboxmanage;\nexports.powerShell = powerShell;\nexports.powerShellStart = powerShellStart;\nexports.powerShellRelease = powerShellRelease;\nexports.execSafe = execSafe;\nexports.nanoSeconds = nanoSeconds;\nexports.countUniqueLines = countUniqueLines;\nexports.countLines = countLines;\nexports.noop = noop;\nexports.isRaspberry = isRaspberry;\nexports.isRaspbian = isRaspbian;\nexports.sanitizeShellString = sanitizeShellString;\nexports.isPrototypePolluted = isPrototypePolluted;\nexports.decodePiCpuinfo = decodePiCpuinfo;\nexports.getRpiGpu = getRpiGpu;\nexports.promiseAll = promiseAll;\nexports.promisify = promisify;\nexports.promisifySave = promisifySave;\nexports.smartMonToolsInstalled = smartMonToolsInstalled;\nexports.linuxVersion = linuxVersion;\nexports.plistParser = plistParser;\nexports.plistReader = plistReader;\nexports.stringReplace = stringReplace;\nexports.stringToLower = stringToLower;\nexports.stringToString = stringToString;\nexports.stringSubstr = stringSubstr;\nexports.stringTrim = stringTrim;\nexports.stringStartWith = stringStartWith;\nexports.mathMin = mathMin;\nexports.WINDIR = WINDIR;\nexports.getFilesInPath = getFilesInPath;\nexports.semverCompare = semverCompare;\n", "'use strict';\n// @ts-check\n// ==================================================================================\n// system.js\n// ----------------------------------------------------------------------------------\n// Description:   System Information - library\n//                for Node.js\n// Copyright:     (c) 2014 - 2024\n// Author:        Sebastian Hildebrandt\n// ----------------------------------------------------------------------------------\n// License:       MIT\n// ==================================================================================\n// 2. System (Hardware, BIOS, Base Board)\n// ----------------------------------------------------------------------------------\n\nconst fs = require('fs');\nconst os = require('os');\nconst util = require('./util');\nconst exec = require('child_process').exec;\nconst execSync = require('child_process').execSync;\nconst execPromise = util.promisify(require('child_process').exec);\n\nlet _platform = process.platform;\n\nconst _linux = (_platform === 'linux' || _platform === 'android');\nconst _darwin = (_platform === 'darwin');\nconst _windows = (_platform === 'win32');\nconst _freebsd = (_platform === 'freebsd');\nconst _openbsd = (_platform === 'openbsd');\nconst _netbsd = (_platform === 'netbsd');\nconst _sunos = (_platform === 'sunos');\n\nfunction system(callback) {\n\n  return new Promise((resolve) => {\n    process.nextTick(() => {\n\n      let result = {\n        manufacturer: '',\n        model: 'Computer',\n        version: '',\n        serial: '-',\n        uuid: '-',\n        sku: '-',\n        virtual: false\n      };\n\n      if (_linux || _freebsd || _openbsd || _netbsd) {\n        exec('export LC_ALL=C; dmidecode -t system 2>/dev/null; unset LC_ALL', function (error, stdout) {\n          let lines = stdout.toString().split('\\n');\n          result.manufacturer = util.getValue(lines, 'manufacturer');\n          result.model = util.getValue(lines, 'product name');\n          result.version = util.getValue(lines, 'version');\n          result.serial = util.getValue(lines, 'serial number');\n          result.uuid = util.getValue(lines, 'uuid').toLowerCase();\n          result.sku = util.getValue(lines, 'sku number');\n          // Non-Root values\n          const cmd = `echo -n \"product_name: \"; cat /sys/devices/virtual/dmi/id/product_name 2>/dev/null; echo;\n            echo -n \"product_serial: \"; cat /sys/devices/virtual/dmi/id/product_serial 2>/dev/null; echo;\n            echo -n \"product_uuid: \"; cat /sys/devices/virtual/dmi/id/product_uuid 2>/dev/null; echo;\n            echo -n \"product_version: \"; cat /sys/devices/virtual/dmi/id/product_version 2>/dev/null; echo;\n            echo -n \"sys_vendor: \"; cat /sys/devices/virtual/dmi/id/sys_vendor 2>/dev/null; echo;`;\n          try {\n            lines = execSync(cmd).toString().split('\\n');\n            result.manufacturer = result.manufacturer === '' ? util.getValue(lines, 'sys_vendor') : result.manufacturer;\n            result.model = result.model === '' ? util.getValue(lines, 'product_name') : result.model;\n            result.version = result.version === '' ? util.getValue(lines, 'product_version') : result.version;\n            result.serial = result.serial === '' ? util.getValue(lines, 'product_serial') : result.serial;\n            result.uuid = result.uuid === '' ? util.getValue(lines, 'product_uuid').toLowerCase() : result.uuid;\n          } catch (e) {\n            util.noop();\n          }\n          if (!result.serial || result.serial.toLowerCase().indexOf('o.e.m.') !== -1) { result.serial = '-'; }\n          if (!result.manufacturer || result.manufacturer.toLowerCase().indexOf('o.e.m.') !== -1) { result.manufacturer = ''; }\n          if (!result.model || result.model.toLowerCase().indexOf('o.e.m.') !== -1) { result.model = 'Computer'; }\n          if (!result.version || result.version.toLowerCase().indexOf('o.e.m.') !== -1) { result.version = ''; }\n          if (!result.sku || result.sku.toLowerCase().indexOf('o.e.m.') !== -1) { result.sku = '-'; }\n\n          // detect virtual (1)\n          if (result.model.toLowerCase() === 'virtualbox' || result.model.toLowerCase() === 'kvm' || result.model.toLowerCase() === 'virtual machine' || result.model.toLowerCase() === 'bochs' || result.model.toLowerCase().startsWith('vmware') || result.model.toLowerCase().startsWith('droplet')) {\n            result.virtual = true;\n            switch (result.model.toLowerCase()) {\n              case 'virtualbox':\n                result.virtualHost = 'VirtualBox';\n                break;\n              case 'vmware':\n                result.virtualHost = 'VMware';\n                break;\n              case 'kvm':\n                result.virtualHost = 'KVM';\n                break;\n              case 'bochs':\n                result.virtualHost = 'bochs';\n                break;\n            }\n          }\n          if (result.manufacturer.toLowerCase().startsWith('vmware') || result.manufacturer.toLowerCase() === 'xen') {\n            result.virtual = true;\n            switch (result.manufacturer.toLowerCase()) {\n              case 'vmware':\n                result.virtualHost = 'VMware';\n                break;\n              case 'xen':\n                result.virtualHost = 'Xen';\n                break;\n            }\n          }\n          if (!result.virtual) {\n            try {\n              const disksById = execSync('ls -1 /dev/disk/by-id/ 2>/dev/null').toString();\n              if (disksById.indexOf('_QEMU_') >= 0) {\n                result.virtual = true;\n                result.virtualHost = 'QEMU';\n              }\n              if (disksById.indexOf('_VBOX_') >= 0) {\n                result.virtual = true;\n                result.virtualHost = 'VirtualBox';\n              }\n            } catch (e) {\n              util.noop();\n            }\n          }\n          if (!result.virtual && (os.release().toLowerCase().indexOf('microsoft') >= 0 || os.release().toLowerCase().endsWith('wsl2'))) {\n            const kernelVersion = parseFloat(os.release().toLowerCase());\n            result.virtual = true;\n            result.manufacturer = 'Microsoft';\n            result.model = 'WSL';\n            result.version = kernelVersion < 4.19 ? '1' : '2';\n          }\n          if ((_freebsd || _openbsd || _netbsd) && !result.virtualHost) {\n            try {\n              const procInfo = execSync('dmidecode -t 4');\n              const procLines = procInfo.toString().split('\\n');\n              const procManufacturer = util.getValue(procLines, 'manufacturer', ':', true);\n              switch (procManufacturer.toLowerCase()) {\n                case 'virtualbox':\n                  result.virtualHost = 'VirtualBox';\n                  break;\n                case 'vmware':\n                  result.virtualHost = 'VMware';\n                  break;\n                case 'kvm':\n                  result.virtualHost = 'KVM';\n                  break;\n                case 'bochs':\n                  result.virtualHost = 'bochs';\n                  break;\n              }\n            } catch (e) {\n              util.noop();\n            }\n          }\n          // detect docker\n          if (fs.existsSync('/.dockerenv') || fs.existsSync('/.dockerinit')) {\n            result.model = 'Docker Container';\n          }\n          try {\n            const stdout = execSync('dmesg 2>/dev/null | grep -iE \"virtual|hypervisor\" | grep -iE \"vmware|qemu|kvm|xen\" | grep -viE \"Nested Virtualization|/virtual/\"');\n            // detect virtual machines\n            let lines = stdout.toString().split('\\n');\n            if (lines.length > 0) {\n              if (result.model === 'Computer') { result.model = 'Virtual machine'; }\n              result.virtual = true;\n              if (stdout.toString().toLowerCase().indexOf('vmware') >= 0 && !result.virtualHost) {\n                result.virtualHost = 'VMware';\n              }\n              if (stdout.toString().toLowerCase().indexOf('qemu') >= 0 && !result.virtualHost) {\n                result.virtualHost = 'QEMU';\n              }\n              if (stdout.toString().toLowerCase().indexOf('xen') >= 0 && !result.virtualHost) {\n                result.virtualHost = 'Xen';\n              }\n              if (stdout.toString().toLowerCase().indexOf('kvm') >= 0 && !result.virtualHost) {\n                result.virtualHost = 'KVM';\n              }\n            }\n          } catch (e) {\n            util.noop();\n          }\n\n          if (result.manufacturer === '' && result.model === 'Computer' && result.version === '') {\n            // Check Raspberry Pi\n            fs.readFile('/proc/cpuinfo', function (error, stdout) {\n              if (!error) {\n                let lines = stdout.toString().split('\\n');\n                result.model = util.getValue(lines, 'hardware', ':', true).toUpperCase();\n                result.version = util.getValue(lines, 'revision', ':', true).toLowerCase();\n                result.serial = util.getValue(lines, 'serial', ':', true);\n                const model = util.getValue(lines, 'model:', ':', true);\n                // reference values: https://elinux.org/RPi_HardwareHistory\n                // https://www.raspberrypi.org/documentation/hardware/raspberrypi/revision-codes/README.md\n                if ((result.model === 'BCM2835' || result.model === 'BCM2708' || result.model === 'BCM2709' || result.model === 'BCM2710' || result.model === 'BCM2711' || result.model === 'BCM2836' || result.model === 'BCM2837') && model.toLowerCase().indexOf('raspberry') >= 0) {\n                  const rPIRevision = util.decodePiCpuinfo(lines);\n                  result.model = rPIRevision.model;\n                  result.version = rPIRevision.revisionCode;\n                  result.manufacturer = 'Raspberry Pi Foundation';\n                  result.raspberry = {\n                    manufacturer: rPIRevision.manufacturer,\n                    processor: rPIRevision.processor,\n                    type: rPIRevision.type,\n                    revision: rPIRevision.revision\n                  };\n                }\n              }\n              if (callback) { callback(result); }\n              resolve(result);\n            });\n          } else {\n            if (callback) { callback(result); }\n            resolve(result);\n          }\n        });\n      }\n      if (_darwin) {\n        exec('ioreg -c IOPlatformExpertDevice -d 2', function (error, stdout) {\n          if (!error) {\n            let lines = stdout.toString().replace(/[<>\"]/g, '').split('\\n');\n            const model = util.splitByNumber(util.getValue(lines, 'model', '=', true));\n            const version = util.getValue(lines, 'version', '=', true);\n            result.manufacturer = util.getValue(lines, 'manufacturer', '=', true);\n            result.model = version ? util.getValue(lines, 'model', '=', true) : model[0];\n            result.version = version || model[1];\n            result.serial = util.getValue(lines, 'ioplatformserialnumber', '=', true);\n            result.uuid = util.getValue(lines, 'ioplatformuuid', '=', true).toLowerCase();\n            result.sku = util.getValue(lines, 'board-id', '=', true) || util.getValue(lines, 'target-sub-type', '=', true);\n          }\n          if (callback) { callback(result); }\n          resolve(result);\n        });\n      }\n      if (_sunos) {\n        if (callback) { callback(result); }\n        resolve(result);\n      }\n      if (_windows) {\n        try {\n          util.powerShell('Get-CimInstance Win32_ComputerSystemProduct | select Name,Vendor,Version,IdentifyingNumber,UUID | fl').then((stdout, error) => {\n            if (!error) {\n              let lines = stdout.split('\\r\\n');\n              result.manufacturer = util.getValue(lines, 'vendor', ':');\n              result.model = util.getValue(lines, 'name', ':');\n              result.version = util.getValue(lines, 'version', ':');\n              result.serial = util.getValue(lines, 'identifyingnumber', ':');\n              result.uuid = util.getValue(lines, 'uuid', ':').toLowerCase();\n              // detect virtual (1)\n              const model = result.model.toLowerCase();\n              if (model === 'virtualbox' || model === 'kvm' || model === 'virtual machine' || model === 'bochs' || model.startsWith('vmware') || model.startsWith('qemu') || model.startsWith('parallels')) {\n                result.virtual = true;\n                if (model.startsWith('virtualbox')) { result.virtualHost = 'VirtualBox'; }\n                if (model.startsWith('vmware')) { result.virtualHost = 'VMware'; }\n                if (model.startsWith('kvm')) { result.virtualHost = 'KVM'; }\n                if (model.startsWith('bochs')) { result.virtualHost = 'bochs'; }\n                if (model.startsWith('qemu')) { result.virtualHost = 'KVM'; }\n                if (model.startsWith('parallels')) { result.virtualHost = 'Parallels'; }\n              }\n              const manufacturer = result.manufacturer.toLowerCase();\n              if (manufacturer.startsWith('vmware') || manufacturer.startsWith('qemu') || manufacturer === 'xen' || manufacturer.startsWith('parallels')) {\n                result.virtual = true;\n                if (manufacturer.startsWith('vmware')) { result.virtualHost = 'VMware'; }\n                if (manufacturer.startsWith('xen')) { result.virtualHost = 'Xen'; }\n                if (manufacturer.startsWith('qemu')) { result.virtualHost = 'KVM'; }\n                if (manufacturer.startsWith('parallels')) { result.virtualHost = 'Parallels'; }\n              }\n              util.powerShell('Get-CimInstance MS_Systeminformation -Namespace \"root/wmi\" | select systemsku | fl ').then((stdout, error) => {\n                if (!error) {\n                  let lines = stdout.split('\\r\\n');\n                  result.sku = util.getValue(lines, 'systemsku', ':');\n                }\n                if (!result.virtual) {\n                  util.powerShell('Get-CimInstance Win32_bios | select Version, SerialNumber, SMBIOSBIOSVersion').then((stdout, error) => {\n                    if (!error) {\n                      let lines = stdout.toString();\n                      if (lines.indexOf('VRTUAL') >= 0 || lines.indexOf('A M I ') >= 0 || lines.indexOf('VirtualBox') >= 0 || lines.indexOf('VMWare') >= 0 || lines.indexOf('Xen') >= 0 || lines.indexOf('Parallels') >= 0) {\n                        result.virtual = true;\n                        if (lines.indexOf('VirtualBox') >= 0 && !result.virtualHost) {\n                          result.virtualHost = 'VirtualBox';\n                        }\n                        if (lines.indexOf('VMware') >= 0 && !result.virtualHost) {\n                          result.virtualHost = 'VMware';\n                        }\n                        if (lines.indexOf('Xen') >= 0 && !result.virtualHost) {\n                          result.virtualHost = 'Xen';\n                        }\n                        if (lines.indexOf('VRTUAL') >= 0 && !result.virtualHost) {\n                          result.virtualHost = 'Hyper-V';\n                        }\n                        if (lines.indexOf('A M I') >= 0 && !result.virtualHost) {\n                          result.virtualHost = 'Virtual PC';\n                        }\n                        if (lines.indexOf('Parallels') >= 0 && !result.virtualHost) {\n                          result.virtualHost = 'Parallels';\n                        }\n                      }\n                      if (callback) { callback(result); }\n                      resolve(result);\n                    } else {\n                      if (callback) { callback(result); }\n                      resolve(result);\n                    }\n                  });\n                } else {\n                  if (callback) { callback(result); }\n                  resolve(result);\n                }\n              });\n            } else {\n              if (callback) { callback(result); }\n              resolve(result);\n            }\n          });\n        } catch (e) {\n          if (callback) { callback(result); }\n          resolve(result);\n        }\n      }\n    });\n  });\n}\n\nexports.system = system;\n\nfunction cleanDefaults(s) {\n  const cmpStr = s.toLowerCase();\n  if (cmpStr.indexOf('o.e.m.') === -1 && cmpStr.indexOf('default string') === -1 && cmpStr !== 'default') {\n    return s || '';\n  }\n  return '';\n}\nfunction bios(callback) {\n\n  return new Promise((resolve) => {\n    process.nextTick(() => {\n\n      let result = {\n        vendor: '',\n        version: '',\n        releaseDate: '',\n        revision: '',\n      };\n      let cmd = '';\n      if (_linux || _freebsd || _openbsd || _netbsd) {\n        if (process.arch === 'arm') {\n          cmd = 'cat /proc/cpuinfo | grep Serial';\n        } else {\n          cmd = 'export LC_ALL=C; dmidecode -t bios 2>/dev/null; unset LC_ALL';\n        }\n        exec(cmd, function (error, stdout) {\n          let lines = stdout.toString().split('\\n');\n          result.vendor = util.getValue(lines, 'Vendor');\n          result.version = util.getValue(lines, 'Version');\n          let datetime = util.getValue(lines, 'Release Date');\n          result.releaseDate = util.parseDateTime(datetime).date;\n          result.revision = util.getValue(lines, 'BIOS Revision');\n          result.serial = util.getValue(lines, 'SerialNumber');\n          let language = util.getValue(lines, 'Currently Installed Language').split('|')[0];\n          if (language) {\n            result.language = language;\n          }\n          if (lines.length && stdout.toString().indexOf('Characteristics:') >= 0) {\n            const features = [];\n            lines.forEach(line => {\n              if (line.indexOf(' is supported') >= 0) {\n                const feature = line.split(' is supported')[0].trim();\n                features.push(feature);\n              }\n            });\n            result.features = features;\n          }\n          // Non-Root values\n          const cmd = `echo -n \"bios_date: \"; cat /sys/devices/virtual/dmi/id/bios_date 2>/dev/null; echo;\n            echo -n \"bios_vendor: \"; cat /sys/devices/virtual/dmi/id/bios_vendor 2>/dev/null; echo;\n            echo -n \"bios_version: \"; cat /sys/devices/virtual/dmi/id/bios_version 2>/dev/null; echo;`;\n          try {\n            lines = execSync(cmd).toString().split('\\n');\n            result.vendor = !result.vendor ? util.getValue(lines, 'bios_vendor') : result.vendor;\n            result.version = !result.version ? util.getValue(lines, 'bios_version') : result.version;\n            datetime = util.getValue(lines, 'bios_date');\n            result.releaseDate = !result.releaseDate ? util.parseDateTime(datetime).date : result.releaseDate;\n          } catch (e) {\n            util.noop();\n          }\n          if (callback) { callback(result); }\n          resolve(result);\n        });\n      }\n      if (_darwin) {\n        result.vendor = 'Apple Inc.';\n        exec(\n          'system_profiler SPHardwareDataType -json', function (error, stdout) {\n            try {\n              const hardwareData = JSON.parse(stdout.toString());\n              if (hardwareData && hardwareData.SPHardwareDataType && hardwareData.SPHardwareDataType.length) {\n                let bootRomVersion = hardwareData.SPHardwareDataType[0].boot_rom_version;\n                bootRomVersion = bootRomVersion ? bootRomVersion.split('(')[0].trim() : null;\n                result.version = bootRomVersion;\n              }\n            } catch (e) {\n              util.noop();\n            }\n            if (callback) { callback(result); }\n            resolve(result);\n          });\n      }\n      if (_sunos) {\n        result.vendor = 'Sun Microsystems';\n        if (callback) { callback(result); }\n        resolve(result);\n      }\n      if (_windows) {\n        try {\n          util.powerShell('Get-CimInstance Win32_bios | select Description,Version,Manufacturer,@{n=\"ReleaseDate\";e={$_.ReleaseDate.ToString(\"yyyy-MM-dd\")}},BuildNumber,SerialNumber,SMBIOSBIOSVersion | fl').then((stdout, error) => {\n            if (!error) {\n              let lines = stdout.toString().split('\\r\\n');\n              const description = util.getValue(lines, 'description', ':');\n              const version = util.getValue(lines, 'SMBIOSBIOSVersion', ':');\n              if (description.indexOf(' Version ') !== -1) {\n                // ... Phoenix ROM BIOS PLUS Version 1.10 A04\n                result.vendor = description.split(' Version ')[0].trim();\n                result.version = description.split(' Version ')[1].trim();\n              } else if (description.indexOf(' Ver: ') !== -1) {\n                // ... BIOS Date: 06/27/16 17:50:16 Ver: 1.4.5\n                result.vendor = util.getValue(lines, 'manufacturer', ':');\n                result.version = description.split(' Ver: ')[1].trim();\n              } else {\n                result.vendor = util.getValue(lines, 'manufacturer', ':');\n                result.version = version || util.getValue(lines, 'version', ':');\n              }\n              result.releaseDate = util.getValue(lines, 'releasedate', ':');\n              result.revision = util.getValue(lines, 'buildnumber', ':');\n              result.serial = cleanDefaults(util.getValue(lines, 'serialnumber', ':'));\n            }\n\n            if (callback) { callback(result); }\n            resolve(result);\n          });\n        } catch (e) {\n          if (callback) { callback(result); }\n          resolve(result);\n        }\n      }\n    });\n  });\n}\n\nexports.bios = bios;\n\nfunction baseboard(callback) {\n\n  return new Promise((resolve) => {\n    process.nextTick(() => {\n\n      let result = {\n        manufacturer: '',\n        model: '',\n        version: '',\n        serial: '-',\n        assetTag: '-',\n        memMax: null,\n        memSlots: null\n      };\n      let cmd = '';\n      if (_linux || _freebsd || _openbsd || _netbsd) {\n        if (process.arch === 'arm') {\n          cmd = 'cat /proc/cpuinfo | grep Serial';\n          // 'BCM2709', 'BCM2835', 'BCM2708' -->\n        } else {\n          cmd = 'export LC_ALL=C; dmidecode -t 2 2>/dev/null; unset LC_ALL';\n        }\n        const workload = [];\n        workload.push(execPromise(cmd));\n        workload.push(execPromise('export LC_ALL=C; dmidecode -t memory 2>/dev/null'));\n        util.promiseAll(\n          workload\n        ).then((data) => {\n          let lines = data.results[0] ? data.results[0].toString().split('\\n') : [''];\n          result.manufacturer = util.getValue(lines, 'Manufacturer');\n          result.model = util.getValue(lines, 'Product Name');\n          result.version = util.getValue(lines, 'Version');\n          result.serial = util.getValue(lines, 'Serial Number');\n          result.assetTag = util.getValue(lines, 'Asset Tag');\n          // Non-Root values\n          const cmd = `echo -n \"board_asset_tag: \"; cat /sys/devices/virtual/dmi/id/board_asset_tag 2>/dev/null; echo;\n            echo -n \"board_name: \"; cat /sys/devices/virtual/dmi/id/board_name 2>/dev/null; echo;\n            echo -n \"board_serial: \"; cat /sys/devices/virtual/dmi/id/board_serial 2>/dev/null; echo;\n            echo -n \"board_vendor: \"; cat /sys/devices/virtual/dmi/id/board_vendor 2>/dev/null; echo;\n            echo -n \"board_version: \"; cat /sys/devices/virtual/dmi/id/board_version 2>/dev/null; echo;`;\n          try {\n            lines = execSync(cmd).toString().split('\\n');\n            result.manufacturer = !result.manufacturer ? util.getValue(lines, 'board_vendor') : result.manufacturer;\n            result.model = !result.model ? util.getValue(lines, 'board_name') : result.model;\n            result.version = !result.version ? util.getValue(lines, 'board_version') : result.version;\n            result.serial = !result.serial ? util.getValue(lines, 'board_serial') : result.serial;\n            result.assetTag = !result.assetTag ? util.getValue(lines, 'board_asset_tag') : result.assetTag;\n          } catch (e) {\n            util.noop();\n          }\n          if (result.serial.toLowerCase().indexOf('o.e.m.') !== -1) { result.serial = '-'; }\n          if (result.assetTag.toLowerCase().indexOf('o.e.m.') !== -1) { result.assetTag = '-'; }\n\n          // mem\n          lines = data.results[1] ? data.results[1].toString().split('\\n') : [''];\n          result.memMax = util.toInt(util.getValue(lines, 'Maximum Capacity')) * 1024 * 1024 * 1024 || null;\n          result.memSlots = util.toInt(util.getValue(lines, 'Number Of Devices')) || null;\n\n          // raspberry\n          let linesRpi = '';\n          try {\n            linesRpi = fs.readFileSync('/proc/cpuinfo').toString().split('\\n');\n          } catch (e) {\n            util.noop();\n          }\n          if (linesRpi) {\n            const hardware = util.getValue(linesRpi, 'hardware');\n            if (hardware.startsWith('BCM')) {\n              const rpi = util.decodePiCpuinfo(linesRpi);\n              result.manufacturer = rpi.manufacturer;\n              result.model = 'Raspberry Pi';\n              result.serial = rpi.serial;\n              result.version = rpi.type + ' - ' + rpi.revision;\n              result.memMax = os.totalmem();\n              result.memSlots = 0;\n            }\n          }\n\n          if (callback) { callback(result); }\n          resolve(result);\n        });\n      }\n      if (_darwin) {\n        const workload = [];\n        workload.push(execPromise('ioreg -c IOPlatformExpertDevice -d 2'));\n        workload.push(execPromise('system_profiler SPMemoryDataType'));\n        util.promiseAll(\n          workload\n        ).then((data) => {\n          let lines = data.results[0] ? data.results[0].toString().replace(/[<>\"]/g, '').split('\\n') : [''];\n          result.manufacturer = util.getValue(lines, 'manufacturer', '=', true);\n          result.model = util.getValue(lines, 'model', '=', true);\n          result.version = util.getValue(lines, 'version', '=', true);\n          result.serial = util.getValue(lines, 'ioplatformserialnumber', '=', true);\n          result.assetTag = util.getValue(lines, 'board-id', '=', true);\n\n          // mem\n          let devices = data.results[1] ? data.results[1].toString().split('        BANK ') : [''];\n          if (devices.length === 1) {\n            devices = data.results[1] ? data.results[1].toString().split('        DIMM') : [''];\n          }\n          devices.shift();\n          result.memSlots = devices.length;\n\n          if (os.arch() === 'arm64') {\n            result.memSlots = 0;\n            result.memMax = os.totalmem();\n          }\n\n          if (callback) { callback(result); }\n          resolve(result);\n        });\n      }\n      if (_sunos) {\n        if (callback) { callback(result); }\n        resolve(result);\n      }\n      if (_windows) {\n        try {\n          const workload = [];\n          const win10plus = parseInt(os.release()) >= 10;\n          const maxCapacityAttribute = win10plus ? 'MaxCapacityEx' : 'MaxCapacity';\n          workload.push(util.powerShell('Get-CimInstance Win32_baseboard | select Model,Manufacturer,Product,Version,SerialNumber,PartNumber,SKU | fl'));\n          workload.push(util.powerShell(`Get-CimInstance Win32_physicalmemoryarray | select ${maxCapacityAttribute}, MemoryDevices | fl`));\n          util.promiseAll(\n            workload\n          ).then((data) => {\n            let lines = data.results[0] ? data.results[0].toString().split('\\r\\n') : [''];\n\n            result.manufacturer = cleanDefaults(util.getValue(lines, 'manufacturer', ':'));\n            result.model = cleanDefaults(util.getValue(lines, 'model', ':'));\n            if (!result.model) {\n              result.model = cleanDefaults(util.getValue(lines, 'product', ':'));\n            }\n            result.version = cleanDefaults(util.getValue(lines, 'version', ':'));\n            result.serial = cleanDefaults(util.getValue(lines, 'serialnumber', ':'));\n            result.assetTag = cleanDefaults(util.getValue(lines, 'partnumber', ':'));\n            if (!result.assetTag) {\n              result.assetTag = cleanDefaults(util.getValue(lines, 'sku', ':'));\n            }\n\n            // memphysical\n            lines = data.results[1] ? data.results[1].toString().split('\\r\\n') : [''];\n            result.memMax = util.toInt(util.getValue(lines, maxCapacityAttribute, ':')) * (win10plus ? 1024 : 1) || null;\n            result.memSlots = util.toInt(util.getValue(lines, 'MemoryDevices', ':')) || null;\n\n            if (callback) { callback(result); }\n            resolve(result);\n          });\n        } catch (e) {\n          if (callback) { callback(result); }\n          resolve(result);\n        }\n      }\n    });\n  });\n}\n\nexports.baseboard = baseboard;\n\nfunction macOsChassisType(model) {\n  model = model.toLowerCase();\n  if (model.startsWith('macbookair')) { return 'Notebook'; }\n  if (model.startsWith('macbookpro')) { return 'Laptop'; }\n  if (model.startsWith('macbook')) { return 'Notebook'; }\n  if (model.startsWith('macmini')) { return 'Desktop'; }\n  if (model.startsWith('imac')) { return 'Desktop'; }\n  if (model.startsWith('macstudio')) { return 'Desktop'; }\n  if (model.startsWith('macpro')) { return 'Tower'; }\n  return 'Other';\n}\n\nfunction chassis(callback) {\n  const chassisTypes = ['Other',\n    'Unknown',\n    'Desktop',\n    'Low Profile Desktop',\n    'Pizza Box',\n    'Mini Tower',\n    'Tower',\n    'Portable',\n    'Laptop',\n    'Notebook',\n    'Hand Held',\n    'Docking Station',\n    'All in One',\n    'Sub Notebook',\n    'Space-Saving',\n    'Lunch Box',\n    'Main System Chassis',\n    'Expansion Chassis',\n    'SubChassis',\n    'Bus Expansion Chassis',\n    'Peripheral Chassis',\n    'Storage Chassis',\n    'Rack Mount Chassis',\n    'Sealed-Case PC',\n    'Multi-System Chassis',\n    'Compact PCI',\n    'Advanced TCA',\n    'Blade',\n    'Blade Enclosure',\n    'Tablet',\n    'Convertible',\n    'Detachable',\n    'IoT Gateway ',\n    'Embedded PC',\n    'Mini PC',\n    'Stick PC',\n  ];\n\n  return new Promise((resolve) => {\n    process.nextTick(() => {\n\n      let result = {\n        manufacturer: '',\n        model: '',\n        type: '',\n        version: '',\n        serial: '-',\n        assetTag: '-',\n        sku: '',\n      };\n      if (_linux || _freebsd || _openbsd || _netbsd) {\n        const cmd = `echo -n \"chassis_asset_tag: \"; cat /sys/devices/virtual/dmi/id/chassis_asset_tag 2>/dev/null; echo;\n            echo -n \"chassis_serial: \"; cat /sys/devices/virtual/dmi/id/chassis_serial 2>/dev/null; echo;\n            echo -n \"chassis_type: \"; cat /sys/devices/virtual/dmi/id/chassis_type 2>/dev/null; echo;\n            echo -n \"chassis_vendor: \"; cat /sys/devices/virtual/dmi/id/chassis_vendor 2>/dev/null; echo;\n            echo -n \"chassis_version: \"; cat /sys/devices/virtual/dmi/id/chassis_version 2>/dev/null; echo;`;\n        exec(cmd, function (error, stdout) {\n          let lines = stdout.toString().split('\\n');\n          result.manufacturer = util.getValue(lines, 'chassis_vendor');\n          const ctype = parseInt(util.getValue(lines, 'chassis_type').replace(/\\D/g, ''));\n          result.type = (ctype && !isNaN(ctype) && ctype < chassisTypes.length) ? chassisTypes[ctype - 1] : '';\n          result.version = util.getValue(lines, 'chassis_version');\n          result.serial = util.getValue(lines, 'chassis_serial');\n          result.assetTag = util.getValue(lines, 'chassis_asset_tag');\n          if (result.manufacturer.toLowerCase().indexOf('o.e.m.') !== -1) { result.manufacturer = '-'; }\n          if (result.version.toLowerCase().indexOf('o.e.m.') !== -1) { result.version = '-'; }\n          if (result.serial.toLowerCase().indexOf('o.e.m.') !== -1) { result.serial = '-'; }\n          if (result.assetTag.toLowerCase().indexOf('o.e.m.') !== -1) { result.assetTag = '-'; }\n\n          if (callback) { callback(result); }\n          resolve(result);\n        });\n      }\n      if (_darwin) {\n        exec('ioreg -c IOPlatformExpertDevice -d 2', function (error, stdout) {\n          if (!error) {\n            let lines = stdout.toString().replace(/[<>\"]/g, '').split('\\n');\n            const model = util.getValue(lines, 'model', '=', true);\n            const modelParts = util.splitByNumber(model);\n            const version = util.getValue(lines, 'version', '=', true);\n            result.manufacturer = util.getValue(lines, 'manufacturer', '=', true);\n            result.model = version ? util.getValue(lines, 'model', '=', true) : modelParts[0];\n            result.type = macOsChassisType(result.model);\n            result.version = version || model;\n            result.serial = util.getValue(lines, 'ioplatformserialnumber', '=', true);\n            result.assetTag = util.getValue(lines, 'board-id', '=', true) || util.getValue(lines, 'target-type', '=', true);\n            result.sku = util.getValue(lines, 'target-sub-type', '=', true);\n          }\n\n          if (callback) { callback(result); }\n          resolve(result);\n        });\n      }\n      if (_sunos) {\n        if (callback) { callback(result); }\n        resolve(result);\n      }\n      if (_windows) {\n        try {\n          util.powerShell('Get-CimInstance Win32_SystemEnclosure | select Model,Manufacturer,ChassisTypes,Version,SerialNumber,PartNumber,SKU,SMBIOSAssetTag | fl').then((stdout, error) => {\n            if (!error) {\n              let lines = stdout.toString().split('\\r\\n');\n\n              result.manufacturer = cleanDefaults(util.getValue(lines, 'manufacturer', ':'));\n              result.model = cleanDefaults(util.getValue(lines, 'model', ':'));\n              const ctype = parseInt(util.getValue(lines, 'ChassisTypes', ':').replace(/\\D/g, ''));\n              result.type = (ctype && !isNaN(ctype) && ctype < chassisTypes.length) ? chassisTypes[ctype - 1] : '';\n              result.version = cleanDefaults(util.getValue(lines, 'version', ':'));\n              result.serial = cleanDefaults(util.getValue(lines, 'serialnumber', ':'));\n              result.assetTag = cleanDefaults(util.getValue(lines, 'partnumber', ':'));\n              if (!result.assetTag) {\n                result.assetTag = cleanDefaults(util.getValue(lines, 'SMBIOSAssetTag', ':'));\n              }\n              result.sku = cleanDefaults(util.getValue(lines, 'sku', ':'));\n            }\n\n            if (callback) { callback(result); }\n            resolve(result);\n          });\n        } catch (e) {\n          if (callback) { callback(result); }\n          resolve(result);\n        }\n      }\n    });\n  });\n}\n\nexports.chassis = chassis;\n", "'use strict';\n// @ts-check\n// ==================================================================================\n// osinfo.js\n// ----------------------------------------------------------------------------------\n// Description:   System Information - library\n//                for Node.js\n// Copyright:     (c) 2014 - 2024\n// Author:        Sebastian Hildebrandt\n// ----------------------------------------------------------------------------------\n// License:       MIT\n// ==================================================================================\n// 3. Operating System\n// ----------------------------------------------------------------------------------\n\nconst os = require('os');\nconst fs = require('fs');\nconst util = require('./util');\nconst exec = require('child_process').exec;\nconst execSync = require('child_process').execSync;\n\nlet _platform = process.platform;\n\nconst _linux = (_platform === 'linux' || _platform === 'android');\nconst _darwin = (_platform === 'darwin');\nconst _windows = (_platform === 'win32');\nconst _freebsd = (_platform === 'freebsd');\nconst _openbsd = (_platform === 'openbsd');\nconst _netbsd = (_platform === 'netbsd');\nconst _sunos = (_platform === 'sunos');\n\n// --------------------------\n// Get current time and OS uptime\n\nfunction time() {\n  let t = new Date().toString().split(' ');\n  return {\n    current: Date.now(),\n    uptime: os.uptime(),\n    timezone: (t.length >= 7) ? t[5] : '',\n    timezoneName: Intl ? Intl.DateTimeFormat().resolvedOptions().timeZone : (t.length >= 7) ? t.slice(6).join(' ').replace(/\\(/g, '').replace(/\\)/g, '') : ''\n  };\n}\n\nexports.time = time;\n\n// --------------------------\n// Get logo filename of OS distribution\n\nfunction getLogoFile(distro) {\n  distro = distro || '';\n  distro = distro.toLowerCase();\n  let result = _platform;\n  if (_windows) {\n    result = 'windows';\n  }\n  else if (distro.indexOf('mac os') !== -1) {\n    result = 'apple';\n  }\n  else if (distro.indexOf('arch') !== -1) {\n    result = 'arch';\n  }\n  else if (distro.indexOf('centos') !== -1) {\n    result = 'centos';\n  }\n  else if (distro.indexOf('coreos') !== -1) {\n    result = 'coreos';\n  }\n  else if (distro.indexOf('debian') !== -1) {\n    result = 'debian';\n  }\n  else if (distro.indexOf('deepin') !== -1) {\n    result = 'deepin';\n  }\n  else if (distro.indexOf('elementary') !== -1) {\n    result = 'elementary';\n  }\n  else if (distro.indexOf('fedora') !== -1) {\n    result = 'fedora';\n  }\n  else if (distro.indexOf('gentoo') !== -1) {\n    result = 'gentoo';\n  }\n  else if (distro.indexOf('mageia') !== -1) {\n    result = 'mageia';\n  }\n  else if (distro.indexOf('mandriva') !== -1) {\n    result = 'mandriva';\n  }\n  else if (distro.indexOf('manjaro') !== -1) {\n    result = 'manjaro';\n  }\n  else if (distro.indexOf('mint') !== -1) {\n    result = 'mint';\n  }\n  else if (distro.indexOf('mx') !== -1) {\n    result = 'mx';\n  }\n  else if (distro.indexOf('openbsd') !== -1) {\n    result = 'openbsd';\n  }\n  else if (distro.indexOf('freebsd') !== -1) {\n    result = 'freebsd';\n  }\n  else if (distro.indexOf('opensuse') !== -1) {\n    result = 'opensuse';\n  }\n  else if (distro.indexOf('pclinuxos') !== -1) {\n    result = 'pclinuxos';\n  }\n  else if (distro.indexOf('puppy') !== -1) {\n    result = 'puppy';\n  }\n  else if (distro.indexOf('raspbian') !== -1) {\n    result = 'raspbian';\n  }\n  else if (distro.indexOf('reactos') !== -1) {\n    result = 'reactos';\n  }\n  else if (distro.indexOf('redhat') !== -1) {\n    result = 'redhat';\n  }\n  else if (distro.indexOf('slackware') !== -1) {\n    result = 'slackware';\n  }\n  else if (distro.indexOf('sugar') !== -1) {\n    result = 'sugar';\n  }\n  else if (distro.indexOf('steam') !== -1) {\n    result = 'steam';\n  }\n  else if (distro.indexOf('suse') !== -1) {\n    result = 'suse';\n  }\n  else if (distro.indexOf('mate') !== -1) {\n    result = 'ubuntu-mate';\n  }\n  else if (distro.indexOf('lubuntu') !== -1) {\n    result = 'lubuntu';\n  }\n  else if (distro.indexOf('xubuntu') !== -1) {\n    result = 'xubuntu';\n  }\n  else if (distro.indexOf('ubuntu') !== -1) {\n    result = 'ubuntu';\n  }\n  else if (distro.indexOf('solaris') !== -1) {\n    result = 'solaris';\n  }\n  else if (distro.indexOf('tails') !== -1) {\n    result = 'tails';\n  }\n  else if (distro.indexOf('feren') !== -1) {\n    result = 'ferenos';\n  }\n  else if (distro.indexOf('robolinux') !== -1) {\n    result = 'robolinux';\n  } else if (_linux && distro) {\n    result = distro.toLowerCase().trim().replace(/\\s+/g, '-');\n  }\n  return result;\n}\n\n// --------------------------\n// FQDN\n\nfunction getFQDN() {\n  let fqdn = os.hostname;\n  if (_linux || _darwin) {\n    try {\n      const stdout = execSync('hostnamectl --json short 2>/dev/null');\n      const json = JSON.parse(stdout.toString());\n\n      fqdn = json['StaticHostname'];\n    } catch (e) {\n      try {\n        const stdout = execSync('hostname -f 2>/dev/null');\n        fqdn = stdout.toString().split(os.EOL)[0];\n      } catch (e) {\n        util.noop();\n      }\n    }\n  }\n  if (_freebsd || _openbsd || _netbsd) {\n    try {\n      const stdout = execSync('hostname 2>/dev/null');\n      fqdn = stdout.toString().split(os.EOL)[0];\n    } catch (e) {\n      util.noop();\n    }\n  }\n  if (_windows) {\n    try {\n      const stdout = execSync('echo %COMPUTERNAME%.%USERDNSDOMAIN%', util.execOptsWin);\n      fqdn = stdout.toString().replace('.%USERDNSDOMAIN%', '').split(os.EOL)[0];\n    } catch (e) {\n      util.noop();\n    }\n  }\n  return fqdn;\n}\n\n// --------------------------\n// OS Information\n\nfunction osInfo(callback) {\n\n  return new Promise((resolve) => {\n    process.nextTick(() => {\n      let result = {\n\n        platform: (_platform === 'win32' ? 'Windows' : _platform),\n        distro: 'unknown',\n        release: 'unknown',\n        codename: '',\n        kernel: os.release(),\n        arch: os.arch(),\n        hostname: os.hostname(),\n        fqdn: getFQDN(),\n        codepage: '',\n        logofile: '',\n        serial: '',\n        build: '',\n        servicepack: '',\n        uefi: false\n      };\n\n      if (_linux) {\n\n        exec('cat /etc/*-release; cat /usr/lib/os-release; cat /etc/openwrt_release', function (error, stdout) {\n          /**\n           * @namespace\n           * @property {string}  DISTRIB_ID\n           * @property {string}  NAME\n           * @property {string}  DISTRIB_RELEASE\n           * @property {string}  VERSION_ID\n           * @property {string}  DISTRIB_CODENAME\n           */\n          let release = {};\n          let lines = stdout.toString().split('\\n');\n          lines.forEach(function (line) {\n            if (line.indexOf('=') !== -1) {\n              release[line.split('=')[0].trim().toUpperCase()] = line.split('=')[1].trim();\n            }\n          });\n          result.distro = (release.DISTRIB_ID || release.NAME || 'unknown').replace(/\"/g, '');\n          result.logofile = getLogoFile(result.distro);\n          let releaseVersion = (release.VERSION || '').replace(/\"/g, '');\n          let codename = (release.DISTRIB_CODENAME || release.VERSION_CODENAME || '').replace(/\"/g, '');\n          const prettyName = (release.PRETTY_NAME || '').replace(/\"/g, '');\n          if (prettyName.indexOf(result.distro + ' ') === 0) {\n            releaseVersion = prettyName.replace(result.distro + ' ', '').trim();\n          }\n          if (releaseVersion.indexOf('(') >= 0) {\n            codename = releaseVersion.split('(')[1].replace(/[()]/g, '').trim();\n            releaseVersion = releaseVersion.split('(')[0].trim();\n          }\n          result.release = (releaseVersion || release.DISTRIB_RELEASE || release.VERSION_ID || 'unknown').replace(/\"/g, '');\n          result.codename = codename;\n          result.codepage = util.getCodepage();\n          result.build = (release.BUILD_ID || '').replace(/\"/g, '').trim();\n          isUefiLinux().then(uefi => {\n            result.uefi = uefi;\n            uuid().then((data) => {\n              result.serial = data.os;\n              if (callback) {\n                callback(result);\n              }\n              resolve(result);\n            });\n          });\n        });\n      }\n      if (_freebsd || _openbsd || _netbsd) {\n\n        exec('sysctl kern.ostype kern.osrelease kern.osrevision kern.hostuuid machdep.bootmethod kern.geom.confxml', function (error, stdout) {\n          let lines = stdout.toString().split('\\n');\n          const distro = util.getValue(lines, 'kern.ostype');\n          const logofile = getLogoFile(distro);\n          const release = util.getValue(lines, 'kern.osrelease').split('-')[0];\n          const serial = util.getValue(lines, 'kern.uuid');\n          const bootmethod = util.getValue(lines, 'machdep.bootmethod');\n          const uefiConf = stdout.toString().indexOf('<type>efi</type>') >= 0;\n          const uefi = bootmethod ? bootmethod.toLowerCase().indexOf('uefi') >= 0 : (uefiConf ? uefiConf : null);\n          result.distro = distro || result.distro;\n          result.logofile = logofile || result.logofile;\n          result.release = release || result.release;\n          result.serial = serial || result.serial;\n          result.codename = '';\n          result.codepage = util.getCodepage();\n          result.uefi = uefi || null;\n          if (callback) {\n            callback(result);\n          }\n          resolve(result);\n        });\n      }\n      if (_darwin) {\n        exec('sw_vers; sysctl kern.ostype kern.osrelease kern.osrevision kern.uuid', function (error, stdout) {\n          let lines = stdout.toString().split('\\n');\n          result.serial = util.getValue(lines, 'kern.uuid');\n          result.distro = util.getValue(lines, 'ProductName');\n          result.release = (util.getValue(lines, 'ProductVersion', ':', true, true) + ' ' + util.getValue(lines, 'ProductVersionExtra', ':', true, true)).trim();\n          result.build = util.getValue(lines, 'BuildVersion');\n          result.logofile = getLogoFile(result.distro);\n          result.codename = 'macOS';\n          result.codename = (result.release.indexOf('10.4') > -1 ? 'Mac OS X Tiger' : result.codename);\n          result.codename = (result.release.indexOf('10.5') > -1 ? 'Mac OS X Leopard' : result.codename);\n          result.codename = (result.release.indexOf('10.6') > -1 ? 'Mac OS X Snow Leopard' : result.codename);\n          result.codename = (result.release.indexOf('10.7') > -1 ? 'Mac OS X Lion' : result.codename);\n          result.codename = (result.release.indexOf('10.8') > -1 ? 'OS X Mountain Lion' : result.codename);\n          result.codename = (result.release.indexOf('10.9') > -1 ? 'OS X Mavericks' : result.codename);\n          result.codename = (result.release.indexOf('10.10') > -1 ? 'OS X Yosemite' : result.codename);\n          result.codename = (result.release.indexOf('10.11') > -1 ? 'OS X El Capitan' : result.codename);\n          result.codename = (result.release.indexOf('10.12') > -1 ? 'macOS Sierra' : result.codename);\n          result.codename = (result.release.indexOf('10.13') > -1 ? 'macOS High Sierra' : result.codename);\n          result.codename = (result.release.indexOf('10.14') > -1 ? 'macOS Mojave' : result.codename);\n          result.codename = (result.release.indexOf('10.15') > -1 ? 'macOS Catalina' : result.codename);\n          result.codename = (result.release.startsWith('11.') ? 'macOS Big Sur' : result.codename);\n          result.codename = (result.release.startsWith('12.') ? 'macOS Monterey' : result.codename);\n          result.codename = (result.release.startsWith('13.') ? 'macOS Ventura' : result.codename);\n          result.codename = (result.release.startsWith('14.') ? 'macOS Sonoma' : result.codename);\n          result.codename = (result.release.startsWith('15.') ? 'macOS Sequoia' : result.codename);\n          result.uefi = true;\n          result.codepage = util.getCodepage();\n          if (callback) {\n            callback(result);\n          }\n          resolve(result);\n        });\n      }\n      if (_sunos) {\n        result.release = result.kernel;\n        exec('uname -o', function (error, stdout) {\n          let lines = stdout.toString().split('\\n');\n          result.distro = lines[0];\n          result.logofile = getLogoFile(result.distro);\n          if (callback) { callback(result); }\n          resolve(result);\n        });\n      }\n      if (_windows) {\n        result.logofile = getLogoFile();\n        result.release = result.kernel;\n        try {\n          const workload = [];\n          workload.push(util.powerShell('Get-CimInstance Win32_OperatingSystem | select Caption,SerialNumber,BuildNumber,ServicePackMajorVersion,ServicePackMinorVersion | fl'));\n          workload.push(util.powerShell('(Get-CimInstance Win32_ComputerSystem).HypervisorPresent'));\n          workload.push(util.powerShell('Add-Type -AssemblyName System.Windows.Forms; [System.Windows.Forms.SystemInformation]::TerminalServerSession'));\n          util.promiseAll(\n            workload\n          ).then((data) => {\n            let lines = data.results[0] ? data.results[0].toString().split('\\r\\n') : [''];\n            result.distro = util.getValue(lines, 'Caption', ':').trim();\n            result.serial = util.getValue(lines, 'SerialNumber', ':').trim();\n            result.build = util.getValue(lines, 'BuildNumber', ':').trim();\n            result.servicepack = util.getValue(lines, 'ServicePackMajorVersion', ':').trim() + '.' + util.getValue(lines, 'ServicePackMinorVersion', ':').trim();\n            result.codepage = util.getCodepage();\n            const hyperv = data.results[1] ? data.results[1].toString().toLowerCase() : '';\n            result.hypervisor = hyperv.indexOf('true') !== -1;\n            const term = data.results[2] ? data.results[2].toString() : '';\n            result.remoteSession = (term.toString().toLowerCase().indexOf('true') >= 0);\n            isUefiWindows().then(uefi => {\n              result.uefi = uefi;\n              if (callback) {\n                callback(result);\n              }\n              resolve(result);\n            });\n          });\n        } catch (e) {\n          if (callback) { callback(result); }\n          resolve(result);\n        }\n      }\n    });\n  });\n}\n\nexports.osInfo = osInfo;\n\nfunction isUefiLinux() {\n  return new Promise((resolve) => {\n    process.nextTick(() => {\n      fs.stat('/sys/firmware/efi', function (err) {\n        if (!err) {\n          return resolve(true);\n        } else {\n          exec('dmesg | grep -E \"EFI v\"', function (error, stdout) {\n            if (!error) {\n              const lines = stdout.toString().split('\\n');\n              return resolve(lines.length > 0);\n            }\n            return resolve(false);\n          });\n        }\n      });\n    });\n  });\n}\n\nfunction isUefiWindows() {\n  return new Promise((resolve) => {\n    process.nextTick(() => {\n      try {\n        exec('findstr /C:\"Detected boot environment\" \"%windir%\\\\Panther\\\\setupact.log\"', util.execOptsWin, function (error, stdout) {\n          if (!error) {\n            const line = stdout.toString().split('\\n\\r')[0];\n            return resolve(line.toLowerCase().indexOf('efi') >= 0);\n          } else {\n            exec('echo %firmware_type%', util.execOptsWin, function (error, stdout) {\n              if (!error) {\n                const line = stdout.toString() || '';\n                return resolve(line.toLowerCase().indexOf('efi') >= 0);\n              } else {\n                return resolve(false);\n              }\n            });\n          }\n        });\n      } catch (e) {\n        return resolve(false);\n      }\n    });\n  });\n}\n\nfunction versions(apps, callback) {\n  let versionObject = {\n    kernel: os.release(),\n    openssl: '',\n    systemOpenssl: '',\n    systemOpensslLib: '',\n    node: process.versions.node,\n    v8: process.versions.v8,\n    npm: '',\n    yarn: '',\n    pm2: '',\n    gulp: '',\n    grunt: '',\n    git: '',\n    tsc: '',\n    mysql: '',\n    redis: '',\n    mongodb: '',\n    apache: '',\n    nginx: '',\n    php: '',\n    docker: '',\n    postfix: '',\n    postgresql: '',\n    perl: '',\n    python: '',\n    python3: '',\n    pip: '',\n    pip3: '',\n    java: '',\n    gcc: '',\n    virtualbox: '',\n    bash: '',\n    zsh: '',\n    fish: '',\n    powershell: '',\n    dotnet: ''\n  };\n\n  function checkVersionParam(apps) {\n    if (apps === '*') {\n      return {\n        versions: versionObject,\n        counter: 30\n      };\n    }\n    if (!Array.isArray(apps)) {\n      apps = apps.trim().toLowerCase().replace(/,+/g, '|').replace(/ /g, '|');\n      apps = apps.split('|');\n      const result = {\n        versions: {},\n        counter: 0\n      };\n      apps.forEach(el => {\n        if (el) {\n          for (let key in versionObject) {\n            if ({}.hasOwnProperty.call(versionObject, key)) {\n              if (key.toLowerCase() === el.toLowerCase() && !{}.hasOwnProperty.call(result.versions, key)) {\n                result.versions[key] = versionObject[key];\n                if (key === 'openssl') {\n                  result.versions.systemOpenssl = '';\n                  result.versions.systemOpensslLib = '';\n                }\n\n                if (!result.versions[key]) { result.counter++; }\n              }\n            }\n          }\n        }\n      });\n      return result;\n    }\n  }\n\n  return new Promise((resolve) => {\n    process.nextTick(() => {\n      if (util.isFunction(apps) && !callback) {\n        callback = apps;\n        apps = '*';\n      } else {\n        apps = apps || '*';\n        if (typeof apps !== 'string') {\n          if (callback) { callback({}); }\n          return resolve({});\n        }\n      }\n      const appsObj = checkVersionParam(apps);\n      let totalFunctions = appsObj.counter;\n\n      let functionProcessed = (function () {\n        return function () {\n          if (--totalFunctions === 0) {\n            if (callback) {\n              callback(appsObj.versions);\n            }\n            resolve(appsObj.versions);\n          }\n        };\n      })();\n\n      let cmd = '';\n      try {\n        if ({}.hasOwnProperty.call(appsObj.versions, 'openssl')) {\n          appsObj.versions.openssl = process.versions.openssl;\n          exec('openssl version', function (error, stdout) {\n            if (!error) {\n              let openssl_string = stdout.toString().split('\\n')[0].trim();\n              let openssl = openssl_string.split(' ');\n              appsObj.versions.systemOpenssl = openssl.length > 0 ? openssl[1] : openssl[0];\n              appsObj.versions.systemOpensslLib = openssl.length > 0 ? openssl[0] : 'openssl';\n            }\n            functionProcessed();\n          });\n        }\n        if ({}.hasOwnProperty.call(appsObj.versions, 'npm')) {\n          exec('npm -v', function (error, stdout) {\n            if (!error) {\n              appsObj.versions.npm = stdout.toString().split('\\n')[0];\n            }\n            functionProcessed();\n          });\n        }\n        if ({}.hasOwnProperty.call(appsObj.versions, 'pm2')) {\n          cmd = 'pm2';\n          if (_windows) {\n            cmd += '.cmd';\n          }\n          exec(`${cmd} -v`, function (error, stdout) {\n            if (!error) {\n              let pm2 = stdout.toString().split('\\n')[0].trim();\n              if (!pm2.startsWith('[PM2]')) {\n                appsObj.versions.pm2 = pm2;\n              }\n            }\n            functionProcessed();\n          });\n        }\n        if ({}.hasOwnProperty.call(appsObj.versions, 'yarn')) {\n          exec('yarn --version', function (error, stdout) {\n            if (!error) {\n              appsObj.versions.yarn = stdout.toString().split('\\n')[0];\n            }\n            functionProcessed();\n          });\n        }\n        if ({}.hasOwnProperty.call(appsObj.versions, 'gulp')) {\n          cmd = 'gulp';\n          if (_windows) {\n            cmd += '.cmd';\n          }\n          exec(`${cmd} --version`, function (error, stdout) {\n            if (!error) {\n              const gulp = stdout.toString().split('\\n')[0] || '';\n              appsObj.versions.gulp = (gulp.toLowerCase().split('version')[1] || '').trim();\n            }\n            functionProcessed();\n          });\n        }\n        if ({}.hasOwnProperty.call(appsObj.versions, 'tsc')) {\n          cmd = 'tsc';\n          if (_windows) {\n            cmd += '.cmd';\n          }\n          exec(`${cmd} --version`, function (error, stdout) {\n            if (!error) {\n              const tsc = stdout.toString().split('\\n')[0] || '';\n              appsObj.versions.tsc = (tsc.toLowerCase().split('version')[1] || '').trim();\n            }\n            functionProcessed();\n          });\n        }\n        if ({}.hasOwnProperty.call(appsObj.versions, 'grunt')) {\n          cmd = 'grunt';\n          if (_windows) {\n            cmd += '.cmd';\n          }\n          exec(`${cmd} --version`, function (error, stdout) {\n            if (!error) {\n              const grunt = stdout.toString().split('\\n')[0] || '';\n              appsObj.versions.grunt = (grunt.toLowerCase().split('cli v')[1] || '').trim();\n            }\n            functionProcessed();\n          });\n        }\n        if ({}.hasOwnProperty.call(appsObj.versions, 'git')) {\n          if (_darwin) {\n            const gitHomebrewExists = fs.existsSync('/usr/local/Cellar/git') || fs.existsSync('/opt/homebrew/bin/git');\n            if (util.darwinXcodeExists() || gitHomebrewExists) {\n              exec('git --version', function (error, stdout) {\n                if (!error) {\n                  let git = stdout.toString().split('\\n')[0] || '';\n                  git = (git.toLowerCase().split('version')[1] || '').trim();\n                  appsObj.versions.git = (git.split(' ')[0] || '').trim();\n                }\n                functionProcessed();\n              });\n            } else {\n              functionProcessed();\n            }\n          } else {\n            exec('git --version', function (error, stdout) {\n              if (!error) {\n                let git = stdout.toString().split('\\n')[0] || '';\n                git = (git.toLowerCase().split('version')[1] || '').trim();\n                appsObj.versions.git = (git.split(' ')[0] || '').trim();\n              }\n              functionProcessed();\n            });\n          }\n        }\n        if ({}.hasOwnProperty.call(appsObj.versions, 'apache')) {\n          exec('apachectl -v 2>&1', function (error, stdout) {\n            if (!error) {\n              const apache = (stdout.toString().split('\\n')[0] || '').split(':');\n              appsObj.versions.apache = (apache.length > 1 ? apache[1].replace('Apache', '').replace('/', '').split('(')[0].trim() : '');\n            }\n            functionProcessed();\n          });\n        }\n        if ({}.hasOwnProperty.call(appsObj.versions, 'nginx')) {\n          exec('nginx -v 2>&1', function (error, stdout) {\n            if (!error) {\n              const nginx = stdout.toString().split('\\n')[0] || '';\n              appsObj.versions.nginx = (nginx.toLowerCase().split('/')[1] || '').trim();\n            }\n            functionProcessed();\n          });\n        }\n        if ({}.hasOwnProperty.call(appsObj.versions, 'mysql')) {\n          exec('mysql -V', function (error, stdout) {\n            if (!error) {\n              let mysql = stdout.toString().split('\\n')[0] || '';\n              mysql = mysql.toLowerCase();\n              if (mysql.indexOf(',') > -1) {\n                mysql = (mysql.split(',')[0] || '').trim();\n                const parts = mysql.split(' ');\n                appsObj.versions.mysql = (parts[parts.length - 1] || '').trim();\n              } else {\n                if (mysql.indexOf(' ver ') > -1) {\n                  mysql = mysql.split(' ver ')[1];\n                  appsObj.versions.mysql = mysql.split(' ')[0];\n                }\n              }\n            }\n            functionProcessed();\n          });\n        }\n        if ({}.hasOwnProperty.call(appsObj.versions, 'php')) {\n          exec('php -v', function (error, stdout) {\n            if (!error) {\n              const php = stdout.toString().split('\\n')[0] || '';\n              let parts = php.split('(');\n              if (parts[0].indexOf('-')) {\n                parts = parts[0].split('-');\n              }\n              appsObj.versions.php = parts[0].replace(/[^0-9.]/g, '');\n            }\n            functionProcessed();\n          });\n        }\n        if ({}.hasOwnProperty.call(appsObj.versions, 'redis')) {\n          exec('redis-server --version', function (error, stdout) {\n            if (!error) {\n              const redis = stdout.toString().split('\\n')[0] || '';\n              const parts = redis.split(' ');\n              appsObj.versions.redis = util.getValue(parts, 'v', '=', true);\n            }\n            functionProcessed();\n          });\n        }\n        if ({}.hasOwnProperty.call(appsObj.versions, 'docker')) {\n          exec('docker --version', function (error, stdout) {\n            if (!error) {\n              const docker = stdout.toString().split('\\n')[0] || '';\n              const parts = docker.split(' ');\n              appsObj.versions.docker = parts.length > 2 && parts[2].endsWith(',') ? parts[2].slice(0, -1) : '';\n            }\n            functionProcessed();\n          });\n        }\n        if ({}.hasOwnProperty.call(appsObj.versions, 'postfix')) {\n          exec('postconf -d | grep mail_version', function (error, stdout) {\n            if (!error) {\n              const postfix = stdout.toString().split('\\n') || [];\n              appsObj.versions.postfix = util.getValue(postfix, 'mail_version', '=', true);\n            }\n            functionProcessed();\n          });\n        }\n        if ({}.hasOwnProperty.call(appsObj.versions, 'mongodb')) {\n          exec('mongod --version', function (error, stdout) {\n            if (!error) {\n              const mongodb = stdout.toString().split('\\n')[0] || '';\n              appsObj.versions.mongodb = (mongodb.toLowerCase().split(',')[0] || '').replace(/[^0-9.]/g, '');\n            }\n            functionProcessed();\n          });\n        }\n        if ({}.hasOwnProperty.call(appsObj.versions, 'postgresql')) {\n          if (_linux) {\n            exec('locate bin/postgres', function (error, stdout) {\n              if (!error) {\n                const postgresqlBin = stdout.toString().split('\\n').sort();\n                if (postgresqlBin.length) {\n                  exec(postgresqlBin[postgresqlBin.length - 1] + ' -V', function (error, stdout) {\n                    if (!error) {\n                      const postgresql = stdout.toString().split('\\n')[0].split(' ') || [];\n                      appsObj.versions.postgresql = postgresql.length ? postgresql[postgresql.length - 1] : '';\n                    }\n                    functionProcessed();\n                  });\n                } else {\n                  functionProcessed();\n                }\n              } else {\n                exec('psql -V', function (error, stdout) {\n                  if (!error) {\n                    const postgresql = stdout.toString().split('\\n')[0].split(' ') || [];\n                    appsObj.versions.postgresql = postgresql.length ? postgresql[postgresql.length - 1] : '';\n                    appsObj.versions.postgresql = appsObj.versions.postgresql.split('-')[0];\n                  }\n                  functionProcessed();\n                });\n              }\n            });\n          } else {\n            if (_windows) {\n              util.powerShell('Get-CimInstance Win32_Service | select caption | fl').then((stdout) => {\n                let serviceSections = stdout.split(/\\n\\s*\\n/);\n                serviceSections.forEach((item) => {\n                  if (item.trim() !== '') {\n                    let lines = item.trim().split('\\r\\n');\n                    let srvCaption = util.getValue(lines, 'caption', ':', true).toLowerCase();\n                    if (srvCaption.indexOf('postgresql') > -1) {\n                      const parts = srvCaption.split(' server ');\n                      if (parts.length > 1) {\n                        appsObj.versions.postgresql = parts[1];\n                      }\n                    }\n                  }\n                });\n                functionProcessed();\n              });\n            } else {\n              exec('postgres -V', function (error, stdout) {\n                if (!error) {\n                  const postgresql = stdout.toString().split('\\n')[0].split(' ') || [];\n                  appsObj.versions.postgresql = postgresql.length ? postgresql[postgresql.length - 1] : '';\n                }\n                functionProcessed();\n              });\n            }\n          }\n        }\n        if ({}.hasOwnProperty.call(appsObj.versions, 'perl')) {\n          exec('perl -v', function (error, stdout) {\n            if (!error) {\n              const perl = stdout.toString().split('\\n') || '';\n              while (perl.length > 0 && perl[0].trim() === '') {\n                perl.shift();\n              }\n              if (perl.length > 0) {\n                appsObj.versions.perl = perl[0].split('(').pop().split(')')[0].replace('v', '');\n              }\n            }\n            functionProcessed();\n          });\n        }\n        if ({}.hasOwnProperty.call(appsObj.versions, 'python')) {\n          if (_darwin) {\n            try {\n              const stdout = execSync('sw_vers');\n              const lines = stdout.toString().split('\\n');\n              const osVersion = util.getValue(lines, 'ProductVersion', ':');\n              const gitHomebrewExists1 = fs.existsSync('/usr/local/Cellar/python');\n              const gitHomebrewExists2 = fs.existsSync('/opt/homebrew/bin/python');\n              if ((util.darwinXcodeExists() && util.semverCompare('12.0.1', osVersion) < 0) || gitHomebrewExists1 || gitHomebrewExists2) {\n                const cmd = gitHomebrewExists1 ? '/usr/local/Cellar/python -V 2>&1' : (gitHomebrewExists2 ? '/opt/homebrew/bin/python -V 2>&1' : 'python -V 2>&1');\n                exec(cmd, function (error, stdout) {\n                  if (!error) {\n                    const python = stdout.toString().split('\\n')[0] || '';\n                    appsObj.versions.python = python.toLowerCase().replace('python', '').trim();\n                  }\n                  functionProcessed();\n                });\n              } else {\n                functionProcessed();\n              }\n            } catch (e) {\n              functionProcessed();\n            }\n\n          } else {\n            exec('python -V 2>&1', function (error, stdout) {\n              if (!error) {\n                const python = stdout.toString().split('\\n')[0] || '';\n                appsObj.versions.python = python.toLowerCase().replace('python', '').trim();\n              }\n              functionProcessed();\n            });\n          }\n        }\n        if ({}.hasOwnProperty.call(appsObj.versions, 'python3')) {\n          if (_darwin) {\n            const gitHomebrewExists = fs.existsSync('/usr/local/Cellar/python3') || fs.existsSync('/opt/homebrew/bin/python3');\n            if (util.darwinXcodeExists() || gitHomebrewExists) {\n              exec('python3 -V 2>&1', function (error, stdout) {\n                if (!error) {\n                  const python = stdout.toString().split('\\n')[0] || '';\n                  appsObj.versions.python3 = python.toLowerCase().replace('python', '').trim();\n                }\n                functionProcessed();\n              });\n            } else {\n              functionProcessed();\n            }\n          } else {\n            exec('python3 -V 2>&1', function (error, stdout) {\n              if (!error) {\n                const python = stdout.toString().split('\\n')[0] || '';\n                appsObj.versions.python3 = python.toLowerCase().replace('python', '').trim();\n              }\n              functionProcessed();\n            });\n          }\n        }\n        if ({}.hasOwnProperty.call(appsObj.versions, 'pip')) {\n          if (_darwin) {\n            const gitHomebrewExists = fs.existsSync('/usr/local/Cellar/pip') || fs.existsSync('/opt/homebrew/bin/pip');\n            if (util.darwinXcodeExists() || gitHomebrewExists) {\n              exec('pip -V 2>&1', function (error, stdout) {\n                if (!error) {\n                  const pip = stdout.toString().split('\\n')[0] || '';\n                  const parts = pip.split(' ');\n                  appsObj.versions.pip = parts.length >= 2 ? parts[1] : '';\n                }\n                functionProcessed();\n              });\n            } else {\n              functionProcessed();\n            }\n          } else {\n            exec('pip -V 2>&1', function (error, stdout) {\n              if (!error) {\n                const pip = stdout.toString().split('\\n')[0] || '';\n                const parts = pip.split(' ');\n                appsObj.versions.pip = parts.length >= 2 ? parts[1] : '';\n              }\n              functionProcessed();\n            });\n          }\n        }\n        if ({}.hasOwnProperty.call(appsObj.versions, 'pip3')) {\n          if (_darwin) {\n            const gitHomebrewExists = fs.existsSync('/usr/local/Cellar/pip3') || fs.existsSync('/opt/homebrew/bin/pip3');\n            if (util.darwinXcodeExists() || gitHomebrewExists) {\n              exec('pip3 -V 2>&1', function (error, stdout) {\n                if (!error) {\n                  const pip = stdout.toString().split('\\n')[0] || '';\n                  const parts = pip.split(' ');\n                  appsObj.versions.pip3 = parts.length >= 2 ? parts[1] : '';\n                }\n                functionProcessed();\n              });\n            } else {\n              functionProcessed();\n            }\n          } else {\n            exec('pip3 -V 2>&1', function (error, stdout) {\n              if (!error) {\n                const pip = stdout.toString().split('\\n')[0] || '';\n                const parts = pip.split(' ');\n                appsObj.versions.pip3 = parts.length >= 2 ? parts[1] : '';\n              }\n              functionProcessed();\n            });\n          }\n        }\n        if ({}.hasOwnProperty.call(appsObj.versions, 'java')) {\n          if (_darwin) {\n            // check if any JVM is installed but avoid dialog box that Java needs to be installed\n            exec('/usr/libexec/java_home -V 2>&1', function (error, stdout) {\n              if (!error && stdout.toString().toLowerCase().indexOf('no java runtime') === -1) {\n                // now this can be done savely\n                exec('java -version 2>&1', function (error, stdout) {\n                  if (!error) {\n                    const java = stdout.toString().split('\\n')[0] || '';\n                    const parts = java.split('\"');\n                    appsObj.versions.java = parts.length === 3 ? parts[1].trim() : '';\n                  }\n                  functionProcessed();\n                });\n              } else {\n                functionProcessed();\n              }\n            });\n          } else {\n            exec('java -version 2>&1', function (error, stdout) {\n              if (!error) {\n                const java = stdout.toString().split('\\n')[0] || '';\n                const parts = java.split('\"');\n                appsObj.versions.java = parts.length === 3 ? parts[1].trim() : '';\n              }\n              functionProcessed();\n            });\n          }\n        }\n        if ({}.hasOwnProperty.call(appsObj.versions, 'gcc')) {\n          if ((_darwin && util.darwinXcodeExists()) || !_darwin) {\n            exec('gcc -dumpversion', function (error, stdout) {\n              if (!error) {\n                appsObj.versions.gcc = stdout.toString().split('\\n')[0].trim() || '';\n              }\n              if (appsObj.versions.gcc.indexOf('.') > -1) {\n                functionProcessed();\n              } else {\n                exec('gcc --version', function (error, stdout) {\n                  if (!error) {\n                    const gcc = stdout.toString().split('\\n')[0].trim();\n                    if (gcc.indexOf('gcc') > -1 && gcc.indexOf(')') > -1) {\n                      const parts = gcc.split(')');\n                      appsObj.versions.gcc = parts[1].trim() || appsObj.versions.gcc;\n                    }\n                  }\n                  functionProcessed();\n                });\n              }\n            });\n          } else {\n            functionProcessed();\n          }\n        }\n        if ({}.hasOwnProperty.call(appsObj.versions, 'virtualbox')) {\n          exec(util.getVboxmanage() + ' -v 2>&1', function (error, stdout) {\n            if (!error) {\n              const vbox = stdout.toString().split('\\n')[0] || '';\n              const parts = vbox.split('r');\n              appsObj.versions.virtualbox = parts[0];\n            }\n            functionProcessed();\n          });\n        }\n        if ({}.hasOwnProperty.call(appsObj.versions, 'bash')) {\n          exec('bash --version', function (error, stdout) {\n            if (!error) {\n              const line = stdout.toString().split('\\n')[0];\n              const parts = line.split(' version ');\n              if (parts.length > 1) {\n                appsObj.versions.bash = parts[1].split(' ')[0].split('(')[0];\n              }\n            }\n            functionProcessed();\n          });\n        }\n        if ({}.hasOwnProperty.call(appsObj.versions, 'zsh')) {\n          exec('zsh --version', function (error, stdout) {\n            if (!error) {\n              const line = stdout.toString().split('\\n')[0];\n              const parts = line.split('zsh ');\n              if (parts.length > 1) {\n                appsObj.versions.zsh = parts[1].split(' ')[0];\n              }\n            }\n            functionProcessed();\n          });\n        }\n        if ({}.hasOwnProperty.call(appsObj.versions, 'fish')) {\n          exec('fish --version', function (error, stdout) {\n            if (!error) {\n              const line = stdout.toString().split('\\n')[0];\n              const parts = line.split(' version ');\n              if (parts.length > 1) {\n                appsObj.versions.fish = parts[1].split(' ')[0];\n              }\n            }\n            functionProcessed();\n          });\n        }\n        if ({}.hasOwnProperty.call(appsObj.versions, 'powershell')) {\n          if (_windows) {\n            util.powerShell('$PSVersionTable').then(stdout => {\n              const lines = stdout.toString().split('\\n').map(line => line.replace(/ +/g, ' ').replace(/ +/g, ':'));\n              appsObj.versions.powershell = util.getValue(lines, 'psversion');\n              functionProcessed();\n            });\n          } else {\n            functionProcessed();\n          }\n        }\n        if ({}.hasOwnProperty.call(appsObj.versions, 'dotnet')) {\n          if (_windows) {\n            util.powerShell('gci \"HKLM:\\\\SOFTWARE\\\\Microsoft\\\\NET Framework Setup\\\\NDP\" -recurse | gp -name Version,Release -EA 0 | where { $_.PSChildName -match \"^(?!S)\\\\p{L}\"} | select PSChildName, Version, Release').then(stdout => {\n              const lines = stdout.toString().split('\\r\\n');\n              let dotnet = '';\n              lines.forEach(line => {\n                line = line.replace(/ +/g, ' ');\n                const parts = line.split(' ');\n                dotnet = dotnet || (parts[0].toLowerCase().startsWith('client') && parts.length > 2 ? parts[1].trim() : (parts[0].toLowerCase().startsWith('full') && parts.length > 2 ? parts[1].trim() : ''));\n              });\n              appsObj.versions.dotnet = dotnet.trim();\n              functionProcessed();\n            });\n          } else {\n            functionProcessed();\n          }\n        }\n      } catch (e) {\n        if (callback) { callback(appsObj.versions); }\n        resolve(appsObj.versions);\n      }\n    });\n  });\n}\n\nexports.versions = versions;\n\nfunction shell(callback) {\n  return new Promise((resolve) => {\n    process.nextTick(() => {\n      if (_windows) {\n        resolve('cmd');\n      } else {\n        let result = '';\n        exec('echo $SHELL', function (error, stdout) {\n          if (!error) {\n            result = stdout.toString().split('\\n')[0];\n          }\n          if (callback) {\n            callback(result);\n          }\n          resolve(result);\n        });\n      }\n    });\n  });\n}\n\nexports.shell = shell;\n\nfunction getUniqueMacAdresses() {\n  let macs = [];\n  try {\n    const ifaces = os.networkInterfaces();\n    for (let dev in ifaces) {\n      if ({}.hasOwnProperty.call(ifaces, dev)) {\n        ifaces[dev].forEach(function (details) {\n          if (details && details.mac && details.mac !== '00:00:00:00:00:00') {\n            const mac = details.mac.toLowerCase();\n            if (macs.indexOf(mac) === -1) {\n              macs.push(mac);\n            }\n          }\n        });\n      }\n    }\n    macs = macs.sort(function (a, b) {\n      if (a < b) { return -1; }\n      if (a > b) { return 1; }\n      return 0;\n    });\n  } catch (e) {\n    macs.push('00:00:00:00:00:00');\n  }\n  return macs;\n}\n\nfunction uuid(callback) {\n  return new Promise((resolve) => {\n    process.nextTick(() => {\n\n      let result = {\n        os: '',\n        hardware: '',\n        macs: getUniqueMacAdresses()\n      };\n      let parts;\n\n      if (_darwin) {\n        exec('system_profiler SPHardwareDataType -json', function (error, stdout) {\n          if (!error) {\n            try {\n              const jsonObj = JSON.parse(stdout.toString());\n              if (jsonObj.SPHardwareDataType && jsonObj.SPHardwareDataType.length > 0) {\n                const spHardware = jsonObj.SPHardwareDataType[0];\n                result.os = spHardware.platform_UUID.toLowerCase();\n                result.hardware = spHardware.serial_number;\n              }\n            } catch (e) {\n              util.noop();\n            }\n          }\n          if (callback) {\n            callback(result);\n          }\n          resolve(result);\n        });\n      }\n      if (_linux) {\n        const cmd = `echo -n \"os: \"; cat /var/lib/dbus/machine-id 2> /dev/null ||\ncat /etc/machine-id 2> /dev/null; echo;\necho -n \"hardware: \"; cat /sys/class/dmi/id/product_uuid 2> /dev/null; echo;`;\n        exec(cmd, function (error, stdout) {\n          const lines = stdout.toString().split('\\n');\n          result.os = util.getValue(lines, 'os').toLowerCase();\n          result.hardware = util.getValue(lines, 'hardware').toLowerCase();\n          if (!result.hardware) {\n            const lines = fs.readFileSync('/proc/cpuinfo', { encoding: 'utf8' }).toString().split('\\n');\n            const serial = util.getValue(lines, 'serial');\n            result.hardware = serial || '';\n          }\n          if (callback) {\n            callback(result);\n          }\n          resolve(result);\n        });\n      }\n      if (_freebsd || _openbsd || _netbsd) {\n        exec('sysctl -i kern.hostid kern.hostuuid', function (error, stdout) {\n          const lines = stdout.toString().split('\\n');\n          result.os = util.getValue(lines, 'kern.hostid', ':').toLowerCase();\n          result.hardware = util.getValue(lines, 'kern.hostuuid', ':').toLowerCase();\n          if (result.os.indexOf('unknown') >= 0) { result.os = ''; }\n          if (result.hardware.indexOf('unknown') >= 0) { result.hardware = ''; }\n          if (callback) {\n            callback(result);\n          }\n          resolve(result);\n        });\n      }\n      if (_windows) {\n        let sysdir = '%windir%\\\\System32';\n        if (process.arch === 'ia32' && Object.prototype.hasOwnProperty.call(process.env, 'PROCESSOR_ARCHITEW6432')) {\n          sysdir = '%windir%\\\\sysnative\\\\cmd.exe /c %windir%\\\\System32';\n        }\n        util.powerShell('Get-CimInstance Win32_ComputerSystemProduct | select UUID | fl').then((stdout) => {\n          let lines = stdout.split('\\r\\n');\n          result.hardware = util.getValue(lines, 'uuid', ':').toLowerCase();\n          exec(`${sysdir}\\\\reg query \"HKEY_LOCAL_MACHINE\\\\SOFTWARE\\\\Microsoft\\\\Cryptography\" /v MachineGuid`, util.execOptsWin, function (error, stdout) {\n            parts = stdout.toString().split('\\n\\r')[0].split('REG_SZ');\n            result.os = parts.length > 1 ? parts[1].replace(/\\r+|\\n+|\\s+/ig, '').toLowerCase() : '';\n            if (callback) {\n              callback(result);\n            }\n            resolve(result);\n          });\n        });\n      }\n    });\n  });\n}\n\nexports.uuid = uuid;\n", "'use strict';\n// @ts-check\n// ==================================================================================\n// cpu.js\n// ----------------------------------------------------------------------------------\n// Description:   System Information - library\n//                for Node.js\n// Copyright:     (c) 2014 - 2024\n// Author:        Sebastian Hildebrandt\n// ----------------------------------------------------------------------------------\n// License:       MIT\n// ==================================================================================\n// 4. CPU\n// ----------------------------------------------------------------------------------\n\nconst os = require('os');\nconst exec = require('child_process').exec;\nconst execSync = require('child_process').execSync;\nconst fs = require('fs');\nconst util = require('./util');\n\nlet _platform = process.platform;\n\nconst _linux = (_platform === 'linux' || _platform === 'android');\nconst _darwin = (_platform === 'darwin');\nconst _windows = (_platform === 'win32');\nconst _freebsd = (_platform === 'freebsd');\nconst _openbsd = (_platform === 'openbsd');\nconst _netbsd = (_platform === 'netbsd');\nconst _sunos = (_platform === 'sunos');\n\nlet _cpu_speed = 0;\nlet _current_cpu = {\n  user: 0,\n  nice: 0,\n  system: 0,\n  idle: 0,\n  irq: 0,\n  steal: 0,\n  guest: 0,\n  load: 0,\n  tick: 0,\n  ms: 0,\n  currentLoad: 0,\n  currentLoadUser: 0,\n  currentLoadSystem: 0,\n  currentLoadNice: 0,\n  currentLoadIdle: 0,\n  currentLoadIrq: 0,\n  currentLoadSteal: 0,\n  currentLoadGuest: 0,\n  rawCurrentLoad: 0,\n  rawCurrentLoadUser: 0,\n  rawCurrentLoadSystem: 0,\n  rawCurrentLoadNice: 0,\n  rawCurrentLoadIdle: 0,\n  rawCurrentLoadIrq: 0,\n  rawCurrentLoadSteal: 0,\n  rawCurrentLoadGuest: 0\n};\nlet _cpus = [];\nlet _corecount = 0;\n\nconst AMDBaseFrequencies = {\n  '8346': '1.8',\n  '8347': '1.9',\n  '8350': '2.0',\n  '8354': '2.2',\n  '8356|SE': '2.4',\n  '8356': '2.3',\n  '8360': '2.5',\n  '2372': '2.1',\n  '2373': '2.1',\n  '2374': '2.2',\n  '2376': '2.3',\n  '2377': '2.3',\n  '2378': '2.4',\n  '2379': '2.4',\n  '2380': '2.5',\n  '2381': '2.5',\n  '2382': '2.6',\n  '2384': '2.7',\n  '2386': '2.8',\n  '2387': '2.8',\n  '2389': '2.9',\n  '2393': '3.1',\n  '8374': '2.2',\n  '8376': '2.3',\n  '8378': '2.4',\n  '8379': '2.4',\n  '8380': '2.5',\n  '8381': '2.5',\n  '8382': '2.6',\n  '8384': '2.7',\n  '8386': '2.8',\n  '8387': '2.8',\n  '8389': '2.9',\n  '8393': '3.1',\n  '2419EE': '1.8',\n  '2423HE': '2.0',\n  '2425HE': '2.1',\n  '2427': '2.2',\n  '2431': '2.4',\n  '2435': '2.6',\n  '2439SE': '2.8',\n  '8425HE': '2.1',\n  '8431': '2.4',\n  '8435': '2.6',\n  '8439SE': '2.8',\n  '4122': '2.2',\n  '4130': '2.6',\n  '4162EE': '1.7',\n  '4164EE': '1.8',\n  '4170HE': '2.1',\n  '4174HE': '2.3',\n  '4176HE': '2.4',\n  '4180': '2.6',\n  '4184': '2.8',\n  '6124HE': '1.8',\n  '6128HE': '2.0',\n  '6132HE': '2.2',\n  '6128': '2.0',\n  '6134': '2.3',\n  '6136': '2.4',\n  '6140': '2.6',\n  '6164HE': '1.7',\n  '6166HE': '1.8',\n  '6168': '1.9',\n  '6172': '2.1',\n  '6174': '2.2',\n  '6176': '2.3',\n  '6176SE': '2.3',\n  '6180SE': '2.5',\n  '3250': '2.5',\n  '3260': '2.7',\n  '3280': '2.4',\n  '4226': '2.7',\n  '4228': '2.8',\n  '4230': '2.9',\n  '4234': '3.1',\n  '4238': '3.3',\n  '4240': '3.4',\n  '4256': '1.6',\n  '4274': '2.5',\n  '4276': '2.6',\n  '4280': '2.8',\n  '4284': '3.0',\n  '6204': '3.3',\n  '6212': '2.6',\n  '6220': '3.0',\n  '6234': '2.4',\n  '6238': '2.6',\n  '6262HE': '1.6',\n  '6272': '2.1',\n  '6274': '2.2',\n  '6276': '2.3',\n  '6278': '2.4',\n  '6282SE': '2.6',\n  '6284SE': '2.7',\n  '6308': '3.5',\n  '6320': '2.8',\n  '6328': '3.2',\n  '6338P': '2.3',\n  '6344': '2.6',\n  '6348': '2.8',\n  '6366': '1.8',\n  '6370P': '2.0',\n  '6376': '2.3',\n  '6378': '2.4',\n  '6380': '2.5',\n  '6386': '2.8',\n  'FX|4100': '3.6',\n  'FX|4120': '3.9',\n  'FX|4130': '3.8',\n  'FX|4150': '3.8',\n  'FX|4170': '4.2',\n  'FX|6100': '3.3',\n  'FX|6120': '3.6',\n  'FX|6130': '3.6',\n  'FX|6200': '3.8',\n  'FX|8100': '2.8',\n  'FX|8120': '3.1',\n  'FX|8140': '3.2',\n  'FX|8150': '3.6',\n  'FX|8170': '3.9',\n  'FX|4300': '3.8',\n  'FX|4320': '4.0',\n  'FX|4350': '4.2',\n  'FX|6300': '3.5',\n  'FX|6350': '3.9',\n  'FX|8300': '3.3',\n  'FX|8310': '3.4',\n  'FX|8320': '3.5',\n  'FX|8350': '4.0',\n  'FX|8370': '4.0',\n  'FX|9370': '4.4',\n  'FX|9590': '4.7',\n  'FX|8320E': '3.2',\n  'FX|8370E': '3.3',\n\n  // ZEN Desktop CPUs\n  '1200': '3.1',\n  'Pro 1200': '3.1',\n  '1300X': '3.5',\n  'Pro 1300': '3.5',\n  '1400': '3.2',\n  '1500X': '3.5',\n  'Pro 1500': '3.5',\n  '1600': '3.2',\n  '1600X': '3.6',\n  'Pro 1600': '3.2',\n  '1700': '3.0',\n  'Pro 1700': '3.0',\n  '1700X': '3.4',\n  'Pro 1700X': '3.4',\n  '1800X': '3.6',\n  '1900X': '3.8',\n  '1920': '3.2',\n  '1920X': '3.5',\n  '1950X': '3.4',\n\n  // ZEN Desktop APUs\n  '200GE': '3.2',\n  'Pro 200GE': '3.2',\n  '220GE': '3.4',\n  '240GE': '3.5',\n  '3000G': '3.5',\n  '300GE': '3.4',\n  '3050GE': '3.4',\n  '2200G': '3.5',\n  'Pro 2200G': '3.5',\n  '2200GE': '3.2',\n  'Pro 2200GE': '3.2',\n  '2400G': '3.6',\n  'Pro 2400G': '3.6',\n  '2400GE': '3.2',\n  'Pro 2400GE': '3.2',\n\n  // ZEN Mobile APUs\n  'Pro 200U': '2.3',\n  '300U': '2.4',\n  '2200U': '2.5',\n  '3200U': '2.6',\n  '2300U': '2.0',\n  'Pro 2300U': '2.0',\n  '2500U': '2.0',\n  'Pro 2500U': '2.2',\n  '2600H': '3.2',\n  '2700U': '2.0',\n  'Pro 2700U': '2.2',\n  '2800H': '3.3',\n\n  // ZEN Server Processors\n  '7351': '2.4',\n  '7351P': '2.4',\n  '7401': '2.0',\n  '7401P': '2.0',\n  '7551P': '2.0',\n  '7551': '2.0',\n  '7251': '2.1',\n  '7261': '2.5',\n  '7281': '2.1',\n  '7301': '2.2',\n  '7371': '3.1',\n  '7451': '2.3',\n  '7501': '2.0',\n  '7571': '2.2',\n  '7601': '2.2',\n\n  // ZEN Embedded Processors\n  'V1500B': '2.2',\n  'V1780B': '3.35',\n  'V1202B': '2.3',\n  'V1404I': '2.0',\n  'V1605B': '2.0',\n  'V1756B': '3.25',\n  'V1807B': '3.35',\n\n  '3101': '2.1',\n  '3151': '2.7',\n  '3201': '1.5',\n  '3251': '2.5',\n  '3255': '2.5',\n  '3301': '2.0',\n  '3351': '1.9',\n  '3401': '1.85',\n  '3451': '2.15',\n\n  // ZEN+ Desktop\n  '1200|AF': '3.1',\n  '2300X': '3.5',\n  '2500X': '3.6',\n  '2600': '3.4',\n  '2600E': '3.1',\n  '1600|AF': '3.2',\n  '2600X': '3.6',\n  '2700': '3.2',\n  '2700E': '2.8',\n  'Pro 2700': '3.2',\n  '2700X': '3.7',\n  'Pro 2700X': '3.6',\n  '2920X': '3.5',\n  '2950X': '3.5',\n  '2970WX': '3.0',\n  '2990WX': '3.0',\n\n  // ZEN+ Desktop APU\n  'Pro 300GE': '3.4',\n  'Pro 3125GE': '3.4',\n  '3150G': '3.5',\n  'Pro 3150G': '3.5',\n  '3150GE': '3.3',\n  'Pro 3150GE': '3.3',\n  '3200G': '3.6',\n  'Pro 3200G': '3.6',\n  '3200GE': '3.3',\n  'Pro 3200GE': '3.3',\n  '3350G': '3.6',\n  'Pro 3350G': '3.6',\n  '3350GE': '3.3',\n  'Pro 3350GE': '3.3',\n  '3400G': '3.7',\n  'Pro 3400G': '3.7',\n  '3400GE': '3.3',\n  'Pro 3400GE': '3.3',\n\n  // ZEN+ Mobile\n  '3300U': '2.1',\n  'PRO 3300U': '2.1',\n  '3450U': '2.1',\n  '3500U': '2.1',\n  'PRO 3500U': '2.1',\n  '3500C': '2.1',\n  '3550H': '2.1',\n  '3580U': '2.1',\n  '3700U': '2.3',\n  'PRO 3700U': '2.3',\n  '3700C': '2.3',\n  '3750H': '2.3',\n  '3780U': '2.3',\n\n  // ZEN2 Desktop CPUS\n  '3100': '3.6',\n  '3300X': '3.8',\n  '3500': '3.6',\n  '3500X': '3.6',\n  '3600': '3.6',\n  'Pro 3600': '3.6',\n  '3600X': '3.8',\n  '3600XT': '3.8',\n  'Pro 3700': '3.6',\n  '3700X': '3.6',\n  '3800X': '3.9',\n  '3800XT': '3.9',\n  '3900': '3.1',\n  'Pro 3900': '3.1',\n  '3900X': '3.8',\n  '3900XT': '3.8',\n  '3950X': '3.5',\n  '3960X': '3.8',\n  '3970X': '3.7',\n  '3990X': '2.9',\n  '3945WX': '4.0',\n  '3955WX': '3.9',\n  '3975WX': '3.5',\n  '3995WX': '2.7',\n\n  // ZEN2 Desktop APUs\n  '4300GE': '3.5',\n  'Pro 4300GE': '3.5',\n  '4300G': '3.8',\n  'Pro 4300G': '3.8',\n  '4600GE': '3.3',\n  'Pro 4650GE': '3.3',\n  '4600G': '3.7',\n  'Pro 4650G': '3.7',\n  '4700GE': '3.1',\n  'Pro 4750GE': '3.1',\n  '4700G': '3.6',\n  'Pro 4750G': '3.6',\n  '4300U': '2.7',\n  '4450U': '2.5',\n  'Pro 4450U': '2.5',\n  '4500U': '2.3',\n  '4600U': '2.1',\n  'PRO 4650U': '2.1',\n  '4680U': '2.1',\n  '4600HS': '3.0',\n  '4600H': '3.0',\n  '4700U': '2.0',\n  'PRO 4750U': '1.7',\n  '4800U': '1.8',\n  '4800HS': '2.9',\n  '4800H': '2.9',\n  '4900HS': '3.0',\n  '4900H': '3.3',\n  '5300U': '2.6',\n  '5500U': '2.1',\n  '5700U': '1.8',\n\n  // ZEN2 - EPYC\n  '7232P': '3.1',\n  '7302P': '3.0',\n  '7402P': '2.8',\n  '7502P': '2.5',\n  '7702P': '2.0',\n  '7252': '3.1',\n  '7262': '3.2',\n  '7272': '2.9',\n  '7282': '2.8',\n  '7302': '3.0',\n  '7352': '2.3',\n  '7402': '2.8',\n  '7452': '2.35',\n  '7502': '2.5',\n  '7532': '2.4',\n  '7542': '2.9',\n  '7552': '2.2',\n  '7642': '2.3',\n  '7662': '2.0',\n  '7702': '2.0',\n  '7742': '2.25',\n  '7H12': '2.6',\n  '7F32': '3.7',\n  '7F52': '3.5',\n  '7F72': '3.2',\n\n  // Epyc (Milan)\n\n  '7773X': '2.2',\n  '7763': '2.45',\n  '7713': '2.0',\n  '7713P': '2.0',\n  '7663': '2.0',\n  '7643': '2.3',\n  '7573X': '2.8',\n  '75F3': '2.95',\n  '7543': '2.8',\n  '7543P': '2.8',\n  '7513': '2.6',\n  '7473X': '2.8',\n  '7453': '2.75',\n  '74F3': '3.2',\n  '7443': '2.85',\n  '7443P': '2.85',\n  '7413': '2.65',\n  '7373X': '3.05',\n  '73F3': '3.5',\n  '7343': '3.2',\n  '7313': '3.0',\n  '7313P': '3.0',\n  '72F3': '3.7',\n\n  // ZEN3\n  '5600X': '3.7',\n  '5800X': '3.8',\n  '5900X': '3.7',\n  '5950X': '3.4',\n  '5945WX': '4.1',\n  '5955WX': '4.0',\n  '5965WX': '3.8',\n  '5975WX': '3.6',\n  '5995WX': '2.7',\n\n  '7960X': '4.2',\n  '7970X': '4.0',\n  '7980X': '3.2',\n\n  '7965WX': '4.2',\n  '7975WX': '4.0',\n  '7985WX': '3.2',\n  '7995WX': '2.5',\n\n  // ZEN4\n  '9754': '2.25',\n  '9754S': '2.25',\n  '9734': '2.2',\n  '9684X': '2.55',\n  '9384X': '3.1',\n  '9184X': '3.55',\n  '9654P': '2.4',\n  '9654': '2.4',\n  '9634': '2.25',\n  '9554P': '3.1',\n  '9554': '3.1',\n  '9534': '2.45',\n  '9474F': '3.6',\n  '9454P': '2.75',\n  '9454': '2.75',\n  '9374F': '3.85',\n  '9354P': '3.25',\n  '9354': '3.25',\n  '9334': '2.7',\n  '9274F': '4.05',\n  '9254': '2.9',\n  '9224': '2.5',\n  '9174F': '4.1',\n  '9124': '3.0'\n};\n\nconst socketTypes = {\n  1: 'Other',\n  2: 'Unknown',\n  3: 'Daughter Board',\n  4: 'ZIF Socket',\n  5: 'Replacement/Piggy Back',\n  6: 'None',\n  7: 'LIF Socket',\n  8: 'Slot 1',\n  9: 'Slot 2',\n  10: '370 Pin Socket',\n  11: 'Slot A',\n  12: 'Slot M',\n  13: '423',\n  14: 'A (Socket 462)',\n  15: '478',\n  16: '754',\n  17: '940',\n  18: '939',\n  19: 'mPGA604',\n  20: 'LGA771',\n  21: 'LGA775',\n  22: 'S1',\n  23: 'AM2',\n  24: 'F (1207)',\n  25: 'LGA1366',\n  26: 'G34',\n  27: 'AM3',\n  28: 'C32',\n  29: 'LGA1156',\n  30: 'LGA1567',\n  31: 'PGA988A',\n  32: 'BGA1288',\n  33: 'rPGA988B',\n  34: 'BGA1023',\n  35: 'BGA1224',\n  36: 'LGA1155',\n  37: 'LGA1356',\n  38: 'LGA2011',\n  39: 'FS1',\n  40: 'FS2',\n  41: 'FM1',\n  42: 'FM2',\n  43: 'LGA2011-3',\n  44: 'LGA1356-3',\n  45: 'LGA1150',\n  46: 'BGA1168',\n  47: 'BGA1234',\n  48: 'BGA1364',\n  49: 'AM4',\n  50: 'LGA1151',\n  51: 'BGA1356',\n  52: 'BGA1440',\n  53: 'BGA1515',\n  54: 'LGA3647-1',\n  55: 'SP3',\n  56: 'SP3r2',\n  57: 'LGA2066',\n  58: 'BGA1392',\n  59: 'BGA1510',\n  60: 'BGA1528',\n  61: 'LGA4189',\n  62: 'LGA1200',\n  63: 'LGA4677',\n  64: 'LGA1700',\n  65: 'BGA1744',\n  66: 'BGA1781',\n  67: 'BGA1211',\n  68: 'BGA2422',\n  69: 'LGA1211',\n  70: 'LGA2422',\n  71: 'LGA5773',\n  72: 'BGA5773',\n};\n\nconst socketTypesByName = {\n  'LGA1150': 'i7-5775C i3-4340 i3-4170 G3250 i3-4160T i3-4160 E3-1231 G3258 G3240 i7-4790S i7-4790K i7-4790 i5-4690K i5-4690 i5-4590T i5-4590S i5-4590 i5-4460 i3-4360 i3-4150 G1820 G3420 G3220 i7-4771 i5-4440 i3-4330 i3-4130T i3-4130 E3-1230 i7-4770S i7-4770K i7-4770 i5-4670K i5-4670 i5-4570T i5-4570S i5-4570 i5-4430',\n  'LGA1151': 'i9-9900KS E-2288G E-2224 G5420 i9-9900T i9-9900 i7-9700T i7-9700F i7-9700E i7-9700 i5-9600 i5-9500T i5-9500F i5-9500 i5-9400T i3-9350K i3-9300 i3-9100T i3-9100F i3-9100 G4930 i9-9900KF i7-9700KF i5-9600KF i5-9400F i5-9400 i3-9350KF i9-9900K i7-9700K i5-9600K G5500 G5400 i7-8700T i7-8086K i5-8600 i5-8500T i5-8500 i5-8400T i3-8300 i3-8100T G4900 i7-8700K i7-8700 i5-8600K i5-8400 i3-8350K i3-8100 E3-1270 G4600 G4560 i7-7700T i7-7700K i7-7700 i5-7600K i5-7600 i5-7500T i5-7500 i5-7400 i3-7350K i3-7300 i3-7100T i3-7100 G3930 G3900 G4400 i7-6700T i7-6700K i7-6700 i5-6600K i5-6600 i5-6500T i5-6500 i5-6400T i5-6400 i3-6300 i3-6100T i3-6100 E3-1270 E3-1270 T4500 T4400',\n  '1155': 'G440 G460 G465 G470 G530T G540T G550T G1610T G1620T G530 G540 G1610 G550 G1620 G555 G1630 i3-2100T i3-2120T i3-3220T i3-3240T i3-3250T i3-2100 i3-2105 i3-2102 i3-3210 i3-3220 i3-2125 i3-2120 i3-3225 i3-2130 i3-3245 i3-3240 i3-3250 i5-3570T i5-2500T i5-2400S i5-2405S i5-2390T i5-3330S i5-2500S i5-3335S i5-2300 i5-3450S i5-3340S i5-3470S i5-3475S i5-3470T i5-2310 i5-3550S i5-2320 i5-3330 i5-3350P i5-3450 i5-2400 i5-3340 i5-3570S i5-2380P i5-2450P i5-3470 i5-2500K i5-3550 i5-2500 i5-3570 i5-3570K i5-2550K i7-3770T i7-2600S i7-3770S i7-2600K i7-2600 i7-3770 i7-3770K i7-2700K G620T G630T G640T G2020T G645T G2100T G2030T G622 G860T G620 G632 G2120T G630 G640 G2010 G840 G2020 G850 G645 G2030 G860 G2120 G870 G2130 G2140 E3-1220L E3-1220L E3-1260L E3-1265L E3-1220 E3-1225 E3-1220 E3-1235 E3-1225 E3-1230 E3-1230 E3-1240 E3-1245 E3-1270 E3-1275 E3-1240 E3-1245 E3-1270 E3-1280 E3-1275 E3-1290 E3-1280 E3-1290'\n};\n\nfunction getSocketTypesByName(str) {\n  let result = '';\n  for (const key in socketTypesByName) {\n    const names = socketTypesByName[key].split(' ');\n    names.forEach(element => {\n      if (str.indexOf(element) >= 0) {\n        result = key;\n      }\n    });\n  }\n  return result;\n}\n\nfunction cpuManufacturer(str) {\n  let result = str;\n  str = str.toLowerCase();\n\n  if (str.indexOf('intel') >= 0) { result = 'Intel'; }\n  if (str.indexOf('amd') >= 0) { result = 'AMD'; }\n  if (str.indexOf('qemu') >= 0) { result = 'QEMU'; }\n  if (str.indexOf('hygon') >= 0) { result = 'Hygon'; }\n  if (str.indexOf('centaur') >= 0) { result = 'WinChip/Via'; }\n  if (str.indexOf('vmware') >= 0) { result = 'VMware'; }\n  if (str.indexOf('Xen') >= 0) { result = 'Xen Hypervisor'; }\n  if (str.indexOf('tcg') >= 0) { result = 'QEMU'; }\n  if (str.indexOf('apple') >= 0) { result = 'Apple'; }\n\n  return result;\n}\n\nfunction cpuBrandManufacturer(res) {\n  res.brand = res.brand.replace(/\\(R\\)+/g, '\u00AE').replace(/\\s+/g, ' ').trim();\n  res.brand = res.brand.replace(/\\(TM\\)+/g, '\u2122').replace(/\\s+/g, ' ').trim();\n  res.brand = res.brand.replace(/\\(C\\)+/g, '\u00A9').replace(/\\s+/g, ' ').trim();\n  res.brand = res.brand.replace(/CPU+/g, '').replace(/\\s+/g, ' ').trim();\n  res.manufacturer = cpuManufacturer(res.brand);\n\n  let parts = res.brand.split(' ');\n  parts.shift();\n  res.brand = parts.join(' ');\n  return res;\n}\n\nfunction getAMDSpeed(brand) {\n  let result = '0';\n  for (let key in AMDBaseFrequencies) {\n    if ({}.hasOwnProperty.call(AMDBaseFrequencies, key)) {\n      let parts = key.split('|');\n      let found = 0;\n      parts.forEach(item => {\n        if (brand.indexOf(item) > -1) {\n          found++;\n        }\n      });\n      if (found === parts.length) {\n        result = AMDBaseFrequencies[key];\n      }\n    }\n  }\n  return parseFloat(result);\n}\n\n// --------------------------\n// CPU - brand, speed\n\nfunction getCpu() {\n\n  return new Promise((resolve) => {\n    process.nextTick(() => {\n      const UNKNOWN = 'unknown';\n      let result = {\n        manufacturer: UNKNOWN,\n        brand: UNKNOWN,\n        vendor: '',\n        family: '',\n        model: '',\n        stepping: '',\n        revision: '',\n        voltage: '',\n        speed: 0,\n        speedMin: 0,\n        speedMax: 0,\n        governor: '',\n        cores: util.cores(),\n        physicalCores: util.cores(),\n        performanceCores: util.cores(),\n        efficiencyCores: 0,\n        processors: 1,\n        socket: '',\n        flags: '',\n        virtualization: false,\n        cache: {}\n      };\n      cpuFlags().then(flags => {\n        result.flags = flags;\n        result.virtualization = flags.indexOf('vmx') > -1 || flags.indexOf('svm') > -1;\n        if (_darwin) {\n          exec('sysctl machdep.cpu hw.cpufrequency_max hw.cpufrequency_min hw.packages hw.physicalcpu_max hw.ncpu hw.tbfrequency hw.cpufamily hw.cpusubfamily', function (error, stdout) {\n            let lines = stdout.toString().split('\\n');\n            const modelline = util.getValue(lines, 'machdep.cpu.brand_string');\n            const modellineParts = modelline.split('@');\n            result.brand = modellineParts[0].trim();\n            const speed = modellineParts[1] ? modellineParts[1].trim() : '0';\n            result.speed = parseFloat(speed.replace(/GHz+/g, ''));\n            let tbFrequency = util.getValue(lines, 'hw.tbfrequency') / 1000000000.0;\n            tbFrequency = tbFrequency < 0.1 ? tbFrequency * 100 : tbFrequency;\n            result.speed = result.speed === 0 ? tbFrequency : result.speed;\n\n            _cpu_speed = result.speed;\n            result = cpuBrandManufacturer(result);\n            result.speedMin = util.getValue(lines, 'hw.cpufrequency_min') ? (util.getValue(lines, 'hw.cpufrequency_min') / 1000000000.0) : result.speed;\n            result.speedMax = util.getValue(lines, 'hw.cpufrequency_max') ? (util.getValue(lines, 'hw.cpufrequency_max') / 1000000000.0) : result.speed;\n            result.vendor = util.getValue(lines, 'machdep.cpu.vendor') || 'Apple';\n            result.family = util.getValue(lines, 'machdep.cpu.family') || util.getValue(lines, 'hw.cpufamily');\n            result.model = util.getValue(lines, 'machdep.cpu.model');\n            result.stepping = util.getValue(lines, 'machdep.cpu.stepping') || util.getValue(lines, 'hw.cpusubfamily');\n            result.virtualization = true;\n            const countProcessors = util.getValue(lines, 'hw.packages');\n            const countCores = util.getValue(lines, 'hw.physicalcpu_max');\n            const countThreads = util.getValue(lines, 'hw.ncpu');\n            if (os.arch() === 'arm64') {\n              result.socket = 'SOC';\n              try {\n                const clusters = execSync('ioreg -c IOPlatformDevice -d 3 -r | grep cluster-type').toString().split('\\n');\n                const efficiencyCores = clusters.filter(line => line.indexOf('\"E\"') >= 0).length;\n                const performanceCores = clusters.filter(line => line.indexOf('\"P\"') >= 0).length;\n                result.efficiencyCores = efficiencyCores;\n                result.performanceCores = performanceCores;\n              } catch (e) {\n                util.noop();\n              }\n            }\n            if (countProcessors) {\n              result.processors = parseInt(countProcessors) || 1;\n            }\n            if (countCores && countThreads) {\n              result.cores = parseInt(countThreads) || util.cores();\n              result.physicalCores = parseInt(countCores) || util.cores();\n            }\n            cpuCache().then((res) => {\n              result.cache = res;\n              resolve(result);\n            });\n          });\n        }\n        if (_linux) {\n          let modelline = '';\n          let lines = [];\n          if (os.cpus()[0] && os.cpus()[0].model) { modelline = os.cpus()[0].model; }\n          exec('export LC_ALL=C; lscpu; echo -n \"Governor: \"; cat /sys/devices/system/cpu/cpu0/cpufreq/scaling_governor 2>/dev/null; echo; unset LC_ALL', function (error, stdout) {\n            if (!error) {\n              lines = stdout.toString().split('\\n');\n            }\n            modelline = util.getValue(lines, 'model name') || modelline;\n            modelline = util.getValue(lines, 'bios model name') || modelline;\n            const modellineParts = modelline.split('@');\n            result.brand = modellineParts[0].trim();\n            result.speed = modellineParts[1] ? parseFloat(modellineParts[1].trim()) : 0;\n            if (result.speed === 0 && (result.brand.indexOf('AMD') > -1 || result.brand.toLowerCase().indexOf('ryzen') > -1)) {\n              result.speed = getAMDSpeed(result.brand);\n            }\n            if (result.speed === 0) {\n              const current = getCpuCurrentSpeedSync();\n              if (current.avg !== 0) { result.speed = current.avg; }\n            }\n            _cpu_speed = result.speed;\n            result.speedMin = Math.round(parseFloat(util.getValue(lines, 'cpu min mhz').replace(/,/g, '.')) / 10.0) / 100;\n            result.speedMax = Math.round(parseFloat(util.getValue(lines, 'cpu max mhz').replace(/,/g, '.')) / 10.0) / 100;\n\n            result = cpuBrandManufacturer(result);\n            result.vendor = cpuManufacturer(util.getValue(lines, 'vendor id'));\n\n            result.family = util.getValue(lines, 'cpu family');\n            result.model = util.getValue(lines, 'model:');\n            result.stepping = util.getValue(lines, 'stepping');\n            result.revision = util.getValue(lines, 'cpu revision');\n            result.cache.l1d = util.getValue(lines, 'l1d cache');\n            if (result.cache.l1d) { result.cache.l1d = parseInt(result.cache.l1d) * (result.cache.l1d.indexOf('M') !== -1 ? 1024 * 1024 : (result.cache.l1d.indexOf('K') !== -1 ? 1024 : 1)); }\n            result.cache.l1i = util.getValue(lines, 'l1i cache');\n            if (result.cache.l1i) { result.cache.l1i = parseInt(result.cache.l1i) * (result.cache.l1i.indexOf('M') !== -1 ? 1024 * 1024 : (result.cache.l1i.indexOf('K') !== -1 ? 1024 : 1)); }\n            result.cache.l2 = util.getValue(lines, 'l2 cache');\n            if (result.cache.l2) { result.cache.l2 = parseInt(result.cache.l2) * (result.cache.l2.indexOf('M') !== -1 ? 1024 * 1024 : (result.cache.l2.indexOf('K') !== -1 ? 1024 : 1)); }\n            result.cache.l3 = util.getValue(lines, 'l3 cache');\n            if (result.cache.l3) { result.cache.l3 = parseInt(result.cache.l3) * (result.cache.l3.indexOf('M') !== -1 ? 1024 * 1024 : (result.cache.l3.indexOf('K') !== -1 ? 1024 : 1)); }\n\n            const threadsPerCore = util.getValue(lines, 'thread(s) per core') || '1';\n            const processors = util.getValue(lines, 'socket(s)') || '1';\n            const threadsPerCoreInt = parseInt(threadsPerCore, 10); // threads per code (normally only for performance cores)\n            const processorsInt = parseInt(processors, 10) || 1;  // number of sockets /  processor units in machine (normally 1)\n            const coresPerSocket = parseInt(util.getValue(lines, 'core(s) per socket'), 10); // number of cores (e.g. 16 on i12900)\n            result.physicalCores = coresPerSocket ? coresPerSocket * processorsInt : result.cores / threadsPerCoreInt;\n            result.performanceCores = threadsPerCoreInt > 1 ? result.cores - result.physicalCores : result.cores;\n            result.efficiencyCores = threadsPerCoreInt > 1 ? result.cores - (threadsPerCoreInt * result.performanceCores) : 0;\n            result.processors = processorsInt;\n            result.governor = util.getValue(lines, 'governor') || '';\n\n            // Test Raspberry\n            if (result.vendor === 'ARM') {\n              const linesRpi = fs.readFileSync('/proc/cpuinfo').toString().split('\\n');\n              const rPIRevision = util.decodePiCpuinfo(linesRpi);\n              if (rPIRevision.model.toLowerCase().indexOf('raspberry') >= 0) {\n                result.family = result.manufacturer;\n                result.manufacturer = rPIRevision.manufacturer;\n                result.brand = rPIRevision.processor;\n                result.revision = rPIRevision.revisionCode;\n                result.socket = 'SOC';\n              }\n            }\n\n            // socket type\n            let lines2 = [];\n            exec('export LC_ALL=C; dmidecode \u2013t 4 2>/dev/null | grep \"Upgrade: Socket\"; unset LC_ALL', function (error2, stdout2) {\n              lines2 = stdout2.toString().split('\\n');\n              if (lines2 && lines2.length) {\n                result.socket = util.getValue(lines2, 'Upgrade').replace('Socket', '').trim() || result.socket;\n              }\n              resolve(result);\n            });\n          });\n        }\n        if (_freebsd || _openbsd || _netbsd) {\n          let modelline = '';\n          let lines = [];\n          if (os.cpus()[0] && os.cpus()[0].model) { modelline = os.cpus()[0].model; }\n          exec('export LC_ALL=C; dmidecode -t 4; dmidecode -t 7 unset LC_ALL', function (error, stdout) {\n            let cache = [];\n            if (!error) {\n              const data = stdout.toString().split('# dmidecode');\n              const processor = data.length > 1 ? data[1] : '';\n              cache = data.length > 2 ? data[2].split('Cache Information') : [];\n\n              lines = processor.split('\\n');\n            }\n            result.brand = modelline.split('@')[0].trim();\n            result.speed = modelline.split('@')[1] ? parseFloat(modelline.split('@')[1].trim()) : 0;\n            if (result.speed === 0 && (result.brand.indexOf('AMD') > -1 || result.brand.toLowerCase().indexOf('ryzen') > -1)) {\n              result.speed = getAMDSpeed(result.brand);\n            }\n            if (result.speed === 0) {\n              const current = getCpuCurrentSpeedSync();\n              if (current.avg !== 0) { result.speed = current.avg; }\n            }\n            _cpu_speed = result.speed;\n            result.speedMin = result.speed;\n            result.speedMax = Math.round(parseFloat(util.getValue(lines, 'max speed').replace(/Mhz/g, '')) / 10.0) / 100;\n\n            result = cpuBrandManufacturer(result);\n            result.vendor = cpuManufacturer(util.getValue(lines, 'manufacturer'));\n            let sig = util.getValue(lines, 'signature');\n            sig = sig.split(',');\n            for (let i = 0; i < sig.length; i++) {\n              sig[i] = sig[i].trim();\n            }\n            result.family = util.getValue(sig, 'Family', ' ', true);\n            result.model = util.getValue(sig, 'Model', ' ', true);\n            result.stepping = util.getValue(sig, 'Stepping', ' ', true);\n            result.revision = '';\n            const voltage = parseFloat(util.getValue(lines, 'voltage'));\n            result.voltage = isNaN(voltage) ? '' : voltage.toFixed(2);\n            for (let i = 0; i < cache.length; i++) {\n              lines = cache[i].split('\\n');\n              let cacheType = util.getValue(lines, 'Socket Designation').toLowerCase().replace(' ', '-').split('-');\n              cacheType = cacheType.length ? cacheType[0] : '';\n              const sizeParts = util.getValue(lines, 'Installed Size').split(' ');\n              let size = parseInt(sizeParts[0], 10);\n              const unit = sizeParts.length > 1 ? sizeParts[1] : 'kb';\n              size = size * (unit === 'kb' ? 1024 : (unit === 'mb' ? 1024 * 1024 : (unit === 'gb' ? 1024 * 1024 * 1024 : 1)));\n              if (cacheType) {\n                if (cacheType === 'l1') {\n                  result.cache[cacheType + 'd'] = size / 2;\n                  result.cache[cacheType + 'i'] = size / 2;\n                } else {\n                  result.cache[cacheType] = size;\n                }\n              }\n            }\n            // socket type\n            result.socket = util.getValue(lines, 'Upgrade').replace('Socket', '').trim();\n            // # threads / # cores\n            const threadCount = util.getValue(lines, 'thread count').trim();\n            const coreCount = util.getValue(lines, 'core count').trim();\n            if (coreCount && threadCount) {\n              result.cores = parseInt(threadCount, 10);\n              result.physicalCores = parseInt(coreCount, 10);\n            }\n            resolve(result);\n          });\n        }\n        if (_sunos) {\n          resolve(result);\n        }\n        if (_windows) {\n          try {\n            const workload = [];\n            workload.push(util.powerShell('Get-CimInstance Win32_processor | select Name, Revision, L2CacheSize, L3CacheSize, Manufacturer, MaxClockSpeed, Description, UpgradeMethod, Caption, NumberOfLogicalProcessors, NumberOfCores | fl'));\n            workload.push(util.powerShell('Get-CimInstance Win32_CacheMemory | select CacheType,InstalledSize,Level | fl'));\n            workload.push(util.powerShell('(Get-CimInstance Win32_ComputerSystem).HypervisorPresent'));\n\n            Promise.all(\n              workload\n            ).then((data) => {\n              let lines = data[0].split('\\r\\n');\n              let name = util.getValue(lines, 'name', ':') || '';\n              if (name.indexOf('@') >= 0) {\n                result.brand = name.split('@')[0].trim();\n                result.speed = name.split('@')[1] ? parseFloat(name.split('@')[1].trim()) : 0;\n                _cpu_speed = result.speed;\n              } else {\n                result.brand = name.trim();\n                result.speed = 0;\n              }\n              result = cpuBrandManufacturer(result);\n              result.revision = util.getValue(lines, 'revision', ':');\n              result.vendor = util.getValue(lines, 'manufacturer', ':');\n              result.speedMax = Math.round(parseFloat(util.getValue(lines, 'maxclockspeed', ':').replace(/,/g, '.')) / 10.0) / 100;\n              if (result.speed === 0 && (result.brand.indexOf('AMD') > -1 || result.brand.toLowerCase().indexOf('ryzen') > -1)) {\n                result.speed = getAMDSpeed(result.brand);\n              }\n              if (result.speed === 0) {\n                result.speed = result.speedMax;\n              }\n              result.speedMin = result.speed;\n\n              let description = util.getValue(lines, 'description', ':').split(' ');\n              for (let i = 0; i < description.length; i++) {\n                if (description[i].toLowerCase().startsWith('family') && (i + 1) < description.length && description[i + 1]) {\n                  result.family = description[i + 1];\n                }\n                if (description[i].toLowerCase().startsWith('model') && (i + 1) < description.length && description[i + 1]) {\n                  result.model = description[i + 1];\n                }\n                if (description[i].toLowerCase().startsWith('stepping') && (i + 1) < description.length && description[i + 1]) {\n                  result.stepping = description[i + 1];\n                }\n              }\n              // socket type\n              const socketId = util.getValue(lines, 'UpgradeMethod', ':');\n              if (socketTypes[socketId]) {\n                result.socket = socketTypes[socketId];\n              }\n              const socketByName = getSocketTypesByName(name);\n              if (socketByName) {\n                result.socket = socketByName;\n              }\n              // # threads / # cores\n              const countProcessors = util.countLines(lines, 'Caption');\n              const countThreads = util.getValue(lines, 'NumberOfLogicalProcessors', ':');\n              const countCores = util.getValue(lines, 'NumberOfCores', ':');\n              if (countProcessors) {\n                result.processors = parseInt(countProcessors) || 1;\n              }\n              if (countCores && countThreads) {\n                result.cores = parseInt(countThreads) || util.cores();\n                result.physicalCores = parseInt(countCores) || util.cores();\n              }\n              if (countProcessors > 1) {\n                result.cores = result.cores * countProcessors;\n                result.physicalCores = result.physicalCores * countProcessors;\n              }\n              result.cache = parseWinCache(data[0], data[1]);\n              const hyperv = data[2] ? data[2].toString().toLowerCase() : '';\n              result.virtualization = hyperv.indexOf('true') !== -1;\n\n              resolve(result);\n            });\n          } catch (e) {\n            resolve(result);\n          }\n        }\n      });\n    });\n  });\n}\n\n// --------------------------\n// CPU - Processor Data\n\nfunction cpu(callback) {\n\n  return new Promise((resolve) => {\n    process.nextTick(() => {\n      getCpu().then(result => {\n        if (callback) { callback(result); }\n        resolve(result);\n      });\n    });\n  });\n}\n\nexports.cpu = cpu;\n\n// --------------------------\n// CPU - current speed - in GHz\n\nfunction getCpuCurrentSpeedSync() {\n\n  let cpus = os.cpus();\n  let minFreq = 999999999;\n  let maxFreq = 0;\n  let avgFreq = 0;\n  let cores = [];\n\n  if (cpus && cpus.length) {\n    for (let i in cpus) {\n      if ({}.hasOwnProperty.call(cpus, i)) {\n        let freq = cpus[i].speed > 100 ? (cpus[i].speed + 1) / 1000 : cpus[i].speed / 10;\n        avgFreq = avgFreq + freq;\n        if (freq > maxFreq) { maxFreq = freq; }\n        if (freq < minFreq) { minFreq = freq; }\n        cores.push(parseFloat(freq.toFixed(2)));\n      }\n    }\n    avgFreq = avgFreq / cpus.length;\n    return {\n      min: parseFloat(minFreq.toFixed(2)),\n      max: parseFloat(maxFreq.toFixed(2)),\n      avg: parseFloat((avgFreq).toFixed(2)),\n      cores: cores\n    };\n  } else {\n    return {\n      min: 0,\n      max: 0,\n      avg: 0,\n      cores: cores\n    };\n  }\n}\n\nfunction cpuCurrentSpeed(callback) {\n\n  return new Promise((resolve) => {\n    process.nextTick(() => {\n      let result = getCpuCurrentSpeedSync();\n      if (result.avg === 0 && _cpu_speed !== 0) {\n        const currCpuSpeed = parseFloat(_cpu_speed);\n        result = {\n          min: currCpuSpeed,\n          max: currCpuSpeed,\n          avg: currCpuSpeed,\n          cores: []\n        };\n      }\n      if (callback) { callback(result); }\n      resolve(result);\n    });\n  });\n}\n\nexports.cpuCurrentSpeed = cpuCurrentSpeed;\n\n// --------------------------\n// CPU - temperature\n// if sensors are installed\n\nfunction cpuTemperature(callback) {\n\n  return new Promise((resolve) => {\n    process.nextTick(() => {\n      let result = {\n        main: null,\n        cores: [],\n        max: null,\n        socket: [],\n        chipset: null\n      };\n      if (_linux) {\n        // CPU Chipset, Socket\n        try {\n          const cmd = 'cat /sys/class/thermal/thermal_zone*/type  2>/dev/null; echo \"-----\"; cat /sys/class/thermal/thermal_zone*/temp 2>/dev/null;';\n          const parts = execSync(cmd).toString().split('-----\\n');\n          if (parts.length === 2) {\n            const lines = parts[0].split('\\n');\n            const lines2 = parts[1].split('\\n');\n            for (let i = 0; i < lines.length; i++) {\n              const line = lines[i].trim();\n              if (line.startsWith('acpi') && lines2[i]) {\n                result.socket.push(Math.round(parseInt(lines2[i], 10) / 100) / 10);\n              }\n              if (line.startsWith('pch') && lines2[i]) {\n                result.chipset = Math.round(parseInt(lines2[i], 10) / 100) / 10;\n              }\n            }\n          }\n        } catch (e) {\n          util.noop();\n        }\n\n        const cmd = 'for mon in /sys/class/hwmon/hwmon*; do for label in \"$mon\"/temp*_label; do if [ -f $label ]; then value=${label%_*}_input; echo $(cat \"$label\")___$(cat \"$value\"); fi; done; done;';\n        try {\n          exec(cmd, function (error, stdout) {\n            stdout = stdout.toString();\n            const tdiePos = stdout.toLowerCase().indexOf('tdie');\n            if (tdiePos !== -1) {\n              stdout = stdout.substring(tdiePos);\n            }\n            let lines = stdout.split('\\n');\n            let tctl = 0;\n            lines.forEach(line => {\n              const parts = line.split('___');\n              const label = parts[0];\n              const value = parts.length > 1 && parts[1] ? parts[1] : '0';\n              if (value && label && label.toLowerCase() === 'tctl') {\n                tctl = result.main = Math.round(parseInt(value, 10) / 100) / 10;\n              }\n              if (value && (label === undefined || (label && label.toLowerCase().startsWith('core')))) {\n                result.cores.push(Math.round(parseInt(value, 10) / 100) / 10);\n              } else if (value && label && result.main === null && (label.toLowerCase().indexOf('package') >= 0 || label.toLowerCase().indexOf('physical') >= 0 || label.toLowerCase() === 'tccd1')) {\n                result.main = Math.round(parseInt(value, 10) / 100) / 10;\n              }\n            });\n            if (tctl && result.main === null) {\n              result.main = tctl;\n            }\n\n            if (result.cores.length > 0) {\n              if (result.main === null) {\n                result.main = Math.round(result.cores.reduce((a, b) => a + b, 0) / result.cores.length);\n              }\n              let maxtmp = Math.max.apply(Math, result.cores);\n              result.max = (maxtmp > result.main) ? maxtmp : result.main;\n            }\n            if (result.main !== null) {\n              if (result.max === null) {\n                result.max = result.main;\n              }\n              if (callback) { callback(result); }\n              resolve(result);\n              return;\n            }\n            exec('sensors', function (error, stdout) {\n              if (!error) {\n                let lines = stdout.toString().split('\\n');\n                let tdieTemp = null;\n                let newSectionStarts = true;\n                let section = '';\n                lines.forEach(function (line) {\n                  // determine section\n                  if (line.trim() === '') {\n                    newSectionStarts = true;\n                  } else if (newSectionStarts) {\n                    if (line.trim().toLowerCase().startsWith('acpi')) { section = 'acpi'; }\n                    if (line.trim().toLowerCase().startsWith('pch')) { section = 'pch'; }\n                    if (line.trim().toLowerCase().startsWith('core')) { section = 'core'; }\n                    newSectionStarts = false;\n                  }\n                  let regex = /[+-]([^\u00B0]*)/g;\n                  let temps = line.match(regex);\n                  let firstPart = line.split(':')[0].toUpperCase();\n                  if (section === 'acpi') {\n                    // socket temp\n                    if (firstPart.indexOf('TEMP') !== -1) {\n                      result.socket.push(parseFloat(temps));\n                    }\n                  } else if (section === 'pch') {\n                    // chipset temp\n                    if (firstPart.indexOf('TEMP') !== -1 && !result.chipset) {\n                      result.chipset = parseFloat(temps);\n                    }\n                  }\n                  // cpu temp\n                  if (firstPart.indexOf('PHYSICAL') !== -1 || firstPart.indexOf('PACKAGE') !== -1) {\n                    result.main = parseFloat(temps);\n                  }\n                  if (firstPart.indexOf('CORE ') !== -1) {\n                    result.cores.push(parseFloat(temps));\n                  }\n                  if (firstPart.indexOf('TDIE') !== -1 && tdieTemp === null) {\n                    tdieTemp = parseFloat(temps);\n                  }\n                });\n                if (result.cores.length > 0) {\n                  result.main = Math.round(result.cores.reduce((a, b) => a + b, 0) / result.cores.length);\n                  let maxtmp = Math.max.apply(Math, result.cores);\n                  result.max = (maxtmp > result.main) ? maxtmp : result.main;\n                } else {\n                  if (result.main === null && tdieTemp !== null) {\n                    result.main = tdieTemp;\n                    result.max = tdieTemp;\n                  }\n                }\n                if (result.main !== null || result.max !== null) {\n                  if (callback) { callback(result); }\n                  resolve(result);\n                  return;\n                }\n              }\n              fs.stat('/sys/class/thermal/thermal_zone0/temp', function (err) {\n                if (err === null) {\n                  fs.readFile('/sys/class/thermal/thermal_zone0/temp', function (error, stdout) {\n                    if (!error) {\n                      let lines = stdout.toString().split('\\n');\n                      if (lines.length > 0) {\n                        result.main = parseFloat(lines[0]) / 1000.0;\n                        result.max = result.main;\n                      }\n                    }\n                    if (callback) { callback(result); }\n                    resolve(result);\n                  });\n                } else {\n                  exec('/opt/vc/bin/vcgencmd measure_temp', function (error, stdout) {\n                    if (!error) {\n                      let lines = stdout.toString().split('\\n');\n                      if (lines.length > 0 && lines[0].indexOf('=')) {\n                        result.main = parseFloat(lines[0].split('=')[1]);\n                        result.max = result.main;\n                      }\n                    }\n                    if (callback) { callback(result); }\n                    resolve(result);\n                  });\n                }\n              });\n            });\n          });\n        } catch (er) {\n          if (callback) { callback(result); }\n          resolve(result);\n        }\n      }\n      if (_freebsd || _openbsd || _netbsd) {\n        exec('sysctl dev.cpu | grep temp', function (error, stdout) {\n          if (!error) {\n            let lines = stdout.toString().split('\\n');\n            let sum = 0;\n            lines.forEach(function (line) {\n              const parts = line.split(':');\n              if (parts.length > 1) {\n                const temp = parseFloat(parts[1].replace(',', '.'));\n                if (temp > result.max) { result.max = temp; }\n                sum = sum + temp;\n                result.cores.push(temp);\n              }\n            });\n            if (result.cores.length) {\n              result.main = Math.round(sum / result.cores.length * 100) / 100;\n            }\n          }\n          if (callback) { callback(result); }\n          resolve(result);\n        });\n      }\n      if (_darwin) {\n        let osxTemp = null;\n        try {\n          osxTemp = require('osx-temperature-sensor');\n        } catch (er) {\n          osxTemp = null;\n        }\n        if (osxTemp) {\n          result = osxTemp.cpuTemperature();\n          // round to 2 digits\n          if (result.main) {\n            result.main = Math.round(result.main * 100) / 100;\n          }\n          if (result.max) {\n            result.max = Math.round(result.max * 100) / 100;\n          }\n          if (result.cores && result.cores.length) {\n            for (let i = 0; i < result.cores.length; i++) {\n              result.cores[i] = Math.round(result.cores[i] * 100) / 100;\n            }\n          }\n        }\n\n        if (callback) { callback(result); }\n        resolve(result);\n      }\n      if (_sunos) {\n        if (callback) { callback(result); }\n        resolve(result);\n      }\n      if (_windows) {\n        try {\n          util.powerShell('Get-CimInstance MSAcpi_ThermalZoneTemperature -Namespace \"root/wmi\" | Select CurrentTemperature').then((stdout, error) => {\n            if (!error) {\n              let sum = 0;\n              let lines = stdout.split('\\r\\n').filter(line => line.trim() !== '').filter((line, idx) => idx > 0);\n              lines.forEach(function (line) {\n                let value = (parseInt(line, 10) - 2732) / 10;\n                if (!isNaN(value)) {\n                  sum = sum + value;\n                  if (value > result.max) { result.max = value; }\n                  result.cores.push(value);\n                }\n              });\n              if (result.cores.length) {\n                result.main = sum / result.cores.length;\n              }\n            }\n            if (callback) { callback(result); }\n            resolve(result);\n          });\n        } catch (e) {\n          if (callback) { callback(result); }\n          resolve(result);\n        }\n      }\n    });\n  });\n}\n\nexports.cpuTemperature = cpuTemperature;\n\n// --------------------------\n// CPU Flags\n\nfunction cpuFlags(callback) {\n\n  return new Promise((resolve) => {\n    process.nextTick(() => {\n      let result = '';\n      if (_windows) {\n        try {\n          exec('reg query \"HKEY_LOCAL_MACHINE\\\\HARDWARE\\\\DESCRIPTION\\\\System\\\\CentralProcessor\\\\0\" /v FeatureSet', util.execOptsWin, function (error, stdout) {\n            if (!error) {\n              let flag_hex = stdout.split('0x').pop().trim();\n              let flag_bin_unpadded = parseInt(flag_hex, 16).toString(2);\n              let flag_bin = '0'.repeat(32 - flag_bin_unpadded.length) + flag_bin_unpadded;\n              // empty flags are the reserved fields in the CPUID feature bit list\n              // as found on wikipedia:\n              // https://en.wikipedia.org/wiki/CPUID\n              let all_flags = [\n                'fpu', 'vme', 'de', 'pse', 'tsc', 'msr', 'pae', 'mce', 'cx8', 'apic',\n                '', 'sep', 'mtrr', 'pge', 'mca', 'cmov', 'pat', 'pse-36', 'psn', 'clfsh',\n                '', 'ds', 'acpi', 'mmx', 'fxsr', 'sse', 'sse2', 'ss', 'htt', 'tm', 'ia64', 'pbe'\n              ];\n              for (let f = 0; f < all_flags.length; f++) {\n                if (flag_bin[f] === '1' && all_flags[f] !== '') {\n                  result += ' ' + all_flags[f];\n                }\n              }\n              result = result.trim().toLowerCase();\n            }\n            if (callback) { callback(result); }\n            resolve(result);\n          });\n        } catch (e) {\n          if (callback) { callback(result); }\n          resolve(result);\n        }\n      }\n      if (_linux) {\n        try {\n\n          exec('export LC_ALL=C; lscpu; unset LC_ALL', function (error, stdout) {\n            if (!error) {\n              let lines = stdout.toString().split('\\n');\n              lines.forEach(function (line) {\n                if (line.split(':')[0].toUpperCase().indexOf('FLAGS') !== -1) {\n                  result = line.split(':')[1].trim().toLowerCase();\n                }\n              });\n            }\n            if (!result) {\n              fs.readFile('/proc/cpuinfo', function (error, stdout) {\n                if (!error) {\n                  let lines = stdout.toString().split('\\n');\n                  result = util.getValue(lines, 'features', ':', true).toLowerCase();\n                }\n                if (callback) { callback(result); }\n                resolve(result);\n              });\n            } else {\n              if (callback) { callback(result); }\n              resolve(result);\n            }\n          });\n        } catch (e) {\n          if (callback) { callback(result); }\n          resolve(result);\n        }\n      }\n      if (_freebsd || _openbsd || _netbsd) {\n        exec('export LC_ALL=C; dmidecode -t 4 2>/dev/null; unset LC_ALL', function (error, stdout) {\n          let flags = [];\n          if (!error) {\n            let parts = stdout.toString().split('\\tFlags:');\n            const lines = parts.length > 1 ? parts[1].split('\\tVersion:')[0].split('\\n') : [];\n            lines.forEach(function (line) {\n              let flag = (line.indexOf('(') ? line.split('(')[0].toLowerCase() : '').trim().replace(/\\t/g, '');\n              if (flag) {\n                flags.push(flag);\n              }\n            });\n          }\n          result = flags.join(' ').trim().toLowerCase();\n          if (callback) { callback(result); }\n          resolve(result);\n        });\n      }\n      if (_darwin) {\n        exec('sysctl machdep.cpu.features', function (error, stdout) {\n          if (!error) {\n            let lines = stdout.toString().split('\\n');\n            if (lines.length > 0 && lines[0].indexOf('machdep.cpu.features:') !== -1) {\n              result = lines[0].split(':')[1].trim().toLowerCase();\n            }\n          }\n          if (callback) { callback(result); }\n          resolve(result);\n        });\n      }\n      if (_sunos) {\n        if (callback) { callback(result); }\n        resolve(result);\n      }\n    });\n  });\n}\n\nexports.cpuFlags = cpuFlags;\n\n// --------------------------\n// CPU Cache\n\nfunction cpuCache(callback) {\n\n  return new Promise((resolve) => {\n    process.nextTick(() => {\n\n      let result = {\n        l1d: null,\n        l1i: null,\n        l2: null,\n        l3: null,\n      };\n      if (_linux) {\n        try {\n          exec('export LC_ALL=C; lscpu; unset LC_ALL', function (error, stdout) {\n            if (!error) {\n              let lines = stdout.toString().split('\\n');\n              lines.forEach(function (line) {\n                let parts = line.split(':');\n                if (parts[0].toUpperCase().indexOf('L1D CACHE') !== -1) {\n                  result.l1d = parseInt(parts[1].trim()) * (parts[1].indexOf('M') !== -1 ? 1024 * 1024 : (parts[1].indexOf('K') !== -1 ? 1024 : 1));\n                }\n                if (parts[0].toUpperCase().indexOf('L1I CACHE') !== -1) {\n                  result.l1i = parseInt(parts[1].trim()) * (parts[1].indexOf('M') !== -1 ? 1024 * 1024 : (parts[1].indexOf('K') !== -1 ? 1024 : 1));\n                }\n                if (parts[0].toUpperCase().indexOf('L2 CACHE') !== -1) {\n                  result.l2 = parseInt(parts[1].trim()) * (parts[1].indexOf('M') !== -1 ? 1024 * 1024 : (parts[1].indexOf('K') !== -1 ? 1024 : 1));\n                }\n                if (parts[0].toUpperCase().indexOf('L3 CACHE') !== -1) {\n                  result.l3 = parseInt(parts[1].trim()) * (parts[1].indexOf('M') !== -1 ? 1024 * 1024 : (parts[1].indexOf('K') !== -1 ? 1024 : 1));\n                }\n              });\n            }\n            if (callback) { callback(result); }\n            resolve(result);\n          });\n        } catch (e) {\n          if (callback) { callback(result); }\n          resolve(result);\n        }\n      }\n      if (_freebsd || _openbsd || _netbsd) {\n        exec('export LC_ALL=C; dmidecode -t 7 2>/dev/null; unset LC_ALL', function (error, stdout) {\n          let cache = [];\n          if (!error) {\n            const data = stdout.toString();\n            cache = data.split('Cache Information');\n            cache.shift();\n          }\n          for (let i = 0; i < cache.length; i++) {\n            const lines = cache[i].split('\\n');\n            let cacheType = util.getValue(lines, 'Socket Designation').toLowerCase().replace(' ', '-').split('-');\n            cacheType = cacheType.length ? cacheType[0] : '';\n            const sizeParts = util.getValue(lines, 'Installed Size').split(' ');\n            let size = parseInt(sizeParts[0], 10);\n            const unit = sizeParts.length > 1 ? sizeParts[1] : 'kb';\n            size = size * (unit === 'kb' ? 1024 : (unit === 'mb' ? 1024 * 1024 : (unit === 'gb' ? 1024 * 1024 * 1024 : 1)));\n            if (cacheType) {\n              if (cacheType === 'l1') {\n                result.cache[cacheType + 'd'] = size / 2;\n                result.cache[cacheType + 'i'] = size / 2;\n              } else {\n                result.cache[cacheType] = size;\n              }\n            }\n          }\n          if (callback) { callback(result); }\n          resolve(result);\n        });\n      }\n      if (_darwin) {\n        exec('sysctl hw.l1icachesize hw.l1dcachesize hw.l2cachesize hw.l3cachesize', function (error, stdout) {\n          if (!error) {\n            let lines = stdout.toString().split('\\n');\n            lines.forEach(function (line) {\n              let parts = line.split(':');\n              if (parts[0].toLowerCase().indexOf('hw.l1icachesize') !== -1) {\n                result.l1d = parseInt(parts[1].trim()) * (parts[1].indexOf('K') !== -1 ? 1024 : 1);\n              }\n              if (parts[0].toLowerCase().indexOf('hw.l1dcachesize') !== -1) {\n                result.l1i = parseInt(parts[1].trim()) * (parts[1].indexOf('K') !== -1 ? 1024 : 1);\n              }\n              if (parts[0].toLowerCase().indexOf('hw.l2cachesize') !== -1) {\n                result.l2 = parseInt(parts[1].trim()) * (parts[1].indexOf('K') !== -1 ? 1024 : 1);\n              }\n              if (parts[0].toLowerCase().indexOf('hw.l3cachesize') !== -1) {\n                result.l3 = parseInt(parts[1].trim()) * (parts[1].indexOf('K') !== -1 ? 1024 : 1);\n              }\n            });\n          }\n          if (callback) { callback(result); }\n          resolve(result);\n        });\n      }\n      if (_sunos) {\n        if (callback) { callback(result); }\n        resolve(result);\n      }\n      if (_windows) {\n        try {\n          const workload = [];\n          workload.push(util.powerShell('Get-CimInstance Win32_processor | select L2CacheSize, L3CacheSize | fl'));\n          workload.push(util.powerShell('Get-CimInstance Win32_CacheMemory | select CacheType,InstalledSize,Level | fl'));\n\n          Promise.all(\n            workload\n          ).then((data) => {\n            result = parseWinCache(data[0], data[1]);\n\n            if (callback) { callback(result); }\n            resolve(result);\n          });\n        } catch (e) {\n          if (callback) { callback(result); }\n          resolve(result);\n        }\n      }\n    });\n  });\n}\n\nfunction parseWinCache(linesProc, linesCache) {\n  let result = {\n    l1d: null,\n    l1i: null,\n    l2: null,\n    l3: null,\n  };\n\n  // Win32_processor\n  let lines = linesProc.split('\\r\\n');\n  result.l1d = 0;\n  result.l1i = 0;\n  result.l2 = util.getValue(lines, 'l2cachesize', ':');\n  result.l3 = util.getValue(lines, 'l3cachesize', ':');\n  if (result.l2) { result.l2 = parseInt(result.l2, 10) * 1024; } else { result.l2 = 0; }\n  if (result.l3) { result.l3 = parseInt(result.l3, 10) * 1024; } else { result.l3 = 0; }\n\n  // Win32_CacheMemory\n  const parts = linesCache.split(/\\n\\s*\\n/);\n  let l1i = 0;\n  let l1d = 0;\n  let l2 = 0;\n  parts.forEach(function (part) {\n    const lines = part.split('\\r\\n');\n    const cacheType = util.getValue(lines, 'CacheType');\n    const level = util.getValue(lines, 'Level');\n    const installedSize = util.getValue(lines, 'InstalledSize');\n    // L1 Instructions\n    if (level === '3' && cacheType === '3') {\n      result.l1i = result.l1i + parseInt(installedSize, 10) * 1024;\n    }\n    // L1 Data\n    if (level === '3' && cacheType === '4') {\n      result.l1d = result.l1d + parseInt(installedSize, 10) * 1024;\n    }\n    // L1 all\n    if (level === '3' && cacheType === '5') {\n      l1i = parseInt(installedSize, 10) / 2;\n      l1d = parseInt(installedSize, 10) / 2;\n    }\n    // L2\n    if (level === '4' && cacheType === '5') {\n      l2 = l2 + parseInt(installedSize, 10) * 1024;\n    }\n  });\n  if (!result.l1i && !result.l1d) {\n    result.l1i = l1i;\n    result.l1d = l1d;\n  }\n  if (l2) {\n    result.l2 = l2;\n  }\n  return result;\n}\n\nexports.cpuCache = cpuCache;\n\n// --------------------------\n// CPU - current load - in %\n\nfunction getLoad() {\n\n  return new Promise((resolve) => {\n    process.nextTick(() => {\n      let loads = os.loadavg().map(function (x) { return x / util.cores(); });\n      let avgLoad = parseFloat((Math.max.apply(Math, loads)).toFixed(2));\n      let result = {};\n\n      let now = Date.now() - _current_cpu.ms;\n      if (now >= 200) {\n        _current_cpu.ms = Date.now();\n        const cpus = os.cpus().map(function (cpu) {\n          cpu.times.steal = 0;\n          cpu.times.guest = 0;\n          return cpu;\n        });\n        let totalUser = 0;\n        let totalSystem = 0;\n        let totalNice = 0;\n        let totalIrq = 0;\n        let totalIdle = 0;\n        let totalSteal = 0;\n        let totalGuest = 0;\n        let cores = [];\n        _corecount = (cpus && cpus.length) ? cpus.length : 0;\n\n        // linux: try to get other cpu stats\n        if (_linux) {\n          try {\n            const lines = execSync('cat /proc/stat 2>/dev/null | grep cpu', { encoding: 'utf8' }).toString().split('\\n');\n            if (lines.length > 1) {\n              lines.shift();\n              if (lines.length === cpus.length) {\n                for (let i = 0; i < lines.length; i++) {\n                  let parts = lines[i].split(' ');\n                  if (parts.length >= 10) {\n                    const steal = parseFloat(parts[8]) || 0;\n                    const guest = parseFloat(parts[9]) || 0;\n                    cpus[i].times.steal = steal;\n                    cpus[i].times.guest = guest;\n                  }\n                }\n              }\n            }\n          } catch (e) {\n            util.noop();\n          }\n        }\n\n        for (let i = 0; i < _corecount; i++) {\n          const cpu = cpus[i].times;\n          totalUser += cpu.user;\n          totalSystem += cpu.sys;\n          totalNice += cpu.nice;\n          totalIdle += cpu.idle;\n          totalIrq += cpu.irq;\n          totalSteal += cpu.steal || 0;\n          totalGuest += cpu.guest || 0;\n          let tmpTick = (_cpus && _cpus[i] && _cpus[i].totalTick ? _cpus[i].totalTick : 0);\n          let tmpLoad = (_cpus && _cpus[i] && _cpus[i].totalLoad ? _cpus[i].totalLoad : 0);\n          let tmpUser = (_cpus && _cpus[i] && _cpus[i].user ? _cpus[i].user : 0);\n          let tmpSystem = (_cpus && _cpus[i] && _cpus[i].sys ? _cpus[i].sys : 0);\n          let tmpNice = (_cpus && _cpus[i] && _cpus[i].nice ? _cpus[i].nice : 0);\n          let tmpIdle = (_cpus && _cpus[i] && _cpus[i].idle ? _cpus[i].idle : 0);\n          let tmpIrq = (_cpus && _cpus[i] && _cpus[i].irq ? _cpus[i].irq : 0);\n          let tmpSteal = (_cpus && _cpus[i] && _cpus[i].steal ? _cpus[i].steal : 0);\n          let tmpGuest = (_cpus && _cpus[i] && _cpus[i].guest ? _cpus[i].guest : 0);\n          _cpus[i] = cpu;\n          _cpus[i].totalTick = _cpus[i].user + _cpus[i].sys + _cpus[i].nice + _cpus[i].irq + _cpus[i].steal + _cpus[i].guest + _cpus[i].idle;\n          _cpus[i].totalLoad = _cpus[i].user + _cpus[i].sys + _cpus[i].nice + _cpus[i].irq + _cpus[i].steal + _cpus[i].guest;\n          _cpus[i].currentTick = _cpus[i].totalTick - tmpTick;\n          _cpus[i].load = (_cpus[i].totalLoad - tmpLoad);\n          _cpus[i].loadUser = (_cpus[i].user - tmpUser);\n          _cpus[i].loadSystem = (_cpus[i].sys - tmpSystem);\n          _cpus[i].loadNice = (_cpus[i].nice - tmpNice);\n          _cpus[i].loadIdle = (_cpus[i].idle - tmpIdle);\n          _cpus[i].loadIrq = (_cpus[i].irq - tmpIrq);\n          _cpus[i].loadSteal = (_cpus[i].steal - tmpSteal);\n          _cpus[i].loadGuest = (_cpus[i].guest - tmpGuest);\n          cores[i] = {};\n          cores[i].load = _cpus[i].load / _cpus[i].currentTick * 100;\n          cores[i].loadUser = _cpus[i].loadUser / _cpus[i].currentTick * 100;\n          cores[i].loadSystem = _cpus[i].loadSystem / _cpus[i].currentTick * 100;\n          cores[i].loadNice = _cpus[i].loadNice / _cpus[i].currentTick * 100;\n          cores[i].loadIdle = _cpus[i].loadIdle / _cpus[i].currentTick * 100;\n          cores[i].loadIrq = _cpus[i].loadIrq / _cpus[i].currentTick * 100;\n          cores[i].loadSteal = _cpus[i].loadSteal / _cpus[i].currentTick * 100;\n          cores[i].loadGuest = _cpus[i].loadGuest / _cpus[i].currentTick * 100;\n          cores[i].rawLoad = _cpus[i].load;\n          cores[i].rawLoadUser = _cpus[i].loadUser;\n          cores[i].rawLoadSystem = _cpus[i].loadSystem;\n          cores[i].rawLoadNice = _cpus[i].loadNice;\n          cores[i].rawLoadIdle = _cpus[i].loadIdle;\n          cores[i].rawLoadIrq = _cpus[i].loadIrq;\n          cores[i].rawLoadSteal = _cpus[i].loadSteal;\n          cores[i].rawLoadGuest = _cpus[i].loadGuest;\n        }\n        let totalTick = totalUser + totalSystem + totalNice + totalIrq + totalSteal + totalGuest + totalIdle;\n        let totalLoad = totalUser + totalSystem + totalNice + totalIrq + totalSteal + totalGuest;\n        let currentTick = totalTick - _current_cpu.tick;\n        result = {\n          avgLoad: avgLoad,\n          currentLoad: (totalLoad - _current_cpu.load) / currentTick * 100,\n          currentLoadUser: (totalUser - _current_cpu.user) / currentTick * 100,\n          currentLoadSystem: (totalSystem - _current_cpu.system) / currentTick * 100,\n          currentLoadNice: (totalNice - _current_cpu.nice) / currentTick * 100,\n          currentLoadIdle: (totalIdle - _current_cpu.idle) / currentTick * 100,\n          currentLoadIrq: (totalIrq - _current_cpu.irq) / currentTick * 100,\n          currentLoadSteal: (totalSteal - _current_cpu.steal) / currentTick * 100,\n          currentLoadGuest: (totalGuest - _current_cpu.guest) / currentTick * 100,\n          rawCurrentLoad: (totalLoad - _current_cpu.load),\n          rawCurrentLoadUser: (totalUser - _current_cpu.user),\n          rawCurrentLoadSystem: (totalSystem - _current_cpu.system),\n          rawCurrentLoadNice: (totalNice - _current_cpu.nice),\n          rawCurrentLoadIdle: (totalIdle - _current_cpu.idle),\n          rawCurrentLoadIrq: (totalIrq - _current_cpu.irq),\n          rawCurrentLoadSteal: (totalSteal - _current_cpu.steal),\n          rawCurrentLoadGuest: (totalGuest - _current_cpu.guest),\n          cpus: cores\n        };\n        _current_cpu = {\n          user: totalUser,\n          nice: totalNice,\n          system: totalSystem,\n          idle: totalIdle,\n          irq: totalIrq,\n          steal: totalSteal,\n          guest: totalGuest,\n          tick: totalTick,\n          load: totalLoad,\n          ms: _current_cpu.ms,\n          currentLoad: result.currentLoad,\n          currentLoadUser: result.currentLoadUser,\n          currentLoadSystem: result.currentLoadSystem,\n          currentLoadNice: result.currentLoadNice,\n          currentLoadIdle: result.currentLoadIdle,\n          currentLoadIrq: result.currentLoadIrq,\n          currentLoadSteal: result.currentLoadSteal,\n          currentLoadGuest: result.currentLoadGuest,\n          rawCurrentLoad: result.rawCurrentLoad,\n          rawCurrentLoadUser: result.rawCurrentLoadUser,\n          rawCurrentLoadSystem: result.rawCurrentLoadSystem,\n          rawCurrentLoadNice: result.rawCurrentLoadNice,\n          rawCurrentLoadIdle: result.rawCurrentLoadIdle,\n          rawCurrentLoadIrq: result.rawCurrentLoadIrq,\n          rawCurrentLoadSteal: result.rawCurrentLoadSteal,\n          rawCurrentLoadGuest: result.rawCurrentLoadGuest,\n        };\n      } else {\n        let cores = [];\n        for (let i = 0; i < _corecount; i++) {\n          cores[i] = {};\n          cores[i].load = _cpus[i].load / _cpus[i].currentTick * 100;\n          cores[i].loadUser = _cpus[i].loadUser / _cpus[i].currentTick * 100;\n          cores[i].loadSystem = _cpus[i].loadSystem / _cpus[i].currentTick * 100;\n          cores[i].loadNice = _cpus[i].loadNice / _cpus[i].currentTick * 100;\n          cores[i].loadIdle = _cpus[i].loadIdle / _cpus[i].currentTick * 100;\n          cores[i].loadIrq = _cpus[i].loadIrq / _cpus[i].currentTick * 100;\n          cores[i].rawLoad = _cpus[i].load;\n          cores[i].rawLoadUser = _cpus[i].loadUser;\n          cores[i].rawLoadSystem = _cpus[i].loadSystem;\n          cores[i].rawLoadNice = _cpus[i].loadNice;\n          cores[i].rawLoadIdle = _cpus[i].loadIdle;\n          cores[i].rawLoadIrq = _cpus[i].loadIrq;\n          cores[i].rawLoadSteal = _cpus[i].loadSteal;\n          cores[i].rawLoadGuest = _cpus[i].loadGuest;\n        }\n        result = {\n          avgLoad: avgLoad,\n          currentLoad: _current_cpu.currentLoad,\n          currentLoadUser: _current_cpu.currentLoadUser,\n          currentLoadSystem: _current_cpu.currentLoadSystem,\n          currentLoadNice: _current_cpu.currentLoadNice,\n          currentLoadIdle: _current_cpu.currentLoadIdle,\n          currentLoadIrq: _current_cpu.currentLoadIrq,\n          currentLoadSteal: _current_cpu.currentLoadSteal,\n          currentLoadGuest: _current_cpu.currentLoadGuest,\n          rawCurrentLoad: _current_cpu.rawCurrentLoad,\n          rawCurrentLoadUser: _current_cpu.rawCurrentLoadUser,\n          rawCurrentLoadSystem: _current_cpu.rawCurrentLoadSystem,\n          rawCurrentLoadNice: _current_cpu.rawCurrentLoadNice,\n          rawCurrentLoadIdle: _current_cpu.rawCurrentLoadIdle,\n          rawCurrentLoadIrq: _current_cpu.rawCurrentLoadIrq,\n          rawCurrentLoadSteal: _current_cpu.rawCurrentLoadSteal,\n          rawCurrentLoadGuest: _current_cpu.rawCurrentLoadGuest,\n          cpus: cores\n        };\n      }\n      resolve(result);\n    });\n  });\n}\n\nfunction currentLoad(callback) {\n\n  return new Promise((resolve) => {\n    process.nextTick(() => {\n      getLoad().then(result => {\n        if (callback) { callback(result); }\n        resolve(result);\n      });\n    });\n  });\n}\n\nexports.currentLoad = currentLoad;\n\n// --------------------------\n// PS - full load\n// since bootup\n\nfunction getFullLoad() {\n\n  return new Promise((resolve) => {\n    process.nextTick(() => {\n\n      const cpus = os.cpus();\n      let totalUser = 0;\n      let totalSystem = 0;\n      let totalNice = 0;\n      let totalIrq = 0;\n      let totalIdle = 0;\n\n      let result = 0;\n\n      if (cpus && cpus.length) {\n        for (let i = 0, len = cpus.length; i < len; i++) {\n          const cpu = cpus[i].times;\n          totalUser += cpu.user;\n          totalSystem += cpu.sys;\n          totalNice += cpu.nice;\n          totalIrq += cpu.irq;\n          totalIdle += cpu.idle;\n        }\n        let totalTicks = totalIdle + totalIrq + totalNice + totalSystem + totalUser;\n        result = (totalTicks - totalIdle) / totalTicks * 100.0;\n\n      }\n      resolve(result);\n    });\n  });\n}\n\nfunction fullLoad(callback) {\n\n  return new Promise((resolve) => {\n    process.nextTick(() => {\n      getFullLoad().then(result => {\n        if (callback) { callback(result); }\n        resolve(result);\n      });\n    });\n  });\n}\n\nexports.fullLoad = fullLoad;\n", "'use strict';\n// @ts-check\n// ==================================================================================\n// memory.js\n// ----------------------------------------------------------------------------------\n// Description:   System Information - library\n//                for Node.js\n// Copyright:     (c) 2014 - 2024\n// Author:        Sebastian Hildebrandt\n// ----------------------------------------------------------------------------------\n// License:       MIT\n// ==================================================================================\n// 5. Memory\n// ----------------------------------------------------------------------------------\n\nconst os = require('os');\nconst exec = require('child_process').exec;\nconst execSync = require('child_process').execSync;\nconst util = require('./util');\nconst fs = require('fs');\n\nlet _platform = process.platform;\n\nconst _linux = (_platform === 'linux' || _platform === 'android');\nconst _darwin = (_platform === 'darwin');\nconst _windows = (_platform === 'win32');\nconst _freebsd = (_platform === 'freebsd');\nconst _openbsd = (_platform === 'openbsd');\nconst _netbsd = (_platform === 'netbsd');\nconst _sunos = (_platform === 'sunos');\n\nconst OSX_RAM_manufacturers = {\n  '0x014F': 'Transcend Information',\n  '0x2C00': 'Micron Technology Inc.',\n  '0x802C': 'Micron Technology Inc.',\n  '0x80AD': 'Hynix Semiconductor Inc.',\n  '0x80CE': 'Samsung Electronics Inc.',\n  '0xAD00': 'Hynix Semiconductor Inc.',\n  '0xCE00': 'Samsung Electronics Inc.',\n  '0x02FE': 'Elpida',\n  '0x5105': 'Qimonda AG i. In.',\n  '0x8551': 'Qimonda AG i. In.',\n  '0x859B': 'Crucial',\n  '0x04CD': 'G-Skill'\n};\n\nconst LINUX_RAM_manufacturers = {\n  '017A': 'Apacer',\n  '0198': 'HyperX',\n  '029E': 'Corsair',\n  '04CB': 'A-DATA',\n  '04CD': 'G-Skill',\n  '059B': 'Crucial',\n  '00CE': 'Samsung',\n  '1315': 'Crucial',\n  '014F': 'Transcend Information',\n  '2C00': 'Micron Technology Inc.',\n  '802C': 'Micron Technology Inc.',\n  '80AD': 'Hynix Semiconductor Inc.',\n  '80CE': 'Samsung Electronics Inc.',\n  'AD00': 'Hynix Semiconductor Inc.',\n  'CE00': 'Samsung Electronics Inc.',\n  '02FE': 'Elpida',\n  '5105': 'Qimonda AG i. In.',\n  '8551': 'Qimonda AG i. In.',\n  '859B': 'Crucial'\n};\n\n// _______________________________________________________________________________________\n// |                         R A M                              |          H D           |\n// |______________________|_________________________|           |                        |\n// |        active             buffers/cache        |           |                        |\n// |________________________________________________|___________|_________|______________|\n// |                     used                            free   |   used       free      |\n// |____________________________________________________________|________________________|\n// |                        total                               |          swap          |\n// |____________________________________________________________|________________________|\n\n// free (older versions)\n// ----------------------------------\n// # free\n//              total       used        free     shared    buffers     cached\n// Mem:         16038 (1)   15653 (2)   384 (3)  0 (4)     236 (5)     14788 (6)\n// -/+ buffers/cache:       628 (7)     15409 (8)\n// Swap:        16371         83      16288\n//\n// |------------------------------------------------------------|\n// |                           R A M                            |\n// |______________________|_____________________________________|\n// | active (2-(5+6) = 7) |  available (3+5+6 = 8)              |\n// |______________________|_________________________|___________|\n// |        active        |  buffers/cache (5+6)    |           |\n// |________________________________________________|___________|\n// |                   used (2)                     | free (3)  |\n// |____________________________________________________________|\n// |                          total (1)                         |\n// |____________________________________________________________|\n\n//\n// free (since free von procps-ng 3.3.10)\n// ----------------------------------\n// # free\n//              total       used        free     shared    buffers/cache   available\n// Mem:         16038 (1)   628 (2)     386 (3)  0 (4)     15024 (5)     14788 (6)\n// Swap:        16371         83      16288\n//\n// |------------------------------------------------------------|\n// |                           R A M                            |\n// |______________________|_____________________________________|\n// |                      |      available (6) estimated        |\n// |______________________|_________________________|___________|\n// |     active (2)       |   buffers/cache (5)     | free (3)  |\n// |________________________________________________|___________|\n// |                          total (1)                         |\n// |____________________________________________________________|\n//\n// Reference: http://www.software-architect.net/blog/article/date/2015/06/12/-826c6e5052.html\n\n// /procs/meminfo - sample (all in kB)\n//\n// MemTotal: 32806380 kB\n// MemFree: 17977744 kB\n// MemAvailable: 19768972 kB\n// Buffers: 517028 kB\n// Cached: 2161876 kB\n// SwapCached: 456 kB\n// Active: 12081176 kB\n// Inactive: 2164616 kB\n// Active(anon): 10832884 kB\n// Inactive(anon): 1477272 kB\n// Active(file): 1248292 kB\n// Inactive(file): 687344 kB\n// Unevictable: 0 kB\n// Mlocked: 0 kB\n// SwapTotal: 16768892 kB\n// SwapFree: 16768304 kB\n// Dirty: 268 kB\n// Writeback: 0 kB\n// AnonPages: 11568832 kB\n// Mapped: 719992 kB\n// Shmem: 743272 kB\n// Slab: 335716 kB\n// SReclaimable: 256364 kB\n// SUnreclaim: 79352 kB\n\nfunction mem(callback) {\n\n  return new Promise((resolve) => {\n    process.nextTick(() => {\n\n      let result = {\n        total: os.totalmem(),\n        free: os.freemem(),\n        used: os.totalmem() - os.freemem(),\n\n        active: os.totalmem() - os.freemem(),     // temporarily (fallback)\n        available: os.freemem(),                  // temporarily (fallback)\n        buffers: 0,\n        cached: 0,\n        slab: 0,\n        buffcache: 0,\n\n        swaptotal: 0,\n        swapused: 0,\n        swapfree: 0,\n        writeback: null,\n        dirty: null\n      };\n\n      if (_linux) {\n        try {\n          fs.readFile('/proc/meminfo', function (error, stdout) {\n            if (!error) {\n              const lines = stdout.toString().split('\\n');\n              result.total = parseInt(util.getValue(lines, 'memtotal'), 10);\n              result.total = result.total ? result.total * 1024 : os.totalmem();\n              result.free = parseInt(util.getValue(lines, 'memfree'), 10);\n              result.free = result.free ? result.free * 1024 : os.freemem();\n              result.used = result.total - result.free;\n\n              result.buffers = parseInt(util.getValue(lines, 'buffers'), 10);\n              result.buffers = result.buffers ? result.buffers * 1024 : 0;\n              result.cached = parseInt(util.getValue(lines, 'cached'), 10);\n              result.cached = result.cached ? result.cached * 1024 : 0;\n              result.slab = parseInt(util.getValue(lines, 'slab'), 10);\n              result.slab = result.slab ? result.slab * 1024 : 0;\n              result.buffcache = result.buffers + result.cached + result.slab;\n\n              let available = parseInt(util.getValue(lines, 'memavailable'), 10);\n              result.available = available ? available * 1024 : result.free + result.buffcache;\n              result.active = result.total - result.available;\n\n              result.swaptotal = parseInt(util.getValue(lines, 'swaptotal'), 10);\n              result.swaptotal = result.swaptotal ? result.swaptotal * 1024 : 0;\n              result.swapfree = parseInt(util.getValue(lines, 'swapfree'), 10);\n              result.swapfree = result.swapfree ? result.swapfree * 1024 : 0;\n              result.swapused = result.swaptotal - result.swapfree;\n              result.writeback = parseInt(util.getValue(lines, 'writeback'), 10);\n              result.writeback = result.writeback ? result.writeback * 1024 : 0;\n              result.dirty = parseInt(util.getValue(lines, 'dirty'), 10);\n              result.dirty = result.dirty ? result.dirty * 1024 : 0;\n            }\n            if (callback) { callback(result); }\n            resolve(result);\n          });\n        } catch (e) {\n          if (callback) { callback(result); }\n          resolve(result);\n        }\n      }\n      if (_freebsd || _openbsd || _netbsd) {\n        try {\n          exec('/sbin/sysctl hw.realmem hw.physmem vm.stats.vm.v_page_count vm.stats.vm.v_wire_count vm.stats.vm.v_active_count vm.stats.vm.v_inactive_count vm.stats.vm.v_cache_count vm.stats.vm.v_free_count vm.stats.vm.v_page_size', function (error, stdout) {\n            if (!error) {\n              let lines = stdout.toString().split('\\n');\n              const pagesize = parseInt(util.getValue(lines, 'vm.stats.vm.v_page_size'), 10);\n              const inactive = parseInt(util.getValue(lines, 'vm.stats.vm.v_inactive_count'), 10) * pagesize;\n              const cache = parseInt(util.getValue(lines, 'vm.stats.vm.v_cache_count'), 10) * pagesize;\n\n              result.total = parseInt(util.getValue(lines, 'hw.realmem'), 10);\n              if (isNaN(result.total)) { result.total = parseInt(util.getValue(lines, 'hw.physmem'), 10); }\n              result.free = parseInt(util.getValue(lines, 'vm.stats.vm.v_free_count'), 10) * pagesize;\n              result.buffcache = inactive + cache;\n              result.available = result.buffcache + result.free;\n              result.active = result.total - result.free - result.buffcache;\n\n              result.swaptotal = 0;\n              result.swapfree = 0;\n              result.swapused = 0;\n\n            }\n            if (callback) { callback(result); }\n            resolve(result);\n          });\n        } catch (e) {\n          if (callback) { callback(result); }\n          resolve(result);\n        }\n      }\n      if (_sunos) {\n        if (callback) { callback(result); }\n        resolve(result);\n      }\n      if (_darwin) {\n        let pageSize = 4096;\n        try {\n          let sysPpageSize = util.toInt(execSync('sysctl -n vm.pagesize').toString());\n          pageSize = sysPpageSize || pageSize;\n        } catch (e) {\n          util.noop();\n        }\n        try {\n          exec('vm_stat 2>/dev/null | grep \"Pages active\"', function (error, stdout) {\n            if (!error) {\n              let lines = stdout.toString().split('\\n');\n\n              result.active = parseInt(lines[0].split(':')[1], 10) * pageSize;\n              result.buffcache = result.used - result.active;\n              result.available = result.free + result.buffcache;\n            }\n            exec('sysctl -n vm.swapusage 2>/dev/null', function (error, stdout) {\n              if (!error) {\n                let lines = stdout.toString().split('\\n');\n                if (lines.length > 0) {\n                  let firstline = lines[0].replace(/,/g, '.').replace(/M/g, '');\n                  let lineArray = firstline.trim().split('  ');\n                  lineArray.forEach(line => {\n                    if (line.toLowerCase().indexOf('total') !== -1) { result.swaptotal = parseFloat(line.split('=')[1].trim()) * 1024 * 1024; }\n                    if (line.toLowerCase().indexOf('used') !== -1) { result.swapused = parseFloat(line.split('=')[1].trim()) * 1024 * 1024; }\n                    if (line.toLowerCase().indexOf('free') !== -1) { result.swapfree = parseFloat(line.split('=')[1].trim()) * 1024 * 1024; }\n                  });\n                }\n              }\n              if (callback) { callback(result); }\n              resolve(result);\n            });\n          });\n        } catch (e) {\n          if (callback) { callback(result); }\n          resolve(result);\n        }\n      }\n      if (_windows) {\n        let swaptotal = 0;\n        let swapused = 0;\n        try {\n          util.powerShell('Get-CimInstance Win32_PageFileUsage | Select AllocatedBaseSize, CurrentUsage').then((stdout, error) => {\n            if (!error) {\n              let lines = stdout.split('\\r\\n').filter(line => line.trim() !== '').filter((line, idx) => idx > 0);\n              lines.forEach(function (line) {\n                if (line !== '') {\n                  line = line.trim().split(/\\s\\s+/);\n                  swaptotal = swaptotal + (parseInt(line[0], 10) || 0);\n                  swapused = swapused + (parseInt(line[1], 10) || 0);\n                }\n              });\n            }\n            result.swaptotal = swaptotal * 1024 * 1024;\n            result.swapused = swapused * 1024 * 1024;\n            result.swapfree = result.swaptotal - result.swapused;\n\n            if (callback) { callback(result); }\n            resolve(result);\n          });\n        } catch (e) {\n          if (callback) { callback(result); }\n          resolve(result);\n        }\n      }\n    });\n  });\n}\n\nexports.mem = mem;\n\nfunction memLayout(callback) {\n\n  function getManufacturerDarwin(manId) {\n    if ({}.hasOwnProperty.call(OSX_RAM_manufacturers, manId)) {\n      return (OSX_RAM_manufacturers[manId]);\n    }\n    return manId;\n  }\n\n  function getManufacturerLinux(manId) {\n    const manIdSearch = manId.replace('0x', '').toUpperCase();\n    if (manIdSearch.length === 4 && {}.hasOwnProperty.call(LINUX_RAM_manufacturers, manIdSearch)) {\n      return (LINUX_RAM_manufacturers[manIdSearch]);\n    }\n    return manId;\n  }\n\n  return new Promise((resolve) => {\n    process.nextTick(() => {\n\n      let result = [];\n\n      if (_linux || _freebsd || _openbsd || _netbsd) {\n        exec('export LC_ALL=C; dmidecode -t memory 2>/dev/null | grep -iE \"Size:|Type|Speed|Manufacturer|Form Factor|Locator|Memory Device|Serial Number|Voltage|Part Number\"; unset LC_ALL', function (error, stdout) {\n          if (!error) {\n            let devices = stdout.toString().split('Memory Device');\n            devices.shift();\n            devices.forEach(function (device) {\n              let lines = device.split('\\n');\n              const sizeString = util.getValue(lines, 'Size');\n              const size = sizeString.indexOf('GB') >= 0 ? parseInt(sizeString, 10) * 1024 * 1024 * 1024 : parseInt(sizeString, 10) * 1024 * 1024;\n              let bank = util.getValue(lines, 'Bank Locator');\n              if (bank.toLowerCase().indexOf('bad') >= 0) {\n                bank = '';\n              }\n              if (parseInt(util.getValue(lines, 'Size'), 10) > 0) {\n                const totalWidth = util.toInt(util.getValue(lines, 'Total Width'));\n                const dataWidth = util.toInt(util.getValue(lines, 'Data Width'));\n                result.push({\n                  size,\n                  bank,\n                  type: util.getValue(lines, 'Type:'),\n                  ecc: dataWidth && totalWidth ? totalWidth > dataWidth : false,\n                  clockSpeed: (util.getValue(lines, 'Configured Clock Speed:') ? parseInt(util.getValue(lines, 'Configured Clock Speed:'), 10) : (util.getValue(lines, 'Speed:') ? parseInt(util.getValue(lines, 'Speed:'), 10) : null)),\n                  formFactor: util.getValue(lines, 'Form Factor:'),\n                  manufacturer: getManufacturerLinux(util.getValue(lines, 'Manufacturer:')),\n                  partNum: util.getValue(lines, 'Part Number:'),\n                  serialNum: util.getValue(lines, 'Serial Number:'),\n                  voltageConfigured: parseFloat(util.getValue(lines, 'Configured Voltage:')) || null,\n                  voltageMin: parseFloat(util.getValue(lines, 'Minimum Voltage:')) || null,\n                  voltageMax: parseFloat(util.getValue(lines, 'Maximum Voltage:')) || null,\n                });\n              } else {\n                result.push({\n                  size: 0,\n                  bank,\n                  type: 'Empty',\n                  ecc: null,\n                  clockSpeed: 0,\n                  formFactor: util.getValue(lines, 'Form Factor:'),\n                  partNum: '',\n                  serialNum: '',\n                  voltageConfigured: null,\n                  voltageMin: null,\n                  voltageMax: null,\n                });\n              }\n            });\n          }\n          if (!result.length) {\n            result.push({\n              size: os.totalmem(),\n              bank: '',\n              type: '',\n              ecc: null,\n              clockSpeed: 0,\n              formFactor: '',\n              partNum: '',\n              serialNum: '',\n              voltageConfigured: null,\n              voltageMin: null,\n              voltageMax: null,\n            });\n\n            // Try Raspberry PI\n            try {\n              let stdout = execSync('cat /proc/cpuinfo 2>/dev/null');\n              let lines = stdout.toString().split('\\n');\n              let model = util.getValue(lines, 'hardware', ':', true).toUpperCase();\n              let version = util.getValue(lines, 'revision', ':', true).toLowerCase();\n\n              if (model === 'BCM2835' || model === 'BCM2708' || model === 'BCM2709' || model === 'BCM2835' || model === 'BCM2837') {\n\n                const clockSpeed = {\n                  '0': 400,\n                  '1': 450,\n                  '2': 450,\n                  '3': 3200\n                };\n                result[0].type = 'LPDDR2';\n                result[0].type = version && version[2] && version[2] === '3' ? 'LPDDR4' : result[0].type;\n                result[0].ecc = false;\n                result[0].clockSpeed = version && version[2] && clockSpeed[version[2]] || 400;\n                result[0].clockSpeed = version && version[4] && version[4] === 'd' ? 500 : result[0].clockSpeed;\n                result[0].formFactor = 'SoC';\n\n                stdout = execSync('vcgencmd get_config sdram_freq 2>/dev/null');\n                lines = stdout.toString().split('\\n');\n                let freq = parseInt(util.getValue(lines, 'sdram_freq', '=', true), 10) || 0;\n                if (freq) {\n                  result[0].clockSpeed = freq;\n                }\n\n                stdout = execSync('vcgencmd measure_volts sdram_p 2>/dev/null');\n                lines = stdout.toString().split('\\n');\n                let voltage = parseFloat(util.getValue(lines, 'volt', '=', true)) || 0;\n                if (voltage) {\n                  result[0].voltageConfigured = voltage;\n                  result[0].voltageMin = voltage;\n                  result[0].voltageMax = voltage;\n                }\n              }\n            } catch (e) {\n              util.noop();\n            }\n\n          }\n          if (callback) { callback(result); }\n          resolve(result);\n        });\n      }\n\n      if (_darwin) {\n        exec('system_profiler SPMemoryDataType', function (error, stdout) {\n          if (!error) {\n            const allLines = stdout.toString().split('\\n');\n            const eccStatus = util.getValue(allLines, 'ecc', ':', true).toLowerCase();\n            let devices = stdout.toString().split('        BANK ');\n            let hasBank = true;\n            if (devices.length === 1) {\n              devices = stdout.toString().split('        DIMM');\n              hasBank = false;\n            }\n            devices.shift();\n            devices.forEach(function (device) {\n              let lines = device.split('\\n');\n              const bank = (hasBank ? 'BANK ' : 'DIMM') + lines[0].trim().split('/')[0];\n              const size = parseInt(util.getValue(lines, '          Size'));\n              if (size) {\n                result.push({\n                  size: size * 1024 * 1024 * 1024,\n                  bank: bank,\n                  type: util.getValue(lines, '          Type:'),\n                  ecc: eccStatus ? eccStatus === 'enabled' : null,\n                  clockSpeed: parseInt(util.getValue(lines, '          Speed:'), 10),\n                  formFactor: '',\n                  manufacturer: getManufacturerDarwin(util.getValue(lines, '          Manufacturer:')),\n                  partNum: util.getValue(lines, '          Part Number:'),\n                  serialNum: util.getValue(lines, '          Serial Number:'),\n                  voltageConfigured: null,\n                  voltageMin: null,\n                  voltageMax: null,\n                });\n              } else {\n                result.push({\n                  size: 0,\n                  bank: bank,\n                  type: 'Empty',\n                  ecc: null,\n                  clockSpeed: 0,\n                  formFactor: '',\n                  manufacturer: '',\n                  partNum: '',\n                  serialNum: '',\n                  voltageConfigured: null,\n                  voltageMin: null,\n                  voltageMax: null,\n                });\n              }\n            });\n          }\n          if (!result.length) {\n            const lines = stdout.toString().split('\\n');\n            const size = parseInt(util.getValue(lines, '      Memory:'));\n            const type = util.getValue(lines, '      Type:');\n            if (size && type) {\n              result.push({\n                size: size * 1024 * 1024 * 1024,\n                bank: '0',\n                type,\n                ecc: false,\n                clockSpeed: 0,\n                formFactor: '',\n                manufacturer: 'Apple',\n                partNum: '',\n                serialNum: '',\n                voltageConfigured: null,\n                voltageMin: null,\n                voltageMax: null,\n              });\n\n            }\n          }\n          if (callback) { callback(result); }\n          resolve(result);\n        });\n      }\n      if (_sunos) {\n        if (callback) { callback(result); }\n        resolve(result);\n      }\n      if (_windows) {\n        // https://www.dmtf.org/sites/default/files/standards/documents/DSP0134_3.4.0a.pdf\n        const memoryTypes = 'Unknown|Other|DRAM|Synchronous DRAM|Cache DRAM|EDO|EDRAM|VRAM|SRAM|RAM|ROM|FLASH|EEPROM|FEPROM|EPROM|CDRAM|3DRAM|SDRAM|SGRAM|RDRAM|DDR|DDR2|DDR2 FB-DIMM|Reserved|DDR3|FBD2|DDR4|LPDDR|LPDDR2|LPDDR3|LPDDR4|Logical non-volatile device|HBM|HBM2|DDR5|LPDDR5'.split('|');\n        const FormFactors = 'Unknown|Other|SIP|DIP|ZIP|SOJ|Proprietary|SIMM|DIMM|TSOP|PGA|RIMM|SODIMM|SRIMM|SMD|SSMP|QFP|TQFP|SOIC|LCC|PLCC|BGA|FPBGA|LGA'.split('|');\n\n        try {\n          util.powerShell('Get-CimInstance Win32_PhysicalMemory | select DataWidth,TotalWidth,Capacity,BankLabel,MemoryType,SMBIOSMemoryType,ConfiguredClockSpeed,FormFactor,Manufacturer,PartNumber,SerialNumber,ConfiguredVoltage,MinVoltage,MaxVoltage,Tag | fl').then((stdout, error) => {\n            if (!error) {\n              let devices = stdout.toString().split(/\\n\\s*\\n/);\n              devices.shift();\n              devices.forEach(function (device) {\n                let lines = device.split('\\r\\n');\n                const dataWidth = util.toInt(util.getValue(lines, 'DataWidth', ':'));\n                const totalWidth = util.toInt(util.getValue(lines, 'TotalWidth', ':'));\n                const size = parseInt(util.getValue(lines, 'Capacity', ':'), 10) || 0;\n                const tag = util.getValue(lines, 'Tag', ':');\n                const tagInt = util.splitByNumber(tag);\n                if (size) {\n                  result.push({\n                    size,\n                    bank: util.getValue(lines, 'BankLabel', ':') + (tagInt[1] ? '/' + tagInt[1] : ''), // BankLabel\n                    type: memoryTypes[parseInt(util.getValue(lines, 'MemoryType', ':'), 10) || parseInt(util.getValue(lines, 'SMBIOSMemoryType', ':'), 10)],\n                    ecc: dataWidth && totalWidth ? totalWidth > dataWidth : false,\n                    clockSpeed: parseInt(util.getValue(lines, 'ConfiguredClockSpeed', ':'), 10) || parseInt(util.getValue(lines, 'Speed', ':'), 10) || 0,\n                    formFactor: FormFactors[parseInt(util.getValue(lines, 'FormFactor', ':'), 10) || 0],\n                    manufacturer: util.getValue(lines, 'Manufacturer', ':'),\n                    partNum: util.getValue(lines, 'PartNumber', ':'),\n                    serialNum: util.getValue(lines, 'SerialNumber', ':'),\n                    voltageConfigured: (parseInt(util.getValue(lines, 'ConfiguredVoltage', ':'), 10) || 0) / 1000.0,\n                    voltageMin: (parseInt(util.getValue(lines, 'MinVoltage', ':'), 10) || 0) / 1000.0,\n                    voltageMax: (parseInt(util.getValue(lines, 'MaxVoltage', ':'), 10) || 0) / 1000.0,\n                  });\n                }\n              });\n            }\n            if (callback) { callback(result); }\n            resolve(result);\n          });\n        } catch (e) {\n          if (callback) { callback(result); }\n          resolve(result);\n        }\n      }\n    });\n  });\n}\n\nexports.memLayout = memLayout;\n\n", "'use strict';\n// @ts-check;\n// ==================================================================================\n// battery.js\n// ----------------------------------------------------------------------------------\n// Description:   System Information - library\n//                for Node.js\n// Copyright:     (c) 2014 - 2024\n// Author:        Sebastian Hildebrandt\n// ----------------------------------------------------------------------------------\n// License:       MIT\n// ==================================================================================\n// 6. Battery\n// ----------------------------------------------------------------------------------\n\nconst exec = require('child_process').exec;\nconst fs = require('fs');\nconst util = require('./util');\n\nlet _platform = process.platform;\n\nconst _linux = (_platform === 'linux' || _platform === 'android');\nconst _darwin = (_platform === 'darwin');\nconst _windows = (_platform === 'win32');\nconst _freebsd = (_platform === 'freebsd');\nconst _openbsd = (_platform === 'openbsd');\nconst _netbsd = (_platform === 'netbsd');\nconst _sunos = (_platform === 'sunos');\n\nfunction parseWinBatteryPart(lines, designedCapacity, fullChargeCapacity) {\n  const result = {};\n  let status = util.getValue(lines, 'BatteryStatus', ':').trim();\n  // 1 = \"Discharging\"\n  // 2 = \"On A/C\"\n  // 3 = \"Fully Charged\"\n  // 4 = \"Low\"\n  // 5 = \"Critical\"\n  // 6 = \"Charging\"\n  // 7 = \"Charging High\"\n  // 8 = \"Charging Low\"\n  // 9 = \"Charging Critical\"\n  // 10 = \"Undefined\"\n  // 11 = \"Partially Charged\"\n  if (status >= 0) {\n    const statusValue = status ? parseInt(status) : 0;\n    result.status = statusValue;\n    result.hasBattery = true;\n    result.maxCapacity = fullChargeCapacity || parseInt(util.getValue(lines, 'DesignCapacity', ':') || 0);\n    result.designedCapacity = parseInt(util.getValue(lines, 'DesignCapacity', ':') || designedCapacity);\n    result.voltage = parseInt(util.getValue(lines, 'DesignVoltage', ':') || 0) / 1000.0;\n    result.capacityUnit = 'mWh';\n    result.percent = parseInt(util.getValue(lines, 'EstimatedChargeRemaining', ':') || 0);\n    result.currentCapacity = parseInt(result.maxCapacity * result.percent / 100);\n    result.isCharging = (statusValue >= 6 && statusValue <= 9) || statusValue === 11 || ((statusValue !== 3) && (statusValue !== 1) && result.percent < 100);\n    result.acConnected = result.isCharging || statusValue === 2;\n    result.model = util.getValue(lines, 'DeviceID', ':');\n  } else {\n    result.status = -1;\n  }\n\n  return result;\n}\n\nmodule.exports = function (callback) {\n\n  return new Promise((resolve) => {\n    process.nextTick(() => {\n      let result = {\n        hasBattery: false,\n        cycleCount: 0,\n        isCharging: false,\n        designedCapacity: 0,\n        maxCapacity: 0,\n        currentCapacity: 0,\n        voltage: 0,\n        capacityUnit: '',\n        percent: 0,\n        timeRemaining: null,\n        acConnected: true,\n        type: '',\n        model: '',\n        manufacturer: '',\n        serial: ''\n      };\n\n      if (_linux) {\n        let battery_path = '';\n        if (fs.existsSync('/sys/class/power_supply/BAT1/uevent')) {\n          battery_path = '/sys/class/power_supply/BAT1/';\n        } else if (fs.existsSync('/sys/class/power_supply/BAT0/uevent')) {\n          battery_path = '/sys/class/power_supply/BAT0/';\n        }\n\n        let acConnected = false;\n        let acPath = '';\n        if (fs.existsSync('/sys/class/power_supply/AC/online')) {\n          acPath = '/sys/class/power_supply/AC/online';\n        } else if (fs.existsSync('/sys/class/power_supply/AC0/online')) {\n          acPath = '/sys/class/power_supply/AC0/online';\n        }\n\n        if (acPath) {\n          const file = fs.readFileSync(acPath);\n          acConnected = file.toString().trim() === '1';\n        }\n\n        if (battery_path) {\n          fs.readFile(battery_path + 'uevent', function (error, stdout) {\n            if (!error) {\n              let lines = stdout.toString().split('\\n');\n\n              result.isCharging = (util.getValue(lines, 'POWER_SUPPLY_STATUS', '=').toLowerCase() === 'charging');\n              result.acConnected = acConnected || result.isCharging;\n              result.voltage = parseInt('0' + util.getValue(lines, 'POWER_SUPPLY_VOLTAGE_NOW', '='), 10) / 1000000.0;\n              result.capacityUnit = result.voltage ? 'mWh' : 'mAh';\n              result.cycleCount = parseInt('0' + util.getValue(lines, 'POWER_SUPPLY_CYCLE_COUNT', '='), 10);\n              result.maxCapacity = Math.round(parseInt('0' + util.getValue(lines, 'POWER_SUPPLY_CHARGE_FULL', '=', true, true), 10) / 1000.0 * (result.voltage || 1));\n              const desingedMinVoltage = parseInt('0' + util.getValue(lines, 'POWER_SUPPLY_VOLTAGE_MIN_DESIGN', '='), 10) / 1000000.0;\n              result.designedCapacity = Math.round(parseInt('0' + util.getValue(lines, 'POWER_SUPPLY_CHARGE_FULL_DESIGN', '=', true, true), 10) / 1000.0 * (desingedMinVoltage || result.voltage || 1));\n              result.currentCapacity = Math.round(parseInt('0' + util.getValue(lines, 'POWER_SUPPLY_CHARGE_NOW', '='), 10) / 1000.0 * (result.voltage || 1));\n              if (!result.maxCapacity) {\n                result.maxCapacity = parseInt('0' + util.getValue(lines, 'POWER_SUPPLY_ENERGY_FULL', '=', true, true), 10) / 1000.0;\n                result.designedCapacity = parseInt('0' + util.getValue(lines, 'POWER_SUPPLY_ENERGY_FULL_DESIGN', '=', true, true), 10) / 1000.0 | result.maxCapacity;\n                result.currentCapacity = parseInt('0' + util.getValue(lines, 'POWER_SUPPLY_ENERGY_NOW', '='), 10) / 1000.0;\n              }\n              const percent = util.getValue(lines, 'POWER_SUPPLY_CAPACITY', '=');\n              const energy = parseInt('0' + util.getValue(lines, 'POWER_SUPPLY_ENERGY_NOW', '='), 10);\n              const power = parseInt('0' + util.getValue(lines, 'POWER_SUPPLY_POWER_NOW', '='), 10);\n              const current = parseInt('0' + util.getValue(lines, 'POWER_SUPPLY_CURRENT_NOW', '='), 10);\n              const charge = parseInt('0' + util.getValue(lines, 'POWER_SUPPLY_CHARGE_NOW', '='), 10);\n\n              result.percent = parseInt('0' + percent, 10);\n              if (result.maxCapacity && result.currentCapacity) {\n                result.hasBattery = true;\n                if (!percent) {\n                  result.percent = 100.0 * result.currentCapacity / result.maxCapacity;\n                }\n              }\n              if (result.isCharging) {\n                result.hasBattery = true;\n              }\n              if (energy && power) {\n                result.timeRemaining = Math.floor(energy / power * 60);\n              } else if (current && charge) {\n                result.timeRemaining = Math.floor(charge / current * 60);\n              } else if (current && result.currentCapacity) {\n                result.timeRemaining = Math.floor(result.currentCapacity / current * 60);\n              }\n              result.type = util.getValue(lines, 'POWER_SUPPLY_TECHNOLOGY', '=');\n              result.model = util.getValue(lines, 'POWER_SUPPLY_MODEL_NAME', '=');\n              result.manufacturer = util.getValue(lines, 'POWER_SUPPLY_MANUFACTURER', '=');\n              result.serial = util.getValue(lines, 'POWER_SUPPLY_SERIAL_NUMBER', '=');\n              if (callback) { callback(result); }\n              resolve(result);\n            } else {\n              if (callback) { callback(result); }\n              resolve(result);\n            }\n          });\n        } else {\n          if (callback) { callback(result); }\n          resolve(result);\n        }\n      }\n      if (_freebsd || _openbsd || _netbsd) {\n        exec('sysctl -i hw.acpi.battery hw.acpi.acline', function (error, stdout) {\n          let lines = stdout.toString().split('\\n');\n          const batteries = parseInt('0' + util.getValue(lines, 'hw.acpi.battery.units'), 10);\n          const percent = parseInt('0' + util.getValue(lines, 'hw.acpi.battery.life'), 10);\n          result.hasBattery = (batteries > 0);\n          result.cycleCount = null;\n          result.isCharging = util.getValue(lines, 'hw.acpi.acline') !== '1';\n          result.acConnected = result.isCharging;\n          result.maxCapacity = null;\n          result.currentCapacity = null;\n          result.capacityUnit = 'unknown';\n          result.percent = batteries ? percent : null;\n          if (callback) { callback(result); }\n          resolve(result);\n        });\n      }\n\n      if (_darwin) {\n        exec('ioreg -n AppleSmartBattery -r | egrep \"CycleCount|IsCharging|DesignCapacity|MaxCapacity|CurrentCapacity|BatterySerialNumber|TimeRemaining|Voltage\"; pmset -g batt | grep %', function (error, stdout) {\n          if (stdout) {\n            let lines = stdout.toString().replace(/ +/g, '').replace(/\"+/g, '').replace(/-/g, '').split('\\n');\n            result.cycleCount = parseInt('0' + util.getValue(lines, 'cyclecount', '='), 10);\n            result.voltage = parseInt('0' + util.getValue(lines, 'voltage', '='), 10) / 1000.0;\n            result.capacityUnit = result.voltage ? 'mWh' : 'mAh';\n            result.maxCapacity = Math.round(parseInt('0' + util.getValue(lines, 'applerawmaxcapacity', '='), 10) * (result.voltage || 1));\n            result.currentCapacity = Math.round(parseInt('0' + util.getValue(lines, 'applerawcurrentcapacity', '='), 10) * (result.voltage || 1));\n            result.designedCapacity = Math.round(parseInt('0' + util.getValue(lines, 'DesignCapacity', '='), 10) * (result.voltage || 1));\n            result.manufacturer = 'Apple';\n            result.serial = util.getValue(lines, 'BatterySerialNumber', '=');\n            let percent = null;\n            const line = util.getValue(lines, 'internal', 'Battery');\n            let parts = line.split(';');\n            if (parts && parts[0]) {\n              let parts2 = parts[0].split('\\t');\n              if (parts2 && parts2[1]) {\n                percent = parseFloat(parts2[1].trim().replace(/%/g, ''));\n              }\n            }\n            if (parts && parts[1]) {\n              result.isCharging = (parts[1].trim() === 'charging');\n              result.acConnected = (parts[1].trim() !== 'discharging');\n            } else {\n              result.isCharging = util.getValue(lines, 'ischarging', '=').toLowerCase() === 'yes';\n              result.acConnected = result.isCharging;\n            }\n            if (result.maxCapacity && result.currentCapacity) {\n              result.hasBattery = true;\n              result.type = 'Li-ion';\n              result.percent = percent !== null ? percent : Math.round(100.0 * result.currentCapacity / result.maxCapacity);\n              if (!result.isCharging) {\n                result.timeRemaining = parseInt('0' + util.getValue(lines, 'TimeRemaining', '='), 10);\n              }\n            }\n          }\n          if (callback) { callback(result); }\n          resolve(result);\n        });\n      }\n      if (_sunos) {\n        if (callback) { callback(result); }\n        resolve(result);\n      }\n      if (_windows) {\n        try {\n          const workload = [];\n          workload.push(util.powerShell('Get-CimInstance Win32_Battery | select BatteryStatus, DesignCapacity, DesignVoltage, EstimatedChargeRemaining, DeviceID | fl'));\n          workload.push(util.powerShell('(Get-WmiObject -Class BatteryStaticData -Namespace ROOT/WMI).DesignedCapacity'));\n          workload.push(util.powerShell('(Get-CimInstance -Class BatteryFullChargedCapacity -Namespace ROOT/WMI).FullChargedCapacity'));\n          util.promiseAll(\n            workload\n          ).then((data) => {\n            if (data) {\n              let parts = data.results[0].split(/\\n\\s*\\n/);\n              let batteries = [];\n              const hasValue = value => /\\S/.test(value);\n              for (let i = 0; i < parts.length; i++) {\n                if (hasValue(parts[i]) && (!batteries.length || !hasValue(parts[i - 1]))) {\n                  batteries.push([]);\n                }\n                if (hasValue(parts[i])) {\n                  batteries[batteries.length - 1].push(parts[i]);\n                }\n              }\n              let designCapacities = data.results[1].split('\\r\\n').filter(e => e);\n              let fullChargeCapacities = data.results[2].split('\\r\\n').filter(e => e);\n              if (batteries.length) {\n                let first = false;\n                let additionalBatteries = [];\n                for (let i = 0; i < batteries.length; i++) {\n                  let lines = batteries[i][0].split('\\r\\n');\n                  const designedCapacity = designCapacities && designCapacities.length >= (i + 1) && designCapacities[i] ? util.toInt(designCapacities[i]) : 0;\n                  const fullChargeCapacity = fullChargeCapacities && fullChargeCapacities.length >= (i + 1) && fullChargeCapacities[i] ? util.toInt(fullChargeCapacities[i]) : 0;\n                  const parsed = parseWinBatteryPart(lines, designedCapacity, fullChargeCapacity);\n                  if (!first && parsed.status > 0 && parsed.status !== 10) {\n                    result.hasBattery = parsed.hasBattery;\n                    result.maxCapacity = parsed.maxCapacity;\n                    result.designedCapacity = parsed.designedCapacity;\n                    result.voltage = parsed.voltage;\n                    result.capacityUnit = parsed.capacityUnit;\n                    result.percent = parsed.percent;\n                    result.currentCapacity = parsed.currentCapacity;\n                    result.isCharging = parsed.isCharging;\n                    result.acConnected = parsed.acConnected;\n                    result.model = parsed.model;\n                    first = true;\n                  } else if (parsed.status !== -1) {\n                    additionalBatteries.push(\n                      {\n                        hasBattery: parsed.hasBattery,\n                        maxCapacity: parsed.maxCapacity,\n                        designedCapacity: parsed.designedCapacity,\n                        voltage: parsed.voltage,\n                        capacityUnit: parsed.capacityUnit,\n                        percent: parsed.percent,\n                        currentCapacity: parsed.currentCapacity,\n                        isCharging: parsed.isCharging,\n                        timeRemaining: null,\n                        acConnected: parsed.acConnected,\n                        model: parsed.model,\n                        type: '',\n                        manufacturer: '',\n                        serial: ''\n                      }\n                    );\n                  }\n                }\n                if (!first && additionalBatteries.length) {\n                  result = additionalBatteries[0];\n                  additionalBatteries.shift();\n                }\n                if (additionalBatteries.length) {\n                  result.additionalBatteries = additionalBatteries;\n                }\n              }\n            }\n            if (callback) { callback(result); }\n            resolve(result);\n          });\n        } catch (e) {\n          if (callback) { callback(result); }\n          resolve(result);\n        }\n      }\n    });\n  });\n};\n", "'use strict';\n// @ts-check\n// ==================================================================================\n// graphics.js\n// ----------------------------------------------------------------------------------\n// Description:   System Information - library\n//                for Node.js\n// Copyright:     (c) 2014 - 2024\n// Author:        Sebastian Hildebrandt\n// ----------------------------------------------------------------------------------\n// License:       MIT\n// ==================================================================================\n// 7. Graphics (controller, display)\n// ----------------------------------------------------------------------------------\n\nconst fs = require('fs');\nconst exec = require('child_process').exec;\nconst execSync = require('child_process').execSync;\nconst util = require('./util');\n\nlet _platform = process.platform;\nlet _nvidiaSmiPath = '';\n\nconst _linux = (_platform === 'linux' || _platform === 'android');\nconst _darwin = (_platform === 'darwin');\nconst _windows = (_platform === 'win32');\nconst _freebsd = (_platform === 'freebsd');\nconst _openbsd = (_platform === 'openbsd');\nconst _netbsd = (_platform === 'netbsd');\nconst _sunos = (_platform === 'sunos');\n\nlet _resolutionX = 0;\nlet _resolutionY = 0;\nlet _pixelDepth = 0;\nlet _refreshRate = 0;\n\nconst videoTypes = {\n  '-2': 'UNINITIALIZED',\n  '-1': 'OTHER',\n  '0': 'HD15',\n  '1': 'SVIDEO',\n  '2': 'Composite video',\n  '3': 'Component video',\n  '4': 'DVI',\n  '5': 'HDMI',\n  '6': 'LVDS',\n  '8': 'D_JPN',\n  '9': 'SDI',\n  '10': 'DP',\n  '11': 'DP embedded',\n  '12': 'UDI',\n  '13': 'UDI embedded',\n  '14': 'SDTVDONGLE',\n  '15': 'MIRACAST',\n  '2147483648': 'INTERNAL'\n};\n\nfunction getVendorFromModel(model) {\n  const manufacturers = [\n    { pattern: '^LG.+', manufacturer: 'LG' },\n    { pattern: '^BENQ.+', manufacturer: 'BenQ' },\n    { pattern: '^ASUS.+', manufacturer: 'Asus' },\n    { pattern: '^DELL.+', manufacturer: 'Dell' },\n    { pattern: '^SAMSUNG.+', manufacturer: 'Samsung' },\n    { pattern: '^VIEWSON.+', manufacturer: 'ViewSonic' },\n    { pattern: '^SONY.+', manufacturer: 'Sony' },\n    { pattern: '^ACER.+', manufacturer: 'Acer' },\n    { pattern: '^AOC.+', manufacturer: 'AOC Monitors' },\n    { pattern: '^HP.+', manufacturer: 'HP' },\n    { pattern: '^EIZO.?', manufacturer: 'Eizo' },\n    { pattern: '^PHILIPS.?', manufacturer: 'Philips' },\n    { pattern: '^IIYAMA.?', manufacturer: 'Iiyama' },\n    { pattern: '^SHARP.?', manufacturer: 'Sharp' },\n    { pattern: '^NEC.?', manufacturer: 'NEC' },\n    { pattern: '^LENOVO.?', manufacturer: 'Lenovo' },\n    { pattern: 'COMPAQ.?', manufacturer: 'Compaq' },\n    { pattern: 'APPLE.?', manufacturer: 'Apple' },\n    { pattern: 'INTEL.?', manufacturer: 'Intel' },\n    { pattern: 'AMD.?', manufacturer: 'AMD' },\n    { pattern: 'NVIDIA.?', manufacturer: 'NVDIA' },\n  ];\n\n  let result = '';\n  if (model) {\n    model = model.toUpperCase();\n    manufacturers.forEach((manufacturer) => {\n      const re = RegExp(manufacturer.pattern);\n      if (re.test(model)) { result = manufacturer.manufacturer; }\n    });\n  }\n  return result;\n}\n\nfunction getVendorFromId(id) {\n  const vendors = {\n    '610': 'Apple',\n    '1e6d': 'LG',\n    '10ac': 'DELL',\n    '4dd9': 'Sony',\n    '38a3': 'NEC',\n  };\n  return vendors[id] || '';\n}\n\nfunction vendorToId(str) {\n  let result = '';\n  str = (str || '').toLowerCase();\n  if (str.indexOf('apple') >= 0) { result = '0x05ac'; }\n  else if (str.indexOf('nvidia') >= 0) { result = '0x10de'; }\n  else if (str.indexOf('intel') >= 0) { result = '0x8086'; }\n  else if (str.indexOf('ati') >= 0 || str.indexOf('amd') >= 0) { result = '0x1002'; }\n\n  return result;\n}\n\nfunction getMetalVersion(id) {\n  const families = {\n    'spdisplays_mtlgpufamilymac1': 'mac1',\n    'spdisplays_mtlgpufamilymac2': 'mac2',\n    'spdisplays_mtlgpufamilyapple1': 'apple1',\n    'spdisplays_mtlgpufamilyapple2': 'apple2',\n    'spdisplays_mtlgpufamilyapple3': 'apple3',\n    'spdisplays_mtlgpufamilyapple4': 'apple4',\n    'spdisplays_mtlgpufamilyapple5': 'apple5',\n    'spdisplays_mtlgpufamilyapple6': 'apple6',\n    'spdisplays_mtlgpufamilyapple7': 'apple7',\n    'spdisplays_metalfeaturesetfamily11': 'family1_v1',\n    'spdisplays_metalfeaturesetfamily12': 'family1_v2',\n    'spdisplays_metalfeaturesetfamily13': 'family1_v3',\n    'spdisplays_metalfeaturesetfamily14': 'family1_v4',\n    'spdisplays_metalfeaturesetfamily21': 'family2_v1'\n  };\n  return families[id] || '';\n}\n\nfunction graphics(callback) {\n\n  function parseLinesDarwin(graphicsArr) {\n    const res = {\n      controllers: [],\n      displays: []\n    };\n    try {\n      graphicsArr.forEach(function (item) {\n        // controllers\n        const bus = ((item.sppci_bus || '').indexOf('builtin') > -1 ? 'Built-In' : ((item.sppci_bus || '').indexOf('pcie') > -1 ? 'PCIe' : ''));\n        const vram = (parseInt((item.spdisplays_vram || ''), 10) || 0) * (((item.spdisplays_vram || '').indexOf('GB') > -1) ? 1024 : 1);\n        const vramDyn = (parseInt((item.spdisplays_vram_shared || ''), 10) || 0) * (((item.spdisplays_vram_shared || '').indexOf('GB') > -1) ? 1024 : 1);\n        let metalVersion = getMetalVersion(item.spdisplays_metal || item.spdisplays_metalfamily || '');\n        res.controllers.push({\n          vendor: getVendorFromModel(item.spdisplays_vendor || '') || item.spdisplays_vendor || '',\n          model: item.sppci_model || '',\n          bus,\n          vramDynamic: bus === 'Built-In',\n          vram: vram || vramDyn || null,\n          deviceId: item['spdisplays_device-id'] || '',\n          vendorId: item['spdisplays_vendor-id'] || vendorToId((item['spdisplays_vendor'] || '') + (item.sppci_model || '')),\n          external: (item.sppci_device_type === 'spdisplays_egpu'),\n          cores: item['sppci_cores'] || null,\n          metalVersion\n        });\n\n        // displays\n        if (item.spdisplays_ndrvs && item.spdisplays_ndrvs.length) {\n          item.spdisplays_ndrvs.forEach(function (displayItem) {\n            const connectionType = displayItem['spdisplays_connection_type'] || '';\n            const currentResolutionParts = (displayItem['_spdisplays_resolution'] || '').split('@');\n            const currentResolution = currentResolutionParts[0].split('x');\n            const pixelParts = (displayItem['_spdisplays_pixels'] || '').split('x');\n            const pixelDepthString = displayItem['spdisplays_depth'] || '';\n            const serial = displayItem['_spdisplays_display-serial-number'] || displayItem['_spdisplays_display-serial-number2'] || null;\n            res.displays.push({\n              vendor: getVendorFromId(displayItem['_spdisplays_display-vendor-id'] || '') || getVendorFromModel(displayItem['_name'] || ''),\n              vendorId: displayItem['_spdisplays_display-vendor-id'] || '',\n              model: displayItem['_name'] || '',\n              productionYear: displayItem['_spdisplays_display-year'] || null,\n              serial: serial !== '0' ? serial : null,\n              displayId: displayItem['_spdisplays_displayID'] || null,\n              main: displayItem['spdisplays_main'] ? displayItem['spdisplays_main'] === 'spdisplays_yes' : false,\n              builtin: (displayItem['spdisplays_display_type'] || '').indexOf('built-in') > -1,\n              connection: ((connectionType.indexOf('_internal') > -1) ? 'Internal' : ((connectionType.indexOf('_displayport') > -1) ? 'Display Port' : ((connectionType.indexOf('_hdmi') > -1) ? 'HDMI' : null))),\n              sizeX: null,\n              sizeY: null,\n              pixelDepth: (pixelDepthString === 'CGSThirtyBitColor' ? 30 : (pixelDepthString === 'CGSThirtytwoBitColor' ? 32 : (pixelDepthString === 'CGSTwentyfourBitColor' ? 24 : null))),\n              resolutionX: pixelParts.length > 1 ? parseInt(pixelParts[0], 10) : null,\n              resolutionY: pixelParts.length > 1 ? parseInt(pixelParts[1], 10) : null,\n              currentResX: currentResolution.length > 1 ? parseInt(currentResolution[0], 10) : null,\n              currentResY: currentResolution.length > 1 ? parseInt(currentResolution[1], 10) : null,\n              positionX: 0,\n              positionY: 0,\n              currentRefreshRate: currentResolutionParts.length > 1 ? parseInt(currentResolutionParts[1], 10) : null,\n\n            });\n          });\n        }\n      });\n      return res;\n    } catch (e) {\n      return res;\n    }\n  }\n\n  function parseLinesLinuxControllers(lines) {\n    let controllers = [];\n    let currentController = {\n      vendor: '',\n      subVendor: '',\n      model: '',\n      bus: '',\n      busAddress: '',\n      vram: null,\n      vramDynamic: false,\n      pciID: ''\n    };\n    let isGraphicsController = false;\n    // PCI bus IDs\n    let pciIDs = [];\n    try {\n      pciIDs = execSync('export LC_ALL=C; dmidecode -t 9 2>/dev/null; unset LC_ALL | grep \"Bus Address: \"').toString().split('\\n');\n      for (let i = 0; i < pciIDs.length; i++) {\n        pciIDs[i] = pciIDs[i].replace('Bus Address:', '').replace('0000:', '').trim();\n      }\n      pciIDs = pciIDs.filter(function (el) {\n        return el != null && el;\n      });\n    } catch (e) {\n      util.noop();\n    }\n    let i = 1;\n    lines.forEach((line) => {\n      let subsystem = '';\n      if (i < lines.length && lines[i]) {   // get next line;\n        subsystem = lines[i];\n        if (subsystem.indexOf(':') > 0) {\n          subsystem = subsystem.split(':')[1];\n        }\n      }\n      if ('' !== line.trim()) {\n        if (' ' !== line[0] && '\\t' !== line[0]) {        // first line of new entry\n          let isExternal = (pciIDs.indexOf(line.split(' ')[0]) >= 0);\n          let vgapos = line.toLowerCase().indexOf(' vga ');\n          let _3dcontrollerpos = line.toLowerCase().indexOf('3d controller');\n          if (vgapos !== -1 || _3dcontrollerpos !== -1) {         // VGA\n            if (_3dcontrollerpos !== -1 && vgapos === -1) {\n              vgapos = _3dcontrollerpos;\n            }\n            if (currentController.vendor || currentController.model || currentController.bus || currentController.vram !== null || currentController.vramDynamic) { // already a controller found\n              controllers.push(currentController);\n              currentController = {\n                vendor: '',\n                model: '',\n                bus: '',\n                busAddress: '',\n                vram: null,\n                vramDynamic: false,\n              };\n            }\n\n            const pciIDCandidate = line.split(' ')[0];\n            if (/[\\da-fA-F]{2}:[\\da-fA-F]{2}\\.[\\da-fA-F]/.test(pciIDCandidate)) {\n              currentController.busAddress = pciIDCandidate;\n            }\n            isGraphicsController = true;\n            let endpos = line.search(/\\[[0-9a-f]{4}:[0-9a-f]{4}]|$/);\n            let parts = line.substr(vgapos, endpos - vgapos).split(':');\n            currentController.busAddress = line.substr(0, vgapos).trim();\n            if (parts.length > 1) {\n              parts[1] = parts[1].trim();\n              if (parts[1].toLowerCase().indexOf('corporation') >= 0) {\n                currentController.vendor = parts[1].substr(0, parts[1].toLowerCase().indexOf('corporation') + 11).trim();\n                currentController.model = parts[1].substr(parts[1].toLowerCase().indexOf('corporation') + 11, 200).split('(')[0].trim();\n                currentController.bus = (pciIDs.length > 0 && isExternal) ? 'PCIe' : 'Onboard';\n                currentController.vram = null;\n                currentController.vramDynamic = false;\n              } else if (parts[1].toLowerCase().indexOf(' inc.') >= 0) {\n                if ((parts[1].match(/]/g) || []).length > 1) {\n                  currentController.vendor = parts[1].substr(0, parts[1].toLowerCase().indexOf(']') + 1).trim();\n                  currentController.model = parts[1].substr(parts[1].toLowerCase().indexOf(']') + 1, 200).trim().split('(')[0].trim();\n                } else {\n                  currentController.vendor = parts[1].substr(0, parts[1].toLowerCase().indexOf(' inc.') + 5).trim();\n                  currentController.model = parts[1].substr(parts[1].toLowerCase().indexOf(' inc.') + 5, 200).trim().split('(')[0].trim();\n                }\n                currentController.bus = (pciIDs.length > 0 && isExternal) ? 'PCIe' : 'Onboard';\n                currentController.vram = null;\n                currentController.vramDynamic = false;\n              } else if (parts[1].toLowerCase().indexOf(' ltd.') >= 0) {\n                if ((parts[1].match(/]/g) || []).length > 1) {\n                  currentController.vendor = parts[1].substr(0, parts[1].toLowerCase().indexOf(']') + 1).trim();\n                  currentController.model = parts[1].substr(parts[1].toLowerCase().indexOf(']') + 1, 200).trim().split('(')[0].trim();\n                } else {\n                  currentController.vendor = parts[1].substr(0, parts[1].toLowerCase().indexOf(' ltd.') + 5).trim();\n                  currentController.model = parts[1].substr(parts[1].toLowerCase().indexOf(' ltd.') + 5, 200).trim().split('(')[0].trim();\n                }\n              }\n              if (currentController.model && subsystem.indexOf(currentController.model) !== -1) {\n                const subVendor = subsystem.split(currentController.model)[0].trim();\n                if (subVendor) {\n                  currentController.subVendor = subVendor;\n                }\n              }\n            }\n\n          } else {\n            isGraphicsController = false;\n          }\n        }\n        if (isGraphicsController) { // within VGA details\n          let parts = line.split(':');\n          if (parts.length > 1 && parts[0].replace(/ +/g, '').toLowerCase().indexOf('devicename') !== -1 && parts[1].toLowerCase().indexOf('onboard') !== -1) { currentController.bus = 'Onboard'; }\n          if (parts.length > 1 && parts[0].replace(/ +/g, '').toLowerCase().indexOf('region') !== -1 && parts[1].toLowerCase().indexOf('memory') !== -1) {\n            let memparts = parts[1].split('=');\n            if (memparts.length > 1) {\n              currentController.vram = parseInt(memparts[1]);\n            }\n          }\n        }\n      }\n      i++;\n    });\n\n    if (currentController.vendor || currentController.model || currentController.bus || currentController.busAddress || currentController.vram !== null || currentController.vramDynamic) { // already a controller found\n      controllers.push(currentController);\n    }\n    return (controllers);\n  }\n\n  function parseLinesLinuxClinfo(controllers, lines) {\n    const fieldPattern = /\\[([^\\]]+)\\]\\s+(\\w+)\\s+(.*)/;\n    const devices = lines.reduce((devices, line) => {\n      const field = fieldPattern.exec(line.trim());\n      if (field) {\n        if (!devices[field[1]]) {\n          devices[field[1]] = {};\n        }\n        devices[field[1]][field[2]] = field[3];\n      }\n      return devices;\n    }, {});\n    for (let deviceId in devices) {\n      const device = devices[deviceId];\n      if (device['CL_DEVICE_TYPE'] === 'CL_DEVICE_TYPE_GPU') {\n        let busAddress;\n        if (device['CL_DEVICE_TOPOLOGY_AMD']) {\n          const bdf = device['CL_DEVICE_TOPOLOGY_AMD'].match(/[a-zA-Z0-9]+:\\d+\\.\\d+/);\n          if (bdf) {\n            busAddress = bdf[0];\n          }\n        } else if (device['CL_DEVICE_PCI_BUS_ID_NV'] && device['CL_DEVICE_PCI_SLOT_ID_NV']) {\n          const bus = parseInt(device['CL_DEVICE_PCI_BUS_ID_NV']);\n          const slot = parseInt(device['CL_DEVICE_PCI_SLOT_ID_NV']);\n          if (!isNaN(bus) && !isNaN(slot)) {\n            const b = bus & 0xff;\n            const d = (slot >> 3) & 0xff;\n            const f = slot & 0x07;\n            busAddress = `${b.toString().padStart(2, '0')}:${d.toString().padStart(2, '0')}.${f}`;\n          }\n        }\n        if (busAddress) {\n          let controller = controllers.find(controller => controller.busAddress === busAddress);\n          if (!controller) {\n            controller = {\n              vendor: '',\n              model: '',\n              bus: '',\n              busAddress,\n              vram: null,\n              vramDynamic: false\n            };\n            controllers.push(controller);\n          }\n          controller.vendor = device['CL_DEVICE_VENDOR'];\n          if (device['CL_DEVICE_BOARD_NAME_AMD']) {\n            controller.model = device['CL_DEVICE_BOARD_NAME_AMD'];\n          } else {\n            controller.model = device['CL_DEVICE_NAME'];\n          }\n          const memory = parseInt(device['CL_DEVICE_GLOBAL_MEM_SIZE']);\n          if (!isNaN(memory)) {\n            controller.vram = Math.round(memory / 1024 / 1024);\n          }\n        }\n      }\n    }\n    return controllers;\n  }\n\n  function getNvidiaSmi() {\n    if (_nvidiaSmiPath) {\n      return _nvidiaSmiPath;\n    }\n\n    if (_windows) {\n      try {\n        const basePath = util.WINDIR + '\\\\System32\\\\DriverStore\\\\FileRepository';\n        // find all directories that have an nvidia-smi.exe file\n        const candidateDirs = fs.readdirSync(basePath).filter(dir => {\n          return fs.readdirSync([basePath, dir].join('/')).includes('nvidia-smi.exe');\n        });\n        // use the directory with the most recently created nvidia-smi.exe file\n        const targetDir = candidateDirs.reduce((prevDir, currentDir) => {\n          const previousNvidiaSmi = fs.statSync([basePath, prevDir, 'nvidia-smi.exe'].join('/'));\n          const currentNvidiaSmi = fs.statSync([basePath, currentDir, 'nvidia-smi.exe'].join('/'));\n          return (previousNvidiaSmi.ctimeMs > currentNvidiaSmi.ctimeMs) ? prevDir : currentDir;\n        });\n\n        if (targetDir) {\n          _nvidiaSmiPath = [basePath, targetDir, 'nvidia-smi.exe'].join('/');\n        }\n      } catch (e) {\n        util.noop();\n      }\n    } else if (_linux) {\n      _nvidiaSmiPath = 'nvidia-smi';\n    }\n    return _nvidiaSmiPath;\n  }\n\n  function nvidiaSmi(options) {\n    const nvidiaSmiExe = getNvidiaSmi();\n    options = options || util.execOptsWin;\n    if (nvidiaSmiExe) {\n      const nvidiaSmiOpts = '--query-gpu=driver_version,pci.sub_device_id,name,pci.bus_id,fan.speed,memory.total,memory.used,memory.free,utilization.gpu,utilization.memory,temperature.gpu,temperature.memory,power.draw,power.limit,clocks.gr,clocks.mem --format=csv,noheader,nounits';\n      const cmd = nvidiaSmiExe + ' ' + nvidiaSmiOpts + (_linux ? '  2>/dev/null' : '');\n      try {\n        const res = execSync(cmd, options).toString();\n        return res;\n      } catch (e) {\n        util.noop();\n      }\n    }\n    return '';\n  }\n\n  function nvidiaDevices() {\n\n    function safeParseNumber(value) {\n      if ([null, undefined].includes(value)) {\n        return value;\n      }\n      return parseFloat(value);\n    }\n\n    const stdout = nvidiaSmi();\n    if (!stdout) {\n      return [];\n    }\n\n    const gpus = stdout.split('\\n').filter(Boolean);\n    let results = gpus.map(gpu => {\n      const splittedData = gpu.split(', ').map(value => value.includes('N/A') ? undefined : value);\n      if (splittedData.length === 16) {\n        return {\n          driverVersion: splittedData[0],\n          subDeviceId: splittedData[1],\n          name: splittedData[2],\n          pciBus: splittedData[3],\n          fanSpeed: safeParseNumber(splittedData[4]),\n          memoryTotal: safeParseNumber(splittedData[5]),\n          memoryUsed: safeParseNumber(splittedData[6]),\n          memoryFree: safeParseNumber(splittedData[7]),\n          utilizationGpu: safeParseNumber(splittedData[8]),\n          utilizationMemory: safeParseNumber(splittedData[9]),\n          temperatureGpu: safeParseNumber(splittedData[10]),\n          temperatureMemory: safeParseNumber(splittedData[11]),\n          powerDraw: safeParseNumber(splittedData[12]),\n          powerLimit: safeParseNumber(splittedData[13]),\n          clockCore: safeParseNumber(splittedData[14]),\n          clockMemory: safeParseNumber(splittedData[15]),\n        };\n      } else {\n        return {};\n      }\n    });\n    results = results.filter((item) => {\n      return ('pciBus' in item);\n    });\n    return results;\n  }\n\n  function mergeControllerNvidia(controller, nvidia) {\n    if (nvidia.driverVersion) { controller.driverVersion = nvidia.driverVersion; }\n    if (nvidia.subDeviceId) { controller.subDeviceId = nvidia.subDeviceId; }\n    if (nvidia.name) { controller.name = nvidia.name; }\n    if (nvidia.pciBus) { controller.pciBus = nvidia.pciBus; }\n    if (nvidia.fanSpeed) { controller.fanSpeed = nvidia.fanSpeed; }\n    if (nvidia.memoryTotal) {\n      controller.memoryTotal = nvidia.memoryTotal;\n      controller.vram = nvidia.memoryTotal;\n      controller.vramDynamic = false;\n    }\n    if (nvidia.memoryUsed) { controller.memoryUsed = nvidia.memoryUsed; }\n    if (nvidia.memoryFree) { controller.memoryFree = nvidia.memoryFree; }\n    if (nvidia.utilizationGpu) { controller.utilizationGpu = nvidia.utilizationGpu; }\n    if (nvidia.utilizationMemory) { controller.utilizationMemory = nvidia.utilizationMemory; }\n    if (nvidia.temperatureGpu) { controller.temperatureGpu = nvidia.temperatureGpu; }\n    if (nvidia.temperatureMemory) { controller.temperatureMemory = nvidia.temperatureMemory; }\n    if (nvidia.powerDraw) { controller.powerDraw = nvidia.powerDraw; }\n    if (nvidia.powerLimit) { controller.powerLimit = nvidia.powerLimit; }\n    if (nvidia.clockCore) { controller.clockCore = nvidia.clockCore; }\n    if (nvidia.clockMemory) { controller.clockMemory = nvidia.clockMemory; }\n    return controller;\n  }\n\n  function parseLinesLinuxEdid(edid) {\n    // parsen EDID\n    // --> model\n    // --> resolutionx\n    // --> resolutiony\n    // --> builtin = false\n    // --> pixeldepth (?)\n    // --> sizex\n    // --> sizey\n    let result = {\n      vendor: '',\n      model: '',\n      deviceName: '',\n      main: false,\n      builtin: false,\n      connection: '',\n      sizeX: null,\n      sizeY: null,\n      pixelDepth: null,\n      resolutionX: null,\n      resolutionY: null,\n      currentResX: null,\n      currentResY: null,\n      positionX: 0,\n      positionY: 0,\n      currentRefreshRate: null\n    };\n    // find first \"Detailed Timing Description\"\n    let start = 108;\n    if (edid.substr(start, 6) === '000000') {\n      start += 36;\n    }\n    if (edid.substr(start, 6) === '000000') {\n      start += 36;\n    }\n    if (edid.substr(start, 6) === '000000') {\n      start += 36;\n    }\n    if (edid.substr(start, 6) === '000000') {\n      start += 36;\n    }\n    result.resolutionX = parseInt('0x0' + edid.substr(start + 8, 1) + edid.substr(start + 4, 2));\n    result.resolutionY = parseInt('0x0' + edid.substr(start + 14, 1) + edid.substr(start + 10, 2));\n    result.sizeX = parseInt('0x0' + edid.substr(start + 28, 1) + edid.substr(start + 24, 2));\n    result.sizeY = parseInt('0x0' + edid.substr(start + 29, 1) + edid.substr(start + 26, 2));\n    // monitor name\n    start = edid.indexOf('000000fc00'); // find first \"Monitor Description Data\"\n    if (start >= 0) {\n      let model_raw = edid.substr(start + 10, 26);\n      if (model_raw.indexOf('0a') !== -1) {\n        model_raw = model_raw.substr(0, model_raw.indexOf('0a'));\n      }\n      try {\n        if (model_raw.length > 2) {\n          result.model = model_raw.match(/.{1,2}/g).map(function (v) {\n            return String.fromCharCode(parseInt(v, 16));\n          }).join('');\n        }\n      } catch (e) {\n        util.noop();\n      }\n    } else {\n      result.model = '';\n    }\n    return result;\n  }\n\n  function parseLinesLinuxDisplays(lines, depth) {\n    let displays = [];\n    let currentDisplay = {\n      vendor: '',\n      model: '',\n      deviceName: '',\n      main: false,\n      builtin: false,\n      connection: '',\n      sizeX: null,\n      sizeY: null,\n      pixelDepth: null,\n      resolutionX: null,\n      resolutionY: null,\n      currentResX: null,\n      currentResY: null,\n      positionX: 0,\n      positionY: 0,\n      currentRefreshRate: null\n    };\n    let is_edid = false;\n    let is_current = false;\n    let edid_raw = '';\n    let start = 0;\n    for (let i = 1; i < lines.length; i++) {        // start with second line\n      if ('' !== lines[i].trim()) {\n        if (' ' !== lines[i][0] && '\\t' !== lines[i][0] && lines[i].toLowerCase().indexOf(' connected ') !== -1) {        // first line of new entry\n          if (currentDisplay.model || currentDisplay.main || currentDisplay.builtin || currentDisplay.connection || currentDisplay.sizeX !== null || currentDisplay.pixelDepth !== null || currentDisplay.resolutionX !== null) {         // push last display to array\n            displays.push(currentDisplay);\n            currentDisplay = {\n              vendor: '',\n              model: '',\n              main: false,\n              builtin: false,\n              connection: '',\n              sizeX: null,\n              sizeY: null,\n              pixelDepth: null,\n              resolutionX: null,\n              resolutionY: null,\n              currentResX: null,\n              currentResY: null,\n              positionX: 0,\n              positionY: 0,\n              currentRefreshRate: null\n            };\n          }\n          let parts = lines[i].split(' ');\n          currentDisplay.connection = parts[0];\n          currentDisplay.main = lines[i].toLowerCase().indexOf(' primary ') >= 0;\n          currentDisplay.builtin = (parts[0].toLowerCase().indexOf('edp') >= 0);\n        }\n\n        // try to read EDID information\n        if (is_edid) {\n          if (lines[i].search(/\\S|$/) > start) {\n            edid_raw += lines[i].toLowerCase().trim();\n          } else {\n            // parsen EDID\n            let edid_decoded = parseLinesLinuxEdid(edid_raw);\n            currentDisplay.vendor = edid_decoded.vendor;\n            currentDisplay.model = edid_decoded.model;\n            currentDisplay.resolutionX = edid_decoded.resolutionX;\n            currentDisplay.resolutionY = edid_decoded.resolutionY;\n            currentDisplay.sizeX = edid_decoded.sizeX;\n            currentDisplay.sizeY = edid_decoded.sizeY;\n            currentDisplay.pixelDepth = depth;\n            is_edid = false;\n          }\n        }\n        if (lines[i].toLowerCase().indexOf('edid:') >= 0) {\n          is_edid = true;\n          start = lines[i].search(/\\S|$/);\n        }\n        if (lines[i].toLowerCase().indexOf('*current') >= 0) {\n          const parts1 = lines[i].split('(');\n          if (parts1 && parts1.length > 1 && parts1[0].indexOf('x') >= 0) {\n            const resParts = parts1[0].trim().split('x');\n            currentDisplay.currentResX = util.toInt(resParts[0]);\n            currentDisplay.currentResY = util.toInt(resParts[1]);\n          }\n          is_current = true;\n        }\n        if (is_current && lines[i].toLowerCase().indexOf('clock') >= 0 && lines[i].toLowerCase().indexOf('hz') >= 0 && lines[i].toLowerCase().indexOf('v: height') >= 0) {\n          const parts1 = lines[i].split('clock');\n          if (parts1 && parts1.length > 1 && parts1[1].toLowerCase().indexOf('hz') >= 0) {\n            currentDisplay.currentRefreshRate = util.toInt(parts1[1]);\n          }\n          is_current = false;\n        }\n      }\n    }\n\n    // pushen displays\n    if (currentDisplay.model || currentDisplay.main || currentDisplay.builtin || currentDisplay.connection || currentDisplay.sizeX !== null || currentDisplay.pixelDepth !== null || currentDisplay.resolutionX !== null) {  // still information there\n      displays.push(currentDisplay);\n    }\n    return displays;\n  }\n\n  // function starts here\n  return new Promise((resolve) => {\n    process.nextTick(() => {\n      let result = {\n        controllers: [],\n        displays: []\n      };\n      if (_darwin) {\n        let cmd = 'system_profiler -xml -detailLevel full SPDisplaysDataType';\n        exec(cmd, function (error, stdout) {\n          if (!error) {\n            try {\n              const output = stdout.toString();\n              result = parseLinesDarwin(util.plistParser(output)[0]._items);\n            } catch (e) {\n              util.noop();\n            }\n            try {\n              stdout = execSync('defaults read /Library/Preferences/com.apple.windowserver.plist 2>/dev/null;defaults read /Library/Preferences/com.apple.windowserver.displays.plist 2>/dev/null; echo \"\"', { maxBuffer: 1024 * 20000 });\n              const output = (stdout || '').toString();\n              const obj = util.plistReader(output);\n              if (obj['DisplayAnyUserSets'] && obj['DisplayAnyUserSets']['Configs'] && obj['DisplayAnyUserSets']['Configs'][0] && obj['DisplayAnyUserSets']['Configs'][0]['DisplayConfig']) {\n                const current = obj['DisplayAnyUserSets']['Configs'][0]['DisplayConfig'];\n                let i = 0;\n                current.forEach((o) => {\n                  if (o['CurrentInfo'] && o['CurrentInfo']['OriginX'] !== undefined && result.displays && result.displays[i]) {\n                    result.displays[i].positionX = o['CurrentInfo']['OriginX'];\n                  }\n                  if (o['CurrentInfo'] && o['CurrentInfo']['OriginY'] !== undefined && result.displays && result.displays[i]) {\n                    result.displays[i].positionY = o['CurrentInfo']['OriginY'];\n                  }\n                  i++;\n                });\n              }\n              if (obj['DisplayAnyUserSets'] && obj['DisplayAnyUserSets'].length > 0 && obj['DisplayAnyUserSets'][0].length > 0 && obj['DisplayAnyUserSets'][0][0]['DisplayID']) {\n                const current = obj['DisplayAnyUserSets'][0];\n                let i = 0;\n                current.forEach((o) => {\n                  if ('OriginX' in o && result.displays && result.displays[i]) {\n                    result.displays[i].positionX = o['OriginX'];\n                  }\n                  if ('OriginY' in o && result.displays && result.displays[i]) {\n                    result.displays[i].positionY = o['OriginY'];\n                  }\n                  if (o['Mode'] && o['Mode']['BitsPerPixel'] !== undefined && result.displays && result.displays[i]) {\n                    result.displays[i].pixelDepth = o['Mode']['BitsPerPixel'];\n                  }\n                  i++;\n                });\n              }\n            } catch (e) {\n              util.noop();\n            }\n          }\n          if (callback) {\n            callback(result);\n          }\n          resolve(result);\n        });\n      }\n      if (_linux) {\n        // Raspberry: https://elinux.org/RPI_vcgencmd_usage\n        if (util.isRaspberry() && util.isRaspbian()) {\n          let cmd = 'fbset -s | grep \\'mode \"\\'; vcgencmd get_mem gpu; tvservice -s; tvservice -n;';\n          exec(cmd, function (error, stdout) {\n            let lines = stdout.toString().split('\\n');\n            if (lines.length > 3 && lines[0].indexOf('mode \"') >= -1 && lines[2].indexOf('0x12000a') > -1) {\n              const parts = lines[0].replace('mode', '').replace(/\"/g, '').trim().split('x');\n              if (parts.length === 2) {\n                result.displays.push({\n                  vendor: '',\n                  model: util.getValue(lines, 'device_name', '='),\n                  main: true,\n                  builtin: false,\n                  connection: 'HDMI',\n                  sizeX: null,\n                  sizeY: null,\n                  pixelDepth: null,\n                  resolutionX: parseInt(parts[0], 10),\n                  resolutionY: parseInt(parts[1], 10),\n                  currentResX: null,\n                  currentResY: null,\n                  positionX: 0,\n                  positionY: 0,\n                  currentRefreshRate: null\n                });\n              }\n            }\n            if (lines.length > 1 && stdout.toString().indexOf('gpu=') >= -1) {\n              result.controllers.push({\n                vendor: 'Broadcom',\n                model: util.getRpiGpu(),\n                bus: '',\n                vram: util.getValue(lines, 'gpu', '=').replace('M', ''),\n                vramDynamic: true\n              });\n            }\n            if (callback) {\n              callback(result);\n            }\n            resolve(result);\n          });\n        } else {\n          let cmd = 'lspci -vvv  2>/dev/null';\n          exec(cmd, function (error, stdout) {\n            if (!error) {\n              let lines = stdout.toString().split('\\n');\n              result.controllers = parseLinesLinuxControllers(lines);\n              const nvidiaData = nvidiaDevices();\n              // needs to be rewritten ... using no spread operators\n              result.controllers = result.controllers.map((controller) => { // match by busAddress\n                return mergeControllerNvidia(controller, nvidiaData.find((contr) => contr.pciBus.toLowerCase().endsWith(controller.busAddress.toLowerCase())) || {});\n              });\n            }\n            let cmd = 'clinfo --raw';\n            exec(cmd, function (error, stdout) {\n              if (!error) {\n                let lines = stdout.toString().split('\\n');\n                result.controllers = parseLinesLinuxClinfo(result.controllers, lines);\n              }\n              let cmd = 'xdpyinfo 2>/dev/null | grep \\'depth of root window\\' | awk \\'{ print $5 }\\'';\n              exec(cmd, function (error, stdout) {\n                let depth = 0;\n                if (!error) {\n                  let lines = stdout.toString().split('\\n');\n                  depth = parseInt(lines[0]) || 0;\n                }\n                let cmd = 'xrandr --verbose 2>/dev/null';\n                exec(cmd, function (error, stdout) {\n                  if (!error) {\n                    let lines = stdout.toString().split('\\n');\n                    result.displays = parseLinesLinuxDisplays(lines, depth);\n                  }\n                  if (callback) {\n                    callback(result);\n                  }\n                  resolve(result);\n                });\n              });\n            });\n          });\n        }\n      }\n      if (_freebsd || _openbsd || _netbsd) {\n        if (callback) { callback(null); }\n        resolve(null);\n      }\n      if (_sunos) {\n        if (callback) { callback(null); }\n        resolve(null);\n      }\n      if (_windows) {\n\n        // https://blogs.technet.microsoft.com/heyscriptingguy/2013/10/03/use-powershell-to-discover-multi-monitor-information/\n        // https://devblogs.microsoft.com/scripting/use-powershell-to-discover-multi-monitor-information/\n        try {\n          const workload = [];\n          workload.push(util.powerShell('Get-CimInstance win32_VideoController | fl *'));\n          workload.push(util.powerShell('gp \"HKLM:\\\\SYSTEM\\\\ControlSet001\\\\Control\\\\Class\\\\{4d36e968-e325-11ce-bfc1-08002be10318}\\\\*\" -ErrorAction SilentlyContinue | where MatchingDeviceId $null -NE | select MatchingDeviceId,HardwareInformation.qwMemorySize | fl'));\n          workload.push(util.powerShell('Get-CimInstance win32_desktopmonitor | fl *'));\n          workload.push(util.powerShell('Get-CimInstance -Namespace root\\\\wmi -ClassName WmiMonitorBasicDisplayParams | fl'));\n          workload.push(util.powerShell('Add-Type -AssemblyName System.Windows.Forms; [System.Windows.Forms.Screen]::AllScreens'));\n          workload.push(util.powerShell('Get-CimInstance -Namespace root\\\\wmi -ClassName WmiMonitorConnectionParams | fl'));\n          workload.push(util.powerShell('gwmi WmiMonitorID -Namespace root\\\\wmi | ForEach-Object {(($_.ManufacturerName -notmatch 0 | foreach {[char]$_}) -join \"\") + \"|\" + (($_.ProductCodeID -notmatch 0 | foreach {[char]$_}) -join \"\") + \"|\" + (($_.UserFriendlyName -notmatch 0 | foreach {[char]$_}) -join \"\") + \"|\" + (($_.SerialNumberID -notmatch 0 | foreach {[char]$_}) -join \"\") + \"|\" + $_.InstanceName}'));\n\n          const nvidiaData = nvidiaDevices();\n\n          Promise.all(\n            workload\n          ).then((data) => {\n            // controller + vram\n            let csections = data[0].replace(/\\r/g, '').split(/\\n\\s*\\n/);\n            let vsections = data[1].replace(/\\r/g, '').split(/\\n\\s*\\n/);\n            result.controllers = parseLinesWindowsControllers(csections, vsections);\n            result.controllers = result.controllers.map((controller) => { // match by subDeviceId\n              if (controller.vendor.toLowerCase() === 'nvidia') {\n                return mergeControllerNvidia(controller, nvidiaData.find(device => {\n                  let windowsSubDeviceId = (controller.subDeviceId || '').toLowerCase();\n                  const nvidiaSubDeviceIdParts = device.subDeviceId.split('x');\n                  let nvidiaSubDeviceId = nvidiaSubDeviceIdParts.length > 1 ? nvidiaSubDeviceIdParts[1].toLowerCase() : nvidiaSubDeviceIdParts[0].toLowerCase();\n                  const lengthDifference = Math.abs(windowsSubDeviceId.length - nvidiaSubDeviceId.length);\n                  if (windowsSubDeviceId.length > nvidiaSubDeviceId.length) {\n                    for (let i = 0; i < lengthDifference; i++) {\n                      nvidiaSubDeviceId = '0' + nvidiaSubDeviceId;\n                    }\n                  } else if (windowsSubDeviceId.length < nvidiaSubDeviceId.length) {\n                    for (let i = 0; i < lengthDifference; i++) {\n                      windowsSubDeviceId = '0' + windowsSubDeviceId;\n                    }\n                  }\n                  return windowsSubDeviceId === nvidiaSubDeviceId;\n                }) || {});\n              } else {\n                return controller;\n              }\n            });\n\n            // displays\n            let dsections = data[2].replace(/\\r/g, '').split(/\\n\\s*\\n/);\n            // result.displays = parseLinesWindowsDisplays(dsections);\n            if (dsections[0].trim() === '') { dsections.shift(); }\n            if (dsections.length && dsections[dsections.length - 1].trim() === '') { dsections.pop(); }\n\n            // monitor (powershell)\n            let msections = data[3].replace(/\\r/g, '').split('Active ');\n            msections.shift();\n\n            // forms.screens (powershell)\n            let ssections = data[4].replace(/\\r/g, '').split('BitsPerPixel ');\n            ssections.shift();\n\n            // connection params (powershell) - video type\n            let tsections = data[5].replace(/\\r/g, '').split(/\\n\\s*\\n/);\n            tsections.shift();\n\n            // monitor ID (powershell) - model / vendor\n            const res = data[6].replace(/\\r/g, '').split(/\\n/);\n            let isections = [];\n            res.forEach(element => {\n              const parts = element.split('|');\n              if (parts.length === 5) {\n                isections.push({\n                  vendor: parts[0],\n                  code: parts[1],\n                  model: parts[2],\n                  serial: parts[3],\n                  instanceId: parts[4]\n                });\n              }\n            });\n\n            result.displays = parseLinesWindowsDisplaysPowershell(ssections, msections, dsections, tsections, isections);\n\n            if (result.displays.length === 1) {\n              if (_resolutionX) {\n                result.displays[0].resolutionX = _resolutionX;\n                if (!result.displays[0].currentResX) {\n                  result.displays[0].currentResX = _resolutionX;\n                }\n              }\n              if (_resolutionY) {\n                result.displays[0].resolutionY = _resolutionY;\n                if (result.displays[0].currentResY === 0) {\n                  result.displays[0].currentResY = _resolutionY;\n                }\n              }\n              if (_pixelDepth) {\n                result.displays[0].pixelDepth = _pixelDepth;\n              }\n            }\n            result.displays = result.displays.map(element => {\n              if (_refreshRate && !element.currentRefreshRate) {\n                element.currentRefreshRate = _refreshRate;\n              }\n              return element;\n            });\n\n            if (callback) {\n              callback(result);\n            }\n            resolve(result);\n          })\n            .catch(() => {\n              if (callback) {\n                callback(result);\n              }\n              resolve(result);\n            });\n        } catch (e) {\n          if (callback) { callback(result); }\n          resolve(result);\n        }\n      }\n    });\n  });\n\n  function parseLinesWindowsControllers(sections, vections) {\n    const memorySizes = {};\n    for (const i in vections) {\n      if ({}.hasOwnProperty.call(vections, i)) {\n        if (vections[i].trim() !== '') {\n          const lines = vections[i].trim().split('\\n');\n          const matchingDeviceId = util.getValue(lines, 'MatchingDeviceId').match(/PCI\\\\(VEN_[0-9A-F]{4})&(DEV_[0-9A-F]{4})(?:&(SUBSYS_[0-9A-F]{8}))?(?:&(REV_[0-9A-F]{2}))?/i);\n          if (matchingDeviceId) {\n            const quadWordmemorySize = parseInt(util.getValue(lines, 'HardwareInformation.qwMemorySize'));\n            if (!isNaN(quadWordmemorySize)) {\n              let deviceId = matchingDeviceId[1].toUpperCase() + '&' + matchingDeviceId[2].toUpperCase();\n              if (matchingDeviceId[3]) {\n                deviceId += '&' + matchingDeviceId[3].toUpperCase();\n              }\n              if (matchingDeviceId[4]) {\n                deviceId += '&' + matchingDeviceId[4].toUpperCase();\n              }\n              memorySizes[deviceId] = quadWordmemorySize;\n            }\n          }\n        }\n      }\n    }\n\n    let controllers = [];\n    for (let i in sections) {\n      if ({}.hasOwnProperty.call(sections, i)) {\n        if (sections[i].trim() !== '') {\n          let lines = sections[i].trim().split('\\n');\n          let pnpDeviceId = util.getValue(lines, 'PNPDeviceID', ':').match(/PCI\\\\(VEN_[0-9A-F]{4})&(DEV_[0-9A-F]{4})(?:&(SUBSYS_[0-9A-F]{8}))?(?:&(REV_[0-9A-F]{2}))?/i);\n          let subDeviceId = null;\n          let memorySize = null;\n          if (pnpDeviceId) {\n            subDeviceId = pnpDeviceId[3] || '';\n            if (subDeviceId) {\n              subDeviceId = subDeviceId.split('_')[1];\n            }\n\n            // Match PCI device identifier (there's an order of increasing generality):\n            // https://docs.microsoft.com/en-us/windows-hardware/drivers/install/identifiers-for-pci-devices\n\n            // PCI\\VEN_v(4)&DEV_d(4)&SUBSYS_s(4)n(4)&REV_r(2)\n            if (memorySize == null && pnpDeviceId[3] && pnpDeviceId[4]) {\n              const deviceId = pnpDeviceId[1].toUpperCase() + '&' + pnpDeviceId[2].toUpperCase() + '&' + pnpDeviceId[3].toUpperCase() + '&' + pnpDeviceId[4].toUpperCase();\n              if ({}.hasOwnProperty.call(memorySizes, deviceId)) {\n                memorySize = memorySizes[deviceId];\n              }\n            }\n\n            // PCI\\VEN_v(4)&DEV_d(4)&SUBSYS_s(4)n(4)\n            if (memorySize == null && pnpDeviceId[3]) {\n              const deviceId = pnpDeviceId[1].toUpperCase() + '&' + pnpDeviceId[2].toUpperCase() + '&' + pnpDeviceId[3].toUpperCase();\n              if ({}.hasOwnProperty.call(memorySizes, deviceId)) {\n                memorySize = memorySizes[deviceId];\n              }\n            }\n\n            // PCI\\VEN_v(4)&DEV_d(4)&REV_r(2)\n            if (memorySize == null && pnpDeviceId[4]) {\n              const deviceId = pnpDeviceId[1].toUpperCase() + '&' + pnpDeviceId[2].toUpperCase() + '&' + pnpDeviceId[4].toUpperCase();\n              if ({}.hasOwnProperty.call(memorySizes, deviceId)) {\n                memorySize = memorySizes[deviceId];\n              }\n            }\n\n            // PCI\\VEN_v(4)&DEV_d(4)\n            if (memorySize == null) {\n              const deviceId = pnpDeviceId[1].toUpperCase() + '&' + pnpDeviceId[2].toUpperCase();\n              if ({}.hasOwnProperty.call(memorySizes, deviceId)) {\n                memorySize = memorySizes[deviceId];\n              }\n            }\n          }\n\n          controllers.push({\n            vendor: util.getValue(lines, 'AdapterCompatibility', ':'),\n            model: util.getValue(lines, 'name', ':'),\n            bus: util.getValue(lines, 'PNPDeviceID', ':').startsWith('PCI') ? 'PCI' : '',\n            vram: (memorySize == null ? util.toInt(util.getValue(lines, 'AdapterRAM', ':')) : memorySize) / 1024 / 1024,\n            vramDynamic: (util.getValue(lines, 'VideoMemoryType', ':') === '2'),\n            subDeviceId\n          });\n          _resolutionX = util.toInt(util.getValue(lines, 'CurrentHorizontalResolution', ':')) || _resolutionX;\n          _resolutionY = util.toInt(util.getValue(lines, 'CurrentVerticalResolution', ':')) || _resolutionY;\n          _refreshRate = util.toInt(util.getValue(lines, 'CurrentRefreshRate', ':')) || _refreshRate;\n          _pixelDepth = util.toInt(util.getValue(lines, 'CurrentBitsPerPixel', ':')) || _pixelDepth;\n        }\n      }\n    }\n    return controllers;\n  }\n\n  function parseLinesWindowsDisplaysPowershell(ssections, msections, dsections, tsections, isections) {\n    let displays = [];\n    let vendor = '';\n    let model = '';\n    let deviceID = '';\n    let resolutionX = 0;\n    let resolutionY = 0;\n    if (dsections && dsections.length) {\n      let linesDisplay = dsections[0].split('\\n');\n      vendor = util.getValue(linesDisplay, 'MonitorManufacturer', ':');\n      model = util.getValue(linesDisplay, 'Name', ':');\n      deviceID = util.getValue(linesDisplay, 'PNPDeviceID', ':').replace(/&amp;/g, '&').toLowerCase();\n      resolutionX = util.toInt(util.getValue(linesDisplay, 'ScreenWidth', ':'));\n      resolutionY = util.toInt(util.getValue(linesDisplay, 'ScreenHeight', ':'));\n    }\n    for (let i = 0; i < ssections.length; i++) {\n      if (ssections[i].trim() !== '') {\n        ssections[i] = 'BitsPerPixel ' + ssections[i];\n        msections[i] = 'Active ' + msections[i];\n        // tsections can be empty OR undefined on earlier versions of powershell (<=2.0)\n        // Tag connection type as UNKNOWN by default if this information is missing\n        if (tsections.length === 0 || tsections[i] === undefined) {\n          tsections[i] = 'Unknown';\n        }\n        let linesScreen = ssections[i].split('\\n');\n        let linesMonitor = msections[i].split('\\n');\n\n        let linesConnection = tsections[i].split('\\n');\n        const bitsPerPixel = util.getValue(linesScreen, 'BitsPerPixel');\n        const bounds = util.getValue(linesScreen, 'Bounds').replace('{', '').replace('}', '').replace(/=/g, ':').split(',');\n        const primary = util.getValue(linesScreen, 'Primary');\n        const sizeX = util.getValue(linesMonitor, 'MaxHorizontalImageSize');\n        const sizeY = util.getValue(linesMonitor, 'MaxVerticalImageSize');\n        const instanceName = util.getValue(linesMonitor, 'InstanceName').toLowerCase();\n        const videoOutputTechnology = util.getValue(linesConnection, 'VideoOutputTechnology');\n        const deviceName = util.getValue(linesScreen, 'DeviceName');\n        let displayVendor = '';\n        let displayModel = '';\n        isections.forEach(element => {\n          if (element.instanceId.toLowerCase().startsWith(instanceName) && vendor.startsWith('(') && model.startsWith('PnP')) {\n            displayVendor = element.vendor;\n            displayModel = element.model;\n          }\n        });\n        displays.push({\n          vendor: instanceName.startsWith(deviceID) && displayVendor === '' ? vendor : displayVendor,\n          model: instanceName.startsWith(deviceID) && displayModel === '' ? model : displayModel,\n          deviceName,\n          main: primary.toLowerCase() === 'true',\n          builtin: videoOutputTechnology === '2147483648',\n          connection: videoOutputTechnology && videoTypes[videoOutputTechnology] ? videoTypes[videoOutputTechnology] : '',\n          resolutionX: util.toInt(util.getValue(bounds, 'Width', ':')),\n          resolutionY: util.toInt(util.getValue(bounds, 'Height', ':')),\n          sizeX: sizeX ? parseInt(sizeX, 10) : null,\n          sizeY: sizeY ? parseInt(sizeY, 10) : null,\n          pixelDepth: bitsPerPixel,\n          currentResX: util.toInt(util.getValue(bounds, 'Width', ':')),\n          currentResY: util.toInt(util.getValue(bounds, 'Height', ':')),\n          positionX: util.toInt(util.getValue(bounds, 'X', ':')),\n          positionY: util.toInt(util.getValue(bounds, 'Y', ':')),\n        });\n      }\n    }\n    if (ssections.length === 0) {\n      displays.push({\n        vendor,\n        model,\n        main: true,\n        sizeX: null,\n        sizeY: null,\n        resolutionX,\n        resolutionY,\n        pixelDepth: null,\n        currentResX: resolutionX,\n        currentResY: resolutionY,\n        positionX: 0,\n        positionY: 0\n      });\n    }\n    return displays;\n  }\n}\n\nexports.graphics = graphics;\n", "'use strict';\n// @ts-check\n// ==================================================================================\n// filesystem.js\n// ----------------------------------------------------------------------------------\n// Description:   System Information - library\n//                for Node.js\n// Copyright:     (c) 2014 - 2024\n// Author:        Sebastian Hildebrandt\n// ----------------------------------------------------------------------------------\n// License:       MIT\n// ==================================================================================\n// 8. File System\n// ----------------------------------------------------------------------------------\n\nconst util = require('./util');\nconst fs = require('fs');\n\nconst exec = require('child_process').exec;\nconst execSync = require('child_process').execSync;\nconst execPromiseSave = util.promisifySave(require('child_process').exec);\n\nlet _platform = process.platform;\n\nconst _linux = (_platform === 'linux' || _platform === 'android');\nconst _darwin = (_platform === 'darwin');\nconst _windows = (_platform === 'win32');\nconst _freebsd = (_platform === 'freebsd');\nconst _openbsd = (_platform === 'openbsd');\nconst _netbsd = (_platform === 'netbsd');\nconst _sunos = (_platform === 'sunos');\n\nlet _fs_speed = {};\nlet _disk_io = {};\n\n// --------------------------\n// FS - mounted file systems\n\nfunction fsSize(drive, callback) {\n\n  if (util.isFunction(drive)) {\n    callback = drive;\n    drive = '';\n  }\n\n  let macOsDisks = [];\n  let osMounts = [];\n\n  function getmacOsFsType(fs) {\n    if (!fs.startsWith('/')) { return 'NFS'; }\n    const parts = fs.split('/');\n    const fsShort = parts[parts.length - 1];\n    const macOsDisksSingle = macOsDisks.filter(item => item.indexOf(fsShort) >= 0);\n    if (macOsDisksSingle.length === 1 && macOsDisksSingle[0].indexOf('APFS') >= 0) { return 'APFS'; }\n    return 'HFS';\n  }\n\n  function isLinuxTmpFs(fs) {\n    const linuxTmpFileSystems = ['rootfs', 'unionfs', 'squashfs', 'cramfs', 'initrd', 'initramfs', 'devtmpfs', 'tmpfs', 'udev', 'devfs', 'specfs', 'type', 'appimaged'];\n    let result = false;\n    linuxTmpFileSystems.forEach(linuxFs => {\n      if (fs.toLowerCase().indexOf(linuxFs) >= 0) { result = true; }\n    });\n    return result;\n  }\n\n  function filterLines(stdout) {\n    let lines = stdout.toString().split('\\n');\n    lines.shift();\n    if (stdout.toString().toLowerCase().indexOf('filesystem')) {\n      let removeLines = 0;\n      for (let i = 0; i < lines.length; i++) {\n        if (lines[i] && lines[i].toLowerCase().startsWith('filesystem')) {\n          removeLines = i;\n        }\n      }\n      for (let i = 0; i < removeLines; i++) {\n        lines.shift();\n      }\n    }\n    return lines;\n  }\n\n  function parseDf(lines) {\n    let data = [];\n    lines.forEach(function (line) {\n      if (line !== '') {\n        line = line.replace(/ +/g, ' ').split(' ');\n        if (line && ((line[0].startsWith('/')) || (line[6] && line[6] === '/') || (line[0].indexOf('/') > 0) || (line[0].indexOf(':') === 1) || !_darwin && !isLinuxTmpFs(line[1]))) {\n          const fs = line[0];\n          const fsType = ((_linux || _freebsd || _openbsd || _netbsd) ? line[1] : getmacOsFsType(line[0]));\n          const size = parseInt(((_linux || _freebsd || _openbsd || _netbsd) ? line[2] : line[1])) * 1024;\n          const used = parseInt(((_linux || _freebsd || _openbsd || _netbsd) ? line[3] : line[2])) * 1024;\n          const available = parseInt(((_linux || _freebsd || _openbsd || _netbsd) ? line[4] : line[3])) * 1024;\n          const use = parseFloat((100.0 * (used / (used + available))).toFixed(2));\n          let rw = osMounts && Object.keys(osMounts).length > 0 ? osMounts[fs] || false : null;\n          line.splice(0, (_linux || _freebsd || _openbsd || _netbsd) ? 6 : 5);\n          const mount = line.join(' ');\n          if (!data.find(el => (el.fs === fs && el.type === fsType))) {\n            data.push({\n              fs,\n              type: fsType,\n              size,\n              used,\n              available,\n              use,\n              mount,\n              rw\n            });\n          }\n        }\n      }\n    });\n    return data;\n  }\n\n  return new Promise((resolve) => {\n    process.nextTick(() => {\n      let data = [];\n      if (_linux || _freebsd || _openbsd || _netbsd || _darwin) {\n        let cmd = '';\n        macOsDisks = [];\n        osMounts = {};\n        if (_darwin) {\n          cmd = 'df -kP';\n          try {\n            macOsDisks = execSync('diskutil list').toString().split('\\n').filter(line => {\n              return !line.startsWith('/') && line.indexOf(':') > 0;\n            });\n            execSync('mount').toString().split('\\n').filter(line => {\n              return line.startsWith('/');\n            }).forEach((line) => {\n              osMounts[line.split(' ')[0]] = line.toLowerCase().indexOf('read-only') === -1;\n            });\n          } catch (e) {\n            util.noop();\n          }\n        }\n        if (_linux) {\n          try {\n            cmd = 'export LC_ALL=C; df -lkPTx squashfs; unset LC_ALL';\n            execSync('cat /proc/mounts 2>/dev/null').toString().split('\\n').filter(line => {\n              return line.startsWith('/');\n            }).forEach((line) => {\n              osMounts[line.split(' ')[0]] = osMounts[line.split(' ')[0]] || false;\n              if (line.toLowerCase().indexOf('/snap/') === -1) {\n                osMounts[line.split(' ')[0]] = ((line.toLowerCase().indexOf('rw,') >= 0 || line.toLowerCase().indexOf(' rw ') >= 0));\n              }\n            });\n          } catch (e) {\n            util.noop();\n          }\n        }\n        if (_freebsd || _openbsd || _netbsd) {\n          try {\n            cmd = 'df -lkPT';\n            execSync('mount').toString().split('\\n').forEach((line) => {\n              osMounts[line.split(' ')[0]] = line.toLowerCase().indexOf('read-only') === -1;\n            });\n          } catch (e) {\n            util.noop();\n          }\n        }\n        exec(cmd, { maxBuffer: 1024 * 1024 }, function (error, stdout) {\n          let lines = filterLines(stdout);\n          data = parseDf(lines);\n          if (drive) {\n            data = data.filter(item => {\n              return item.fs.toLowerCase().indexOf(drive.toLowerCase()) >= 0 || item.mount.toLowerCase().indexOf(drive.toLowerCase()) >= 0;\n            });\n          }\n          if ((!error || data.length) && stdout.toString().trim() !== '') {\n            if (callback) {\n              callback(data);\n            }\n            resolve(data);\n          } else {\n            exec('df -kPT', { maxBuffer: 1024 * 1024 }, function (error, stdout) {\n              if (!error) {\n                let lines = filterLines(stdout);\n                data = parseDf(lines);\n              }\n              if (callback) {\n                callback(data);\n              }\n              resolve(data);\n            });\n          }\n        });\n      }\n      if (_sunos) {\n        if (callback) { callback(data); }\n        resolve(data);\n      }\n      if (_windows) {\n        try {\n          const cmd = `Get-WmiObject Win32_logicaldisk | select Access,Caption,FileSystem,FreeSpace,Size ${drive ? '| where -property Caption -eq ' + drive : ''} | fl`;\n          util.powerShell(cmd).then((stdout, error) => {\n            if (!error) {\n              let devices = stdout.toString().split(/\\n\\s*\\n/);\n              devices.forEach(function (device) {\n                let lines = device.split('\\r\\n');\n                const size = util.toInt(util.getValue(lines, 'size', ':'));\n                const free = util.toInt(util.getValue(lines, 'freespace', ':'));\n                const caption = util.getValue(lines, 'caption', ':');\n                const rwValue = util.getValue(lines, 'access', ':');\n                const rw = rwValue ? (util.toInt(rwValue) !== 1) : null;\n                if (size) {\n                  data.push({\n                    fs: caption,\n                    type: util.getValue(lines, 'filesystem', ':'),\n                    size,\n                    used: size - free,\n                    available: free,\n                    use: parseFloat(((100.0 * (size - free)) / size).toFixed(2)),\n                    mount: caption,\n                    rw\n                  });\n                }\n              });\n            }\n            if (callback) {\n              callback(data);\n            }\n            resolve(data);\n          });\n        } catch (e) {\n          if (callback) { callback(data); }\n          resolve(data);\n        }\n      }\n    });\n  });\n}\n\nexports.fsSize = fsSize;\n\n// --------------------------\n// FS - open files count\n\nfunction fsOpenFiles(callback) {\n\n  return new Promise((resolve) => {\n    process.nextTick(() => {\n      const result = {\n        max: null,\n        allocated: null,\n        available: null\n      };\n      if (_freebsd || _openbsd || _netbsd || _darwin) {\n        let cmd = 'sysctl -i kern.maxfiles kern.num_files kern.open_files';\n        exec(cmd, { maxBuffer: 1024 * 1024 }, function (error, stdout) {\n          if (!error) {\n            let lines = stdout.toString().split('\\n');\n            result.max = parseInt(util.getValue(lines, 'kern.maxfiles', ':'), 10);\n            result.allocated = parseInt(util.getValue(lines, 'kern.num_files', ':'), 10) || parseInt(util.getValue(lines, 'kern.open_files', ':'), 10);\n            result.available = result.max - result.allocated;\n          }\n          if (callback) {\n            callback(result);\n          }\n          resolve(result);\n        });\n      }\n      if (_linux) {\n        fs.readFile('/proc/sys/fs/file-nr', function (error, stdout) {\n          if (!error) {\n            let lines = stdout.toString().split('\\n');\n            if (lines[0]) {\n              const parts = lines[0].replace(/\\s+/g, ' ').split(' ');\n              if (parts.length === 3) {\n                result.allocated = parseInt(parts[0], 10);\n                result.available = parseInt(parts[1], 10);\n                result.max = parseInt(parts[2], 10);\n                if (!result.available) { result.available = result.max - result.allocated; }\n              }\n            }\n            if (callback) {\n              callback(result);\n            }\n            resolve(result);\n          } else {\n            fs.readFile('/proc/sys/fs/file-max', function (error, stdout) {\n              if (!error) {\n                let lines = stdout.toString().split('\\n');\n                if (lines[0]) {\n                  result.max = parseInt(lines[0], 10);\n                }\n              }\n              if (callback) {\n                callback(result);\n              }\n              resolve(result);\n            });\n          }\n        });\n      }\n      if (_sunos) {\n        if (callback) { callback(null); }\n        resolve(null);\n      }\n      if (_windows) {\n        if (callback) { callback(null); }\n        resolve(null);\n      }\n    });\n  });\n}\n\nexports.fsOpenFiles = fsOpenFiles;\n\n// --------------------------\n// disks\n\nfunction parseBytes(s) {\n  return parseInt(s.substr(s.indexOf(' (') + 2, s.indexOf(' Bytes)') - 10));\n}\n\nfunction parseDevices(lines) {\n  let devices = [];\n  let i = 0;\n  lines.forEach(line => {\n    if (line.length > 0) {\n      if (line[0] === '*') {\n        i++;\n      } else {\n        let parts = line.split(':');\n        if (parts.length > 1) {\n          if (!devices[i]) {\n            devices[i] = {\n              name: '',\n              identifier: '',\n              type: 'disk',\n              fsType: '',\n              mount: '',\n              size: 0,\n              physical: 'HDD',\n              uuid: '',\n              label: '',\n              model: '',\n              serial: '',\n              removable: false,\n              protocol: '',\n              group: '',\n              device: ''\n            };\n          }\n          parts[0] = parts[0].trim().toUpperCase().replace(/ +/g, '');\n          parts[1] = parts[1].trim();\n          if ('DEVICEIDENTIFIER' === parts[0]) { devices[i].identifier = parts[1]; }\n          if ('DEVICENODE' === parts[0]) { devices[i].name = parts[1]; }\n          if ('VOLUMENAME' === parts[0]) {\n            if (parts[1].indexOf('Not applicable') === -1) { devices[i].label = parts[1]; }\n          }\n          if ('PROTOCOL' === parts[0]) { devices[i].protocol = parts[1]; }\n          if ('DISKSIZE' === parts[0]) { devices[i].size = parseBytes(parts[1]); }\n          if ('FILESYSTEMPERSONALITY' === parts[0]) { devices[i].fsType = parts[1]; }\n          if ('MOUNTPOINT' === parts[0]) { devices[i].mount = parts[1]; }\n          if ('VOLUMEUUID' === parts[0]) { devices[i].uuid = parts[1]; }\n          if ('READ-ONLYMEDIA' === parts[0] && parts[1] === 'Yes') { devices[i].physical = 'CD/DVD'; }\n          if ('SOLIDSTATE' === parts[0] && parts[1] === 'Yes') { devices[i].physical = 'SSD'; }\n          if ('VIRTUAL' === parts[0]) { devices[i].type = 'virtual'; }\n          if ('REMOVABLEMEDIA' === parts[0]) { devices[i].removable = (parts[1] === 'Removable'); }\n          if ('PARTITIONTYPE' === parts[0]) { devices[i].type = 'part'; }\n          if ('DEVICE/MEDIANAME' === parts[0]) { devices[i].model = parts[1]; }\n        }\n      }\n    }\n  });\n  return devices;\n}\n\nfunction parseBlk(lines) {\n  let data = [];\n\n  lines.filter(line => line !== '').forEach((line) => {\n    try {\n      line = decodeURIComponent(line.replace(/\\\\x/g, '%'));\n      line = line.replace(/\\\\/g, '\\\\\\\\');\n      let disk = JSON.parse(line);\n      data.push({\n        'name': disk.name,\n        'type': disk.type,\n        'fsType': disk.fsType,\n        'mount': disk.mountpoint,\n        'size': parseInt(disk.size),\n        'physical': (disk.type === 'disk' ? (disk.rota === '0' ? 'SSD' : 'HDD') : (disk.type === 'rom' ? 'CD/DVD' : '')),\n        'uuid': disk.uuid,\n        'label': disk.label,\n        'model': (disk.model || '').trim(),\n        'serial': disk.serial,\n        'removable': disk.rm === '1',\n        'protocol': disk.tran,\n        'group': disk.group || '',\n      });\n    } catch (e) {\n      util.noop();\n    }\n  });\n  data = util.unique(data);\n  data = util.sortByKey(data, ['type', 'name']);\n  return data;\n}\n\nfunction decodeMdabmData(lines) {\n  const raid = util.getValue(lines, 'md_level', '=');\n  const label = util.getValue(lines, 'md_name', '='); // <- get label info\n  const uuid = util.getValue(lines, 'md_uuid', '='); // <- get uuid info\n  const members = [];\n  lines.forEach(line => {\n    if (line.toLowerCase().startsWith('md_device_dev') && line.toLowerCase().indexOf('/dev/') > 0) {\n      members.push(line.split('/dev/')[1]);\n    }\n  });\n  return {\n    raid,\n    label,\n    uuid,\n    members\n  };\n}\n\nfunction raidMatchLinux(data) {\n  // for all block devices of type \"raid%\"\n  let result = data;\n  try {\n    data.forEach(element => {\n      if (element.type.startsWith('raid')) {\n        const lines = execSync(`mdadm --export --detail /dev/${element.name}`).toString().split('\\n');\n        const mdData = decodeMdabmData(lines);\n\n        element.label = mdData.label; // <- assign label info\n        element.uuid = mdData.uuid; // <- assign uuid info\n\n        if (mdData.members && mdData.members.length && mdData.raid === element.type) {\n          result = result.map(blockdevice => {\n            if (blockdevice.fsType === 'linux_raid_member' && mdData.members.indexOf(blockdevice.name) >= 0) {\n              blockdevice.group = element.name;\n            }\n            return blockdevice;\n          });\n        }\n      }\n    });\n  } catch (e) {\n    util.noop();\n  }\n  return result;\n}\n\nfunction getDevicesLinux(data) {\n  const result = [];\n  data.forEach(element => {\n    if (element.type.startsWith('disk')) {\n      result.push(element.name);\n    }\n  });\n  return result;\n}\n\nfunction matchDevicesLinux(data) {\n  let result = data;\n  try {\n    const devices = getDevicesLinux(data);\n    result = result.map(blockdevice => {\n      if (blockdevice.type.startsWith('part') || blockdevice.type.startsWith('disk')) {\n        devices.forEach(element => {\n          if (blockdevice.name.startsWith(element)) {\n            blockdevice.device = '/dev/' + element;\n          }\n        });\n      }\n      return blockdevice;\n    });\n  } catch (e) {\n    util.noop();\n  }\n  return result;\n}\n\nfunction getDevicesMac(data) {\n  const result = [];\n  data.forEach(element => {\n    if (element.type.startsWith('disk')) {\n      result.push({ name: element.name, model: element.model, device: element.name });\n    }\n    if (element.type.startsWith('virtual')) {\n      let device = '';\n      result.forEach(e => {\n        if (e.model === element.model) {\n          device = e.device;\n        }\n      });\n      if (device) {\n        result.push({ name: element.name, model: element.model, device });\n      }\n    }\n  });\n  return result;\n}\n\nfunction matchDevicesMac(data) {\n  let result = data;\n  try {\n    const devices = getDevicesMac(data);\n    result = result.map(blockdevice => {\n      if (blockdevice.type.startsWith('part') || blockdevice.type.startsWith('disk') || blockdevice.type.startsWith('virtual')) {\n        devices.forEach(element => {\n          if (blockdevice.name.startsWith(element.name)) {\n            blockdevice.device = element.device;\n          }\n        });\n      }\n      return blockdevice;\n    });\n  } catch (e) {\n    util.noop();\n  }\n  return result;\n}\n\nfunction getDevicesWin(diskDrives) {\n  const result = [];\n  diskDrives.forEach(element => {\n    const lines = element.split('\\r\\n');\n    const device = util.getValue(lines, 'DeviceID', ':');\n    let partitions = element.split('@{DeviceID=');\n    if (partitions.length > 1) {\n      partitions = partitions.slice(1);\n      partitions.forEach(partition => {\n        result.push({ name: partition.split(';')[0].toUpperCase(), device });\n      });\n    }\n  });\n  return result;\n}\n\nfunction matchDevicesWin(data, diskDrives) {\n  const devices = getDevicesWin(diskDrives);\n  data.map(element => {\n    const filteresDevices = devices.filter((e) => { return e.name === element.name.toUpperCase(); });\n    if (filteresDevices.length > 0) {\n      element.device = filteresDevices[0].device;\n    }\n    return element;\n  });\n  return data;\n}\n\nfunction blkStdoutToObject(stdout) {\n  return stdout.toString()\n    .replace(/NAME=/g, '{\"name\":')\n    .replace(/FSTYPE=/g, ',\"fsType\":')\n    .replace(/TYPE=/g, ',\"type\":')\n    .replace(/SIZE=/g, ',\"size\":')\n    .replace(/MOUNTPOINT=/g, ',\"mountpoint\":')\n    .replace(/UUID=/g, ',\"uuid\":')\n    .replace(/ROTA=/g, ',\"rota\":')\n    .replace(/RO=/g, ',\"ro\":')\n    .replace(/RM=/g, ',\"rm\":')\n    .replace(/TRAN=/g, ',\"tran\":')\n    .replace(/SERIAL=/g, ',\"serial\":')\n    .replace(/LABEL=/g, ',\"label\":')\n    .replace(/MODEL=/g, ',\"model\":')\n    .replace(/OWNER=/g, ',\"owner\":')\n    .replace(/GROUP=/g, ',\"group\":')\n    .replace(/\\n/g, '}\\n');\n}\n\nfunction blockDevices(callback) {\n\n  return new Promise((resolve) => {\n    process.nextTick(() => {\n      let data = [];\n      if (_linux) {\n        // see https://wiki.ubuntuusers.de/lsblk/\n        // exec(\"lsblk -bo NAME,TYPE,SIZE,FSTYPE,MOUNTPOINT,UUID,ROTA,RO,TRAN,SERIAL,LABEL,MODEL,OWNER,GROUP,MODE,ALIGNMENT,MIN-IO,OPT-IO,PHY-SEC,LOG-SEC,SCHED,RQ-SIZE,RA,WSAME\", function (error, stdout) {\n        exec('lsblk -bPo NAME,TYPE,SIZE,FSTYPE,MOUNTPOINT,UUID,ROTA,RO,RM,TRAN,SERIAL,LABEL,MODEL,OWNER 2>/dev/null', { maxBuffer: 1024 * 1024 }, function (error, stdout) {\n          if (!error) {\n            let lines = blkStdoutToObject(stdout).split('\\n');\n            data = parseBlk(lines);\n            data = raidMatchLinux(data);\n            data = matchDevicesLinux(data);\n            if (callback) {\n              callback(data);\n            }\n            resolve(data);\n          } else {\n            exec('lsblk -bPo NAME,TYPE,SIZE,FSTYPE,MOUNTPOINT,UUID,ROTA,RO,RM,LABEL,MODEL,OWNER 2>/dev/null', { maxBuffer: 1024 * 1024 }, function (error, stdout) {\n              if (!error) {\n                let lines = blkStdoutToObject(stdout).split('\\n');\n                data = parseBlk(lines);\n                data = raidMatchLinux(data);\n              }\n              if (callback) {\n                callback(data);\n              }\n              resolve(data);\n            });\n          }\n        });\n      }\n      if (_darwin) {\n        exec('diskutil info -all', { maxBuffer: 1024 * 1024 }, function (error, stdout) {\n          if (!error) {\n            let lines = stdout.toString().split('\\n');\n            // parse lines into temp array of devices\n            data = parseDevices(lines);\n            data = matchDevicesMac(data);\n          }\n          if (callback) {\n            callback(data);\n          }\n          resolve(data);\n        });\n      }\n      if (_sunos) {\n        if (callback) { callback(data); }\n        resolve(data);\n      }\n      if (_windows) {\n        let drivetypes = ['Unknown', 'NoRoot', 'Removable', 'Local', 'Network', 'CD/DVD', 'RAM'];\n        try {\n          // util.wmic('logicaldisk get Caption,Description,DeviceID,DriveType,FileSystem,FreeSpace,Name,Size,VolumeName,VolumeSerialNumber /value').then((stdout, error) => {\n          // util.powerShell('Get-CimInstance Win32_logicaldisk | select Caption,DriveType,Name,FileSystem,Size,VolumeSerialNumber,VolumeName | fl').then((stdout, error) => {\n          const workload = [];\n          workload.push(util.powerShell('Get-CimInstance -ClassName Win32_LogicalDisk | select Caption,DriveType,Name,FileSystem,Size,VolumeSerialNumber,VolumeName | fl'));\n          workload.push(util.powerShell('Get-WmiObject -Class Win32_diskdrive | Select-Object -Property PNPDeviceId,DeviceID, Model, Size, @{L=\\'Partitions\\'; E={$_.GetRelated(\\'Win32_DiskPartition\\').GetRelated(\\'Win32_LogicalDisk\\') | Select-Object -Property DeviceID, VolumeName, Size, FreeSpace}} | fl'));\n          util.promiseAll(\n            workload\n          ).then((res) => {\n            let logicalDisks = res.results[0].toString().split(/\\n\\s*\\n/);\n            let diskDrives = res.results[1].toString().split(/\\n\\s*\\n/);\n            logicalDisks.forEach(function (device) {\n              let lines = device.split('\\r\\n');\n              let drivetype = util.getValue(lines, 'drivetype', ':');\n              if (drivetype) {\n                data.push({\n                  name: util.getValue(lines, 'name', ':'),\n                  identifier: util.getValue(lines, 'caption', ':'),\n                  type: 'disk',\n                  fsType: util.getValue(lines, 'filesystem', ':').toLowerCase(),\n                  mount: util.getValue(lines, 'caption', ':'),\n                  size: util.getValue(lines, 'size', ':'),\n                  physical: (drivetype >= 0 && drivetype <= 6) ? drivetypes[drivetype] : drivetypes[0],\n                  uuid: util.getValue(lines, 'volumeserialnumber', ':'),\n                  label: util.getValue(lines, 'volumename', ':'),\n                  model: '',\n                  serial: util.getValue(lines, 'volumeserialnumber', ':'),\n                  removable: drivetype === '2',\n                  protocol: '',\n                  group: '',\n                  device: ''\n                });\n              }\n            });\n            // match devices\n            data = matchDevicesWin(data, diskDrives);\n            if (callback) {\n              callback(data);\n            }\n            resolve(data);\n          });\n        } catch (e) {\n          if (callback) { callback(data); }\n          resolve(data);\n        }\n      }\n      if (_freebsd || _openbsd || _netbsd) {\n        // will follow\n        if (callback) { callback(null); }\n        resolve(null);\n      }\n\n    });\n  });\n}\n\nexports.blockDevices = blockDevices;\n\n// --------------------------\n// FS - speed\n\nfunction calcFsSpeed(rx, wx) {\n  let result = {\n    rx: 0,\n    wx: 0,\n    tx: 0,\n    rx_sec: null,\n    wx_sec: null,\n    tx_sec: null,\n    ms: 0\n  };\n\n  if (_fs_speed && _fs_speed.ms) {\n    result.rx = rx;\n    result.wx = wx;\n    result.tx = result.rx + result.wx;\n    result.ms = Date.now() - _fs_speed.ms;\n    result.rx_sec = (result.rx - _fs_speed.bytes_read) / (result.ms / 1000);\n    result.wx_sec = (result.wx - _fs_speed.bytes_write) / (result.ms / 1000);\n    result.tx_sec = result.rx_sec + result.wx_sec;\n    _fs_speed.rx_sec = result.rx_sec;\n    _fs_speed.wx_sec = result.wx_sec;\n    _fs_speed.tx_sec = result.tx_sec;\n    _fs_speed.bytes_read = result.rx;\n    _fs_speed.bytes_write = result.wx;\n    _fs_speed.bytes_overall = result.rx + result.wx;\n    _fs_speed.ms = Date.now();\n    _fs_speed.last_ms = result.ms;\n  } else {\n    result.rx = rx;\n    result.wx = wx;\n    result.tx = result.rx + result.wx;\n    _fs_speed.rx_sec = null;\n    _fs_speed.wx_sec = null;\n    _fs_speed.tx_sec = null;\n    _fs_speed.bytes_read = result.rx;\n    _fs_speed.bytes_write = result.wx;\n    _fs_speed.bytes_overall = result.rx + result.wx;\n    _fs_speed.ms = Date.now();\n    _fs_speed.last_ms = 0;\n  }\n  return result;\n}\n\nfunction fsStats(callback) {\n\n  return new Promise((resolve) => {\n    process.nextTick(() => {\n      if (_windows || _freebsd || _openbsd || _netbsd || _sunos) {\n        return resolve(null);\n      }\n\n      let result = {\n        rx: 0,\n        wx: 0,\n        tx: 0,\n        rx_sec: null,\n        wx_sec: null,\n        tx_sec: null,\n        ms: 0\n      };\n\n      let rx = 0;\n      let wx = 0;\n      if ((_fs_speed && !_fs_speed.ms) || (_fs_speed && _fs_speed.ms && Date.now() - _fs_speed.ms >= 500)) {\n        if (_linux) {\n          // exec(\"df -k | grep /dev/\", function(error, stdout) {\n          exec('lsblk -r 2>/dev/null | grep /', { maxBuffer: 1024 * 1024 }, function (error, stdout) {\n            if (!error) {\n              let lines = stdout.toString().split('\\n');\n              let fs_filter = [];\n              lines.forEach(function (line) {\n                if (line !== '') {\n                  line = line.trim().split(' ');\n                  if (fs_filter.indexOf(line[0]) === -1) { fs_filter.push(line[0]); }\n                }\n              });\n\n              let output = fs_filter.join('|');\n              exec('cat /proc/diskstats | egrep \"' + output + '\"', { maxBuffer: 1024 * 1024 }, function (error, stdout) {\n                if (!error) {\n                  let lines = stdout.toString().split('\\n');\n                  lines.forEach(function (line) {\n                    line = line.trim();\n                    if (line !== '') {\n                      line = line.replace(/ +/g, ' ').split(' ');\n\n                      rx += parseInt(line[5]) * 512;\n                      wx += parseInt(line[9]) * 512;\n                    }\n                  });\n                  result = calcFsSpeed(rx, wx);\n                }\n                if (callback) {\n                  callback(result);\n                }\n                resolve(result);\n              });\n            } else {\n              if (callback) {\n                callback(result);\n              }\n              resolve(result);\n            }\n          });\n        }\n        if (_darwin) {\n          exec('ioreg -c IOBlockStorageDriver -k Statistics -r -w0 | sed -n \"/IOBlockStorageDriver/,/Statistics/p\" | grep \"Statistics\" | tr -cd \"01234567890,\\n\"', { maxBuffer: 1024 * 1024 }, function (error, stdout) {\n            if (!error) {\n              let lines = stdout.toString().split('\\n');\n              lines.forEach(function (line) {\n                line = line.trim();\n                if (line !== '') {\n                  line = line.split(',');\n\n                  rx += parseInt(line[2]);\n                  wx += parseInt(line[9]);\n                }\n              });\n              result = calcFsSpeed(rx, wx);\n            }\n            if (callback) {\n              callback(result);\n            }\n            resolve(result);\n          });\n        }\n      } else {\n        result.ms = _fs_speed.last_ms;\n        result.rx = _fs_speed.bytes_read;\n        result.wx = _fs_speed.bytes_write;\n        result.tx = _fs_speed.bytes_read + _fs_speed.bytes_write;\n        result.rx_sec = _fs_speed.rx_sec;\n        result.wx_sec = _fs_speed.wx_sec;\n        result.tx_sec = _fs_speed.tx_sec;\n        if (callback) {\n          callback(result);\n        }\n        resolve(result);\n      }\n    });\n  });\n}\n\nexports.fsStats = fsStats;\n\nfunction calcDiskIO(rIO, wIO, rWaitTime, wWaitTime, tWaitTime) {\n  let result = {\n    rIO: 0,\n    wIO: 0,\n    tIO: 0,\n    rIO_sec: null,\n    wIO_sec: null,\n    tIO_sec: null,\n    rWaitTime: 0,\n    wWaitTime: 0,\n    tWaitTime: 0,\n    rWaitPercent: null,\n    wWaitPercent: null,\n    tWaitPercent: null,\n    ms: 0\n  };\n  if (_disk_io && _disk_io.ms) {\n    result.rIO = rIO;\n    result.wIO = wIO;\n    result.tIO = rIO + wIO;\n    result.ms = Date.now() - _disk_io.ms;\n    result.rIO_sec = (result.rIO - _disk_io.rIO) / (result.ms / 1000);\n    result.wIO_sec = (result.wIO - _disk_io.wIO) / (result.ms / 1000);\n    result.tIO_sec = result.rIO_sec + result.wIO_sec;\n    result.rWaitTime = rWaitTime;\n    result.wWaitTime = wWaitTime;\n    result.tWaitTime = tWaitTime;\n    result.rWaitPercent = (result.rWaitTime - _disk_io.rWaitTime) * 100 / (result.ms);\n    result.wWaitPercent = (result.wWaitTime - _disk_io.wWaitTime) * 100 / (result.ms);\n    result.tWaitPercent = (result.tWaitTime - _disk_io.tWaitTime) * 100 / (result.ms);\n    _disk_io.rIO = rIO;\n    _disk_io.wIO = wIO;\n    _disk_io.rIO_sec = result.rIO_sec;\n    _disk_io.wIO_sec = result.wIO_sec;\n    _disk_io.tIO_sec = result.tIO_sec;\n    _disk_io.rWaitTime = rWaitTime;\n    _disk_io.wWaitTime = wWaitTime;\n    _disk_io.tWaitTime = tWaitTime;\n    _disk_io.rWaitPercent = result.rWaitPercent;\n    _disk_io.wWaitPercent = result.wWaitPercent;\n    _disk_io.tWaitPercent = result.tWaitPercent;\n    _disk_io.last_ms = result.ms;\n    _disk_io.ms = Date.now();\n  } else {\n    result.rIO = rIO;\n    result.wIO = wIO;\n    result.tIO = rIO + wIO;\n    result.rWaitTime = rWaitTime;\n    result.wWaitTime = wWaitTime;\n    result.tWaitTime = tWaitTime;\n    _disk_io.rIO = rIO;\n    _disk_io.wIO = wIO;\n    _disk_io.rIO_sec = null;\n    _disk_io.wIO_sec = null;\n    _disk_io.tIO_sec = null;\n    _disk_io.rWaitTime = rWaitTime;\n    _disk_io.wWaitTime = wWaitTime;\n    _disk_io.tWaitTime = tWaitTime;\n    _disk_io.rWaitPercent = null;\n    _disk_io.wWaitPercent = null;\n    _disk_io.tWaitPercent = null;\n    _disk_io.last_ms = 0;\n    _disk_io.ms = Date.now();\n  }\n  return result;\n}\n\nfunction disksIO(callback) {\n\n  return new Promise((resolve) => {\n    process.nextTick(() => {\n      if (_windows) {\n        return resolve(null);\n      }\n      if (_sunos) {\n        return resolve(null);\n      }\n\n      let result = {\n        rIO: 0,\n        wIO: 0,\n        tIO: 0,\n        rIO_sec: null,\n        wIO_sec: null,\n        tIO_sec: null,\n        rWaitTime: 0,\n        wWaitTime: 0,\n        tWaitTime: 0,\n        rWaitPercent: null,\n        wWaitPercent: null,\n        tWaitPercent: null,\n        ms: 0\n      };\n      let rIO = 0;\n      let wIO = 0;\n      let rWaitTime = 0;\n      let wWaitTime = 0;\n      let tWaitTime = 0;\n\n      if ((_disk_io && !_disk_io.ms) || (_disk_io && _disk_io.ms && Date.now() - _disk_io.ms >= 500)) {\n        if (_linux || _freebsd || _openbsd || _netbsd) {\n          // prints Block layer statistics for all mounted volumes\n          // var cmd = \"for mount in `lsblk | grep / | sed -r 's/\u2502 \u2514\u2500//' | cut -d ' ' -f 1`; do cat /sys/block/$mount/stat | sed -r 's/ +/;/g' | sed -r 's/^;//'; done\";\n          // var cmd = \"for mount in `lsblk | grep / | sed 's/[\u2502\u2514\u2500\u251C]//g' | awk '{$1=$1};1' | cut -d ' ' -f 1 | sort -u`; do cat /sys/block/$mount/stat | sed -r 's/ +/;/g' | sed -r 's/^;//'; done\";\n          let cmd = 'for mount in `lsblk 2>/dev/null | grep \" disk \" | sed \"s/[\u2502\u2514\u2500\u251C]//g\" | awk \\'{$1=$1};1\\' | cut -d \" \" -f 1 | sort -u`; do cat /sys/block/$mount/stat | sed -r \"s/ +/;/g\" | sed -r \"s/^;//\"; done';\n\n          exec(cmd, { maxBuffer: 1024 * 1024 }, function (error, stdout) {\n            if (!error) {\n              let lines = stdout.split('\\n');\n              lines.forEach(function (line) {\n                // ignore empty lines\n                if (!line) { return; }\n\n                // sum r/wIO of all disks to compute all disks IO\n                let stats = line.split(';');\n                rIO += parseInt(stats[0]);\n                wIO += parseInt(stats[4]);\n                rWaitTime += parseInt(stats[3]);\n                wWaitTime += parseInt(stats[7]);\n                tWaitTime += parseInt(stats[10]);\n              });\n              result = calcDiskIO(rIO, wIO, rWaitTime, wWaitTime, tWaitTime);\n\n              if (callback) {\n                callback(result);\n              }\n              resolve(result);\n            } else {\n              if (callback) {\n                callback(result);\n              }\n              resolve(result);\n            }\n          });\n        }\n        if (_darwin) {\n          exec('ioreg -c IOBlockStorageDriver -k Statistics -r -w0 | sed -n \"/IOBlockStorageDriver/,/Statistics/p\" | grep \"Statistics\" | tr -cd \"01234567890,\\n\"', { maxBuffer: 1024 * 1024 }, function (error, stdout) {\n            if (!error) {\n              let lines = stdout.toString().split('\\n');\n              lines.forEach(function (line) {\n                line = line.trim();\n                if (line !== '') {\n                  line = line.split(',');\n\n                  rIO += parseInt(line[10]);\n                  wIO += parseInt(line[0]);\n                }\n              });\n              result = calcDiskIO(rIO, wIO, rWaitTime, wWaitTime, tWaitTime);\n            }\n            if (callback) {\n              callback(result);\n            }\n            resolve(result);\n          });\n        }\n      } else {\n        result.rIO = _disk_io.rIO;\n        result.wIO = _disk_io.wIO;\n        result.tIO = _disk_io.rIO + _disk_io.wIO;\n        result.ms = _disk_io.last_ms;\n        result.rIO_sec = _disk_io.rIO_sec;\n        result.wIO_sec = _disk_io.wIO_sec;\n        result.tIO_sec = _disk_io.tIO_sec;\n        result.rWaitTime = _disk_io.rWaitTime;\n        result.wWaitTime = _disk_io.wWaitTime;\n        result.tWaitTime = _disk_io.tWaitTime;\n        result.rWaitPercent = _disk_io.rWaitPercent;\n        result.wWaitPercent = _disk_io.wWaitPercent;\n        result.tWaitPercent = _disk_io.tWaitPercent;\n        if (callback) {\n          callback(result);\n        }\n        resolve(result);\n      }\n    });\n  });\n}\n\nexports.disksIO = disksIO;\n\nfunction diskLayout(callback) {\n\n  function getVendorFromModel(model) {\n    const diskManufacturers = [\n      { pattern: 'WESTERN.*', manufacturer: 'Western Digital' },\n      { pattern: '^WDC.*', manufacturer: 'Western Digital' },\n      { pattern: 'WD.*', manufacturer: 'Western Digital' },\n      { pattern: 'TOSHIBA.*', manufacturer: 'Toshiba' },\n      { pattern: 'HITACHI.*', manufacturer: 'Hitachi' },\n      { pattern: '^IC.*', manufacturer: 'Hitachi' },\n      { pattern: '^HTS.*', manufacturer: 'Hitachi' },\n      { pattern: 'SANDISK.*', manufacturer: 'SanDisk' },\n      { pattern: 'KINGSTON.*', manufacturer: 'Kingston Technology' },\n      { pattern: '^SONY.*', manufacturer: 'Sony' },\n      { pattern: 'TRANSCEND.*', manufacturer: 'Transcend' },\n      { pattern: 'SAMSUNG.*', manufacturer: 'Samsung' },\n      { pattern: '^ST(?!I\\\\ ).*', manufacturer: 'Seagate' },\n      { pattern: '^STI\\\\ .*', manufacturer: 'SimpleTech' },\n      { pattern: '^D...-.*', manufacturer: 'IBM' },\n      { pattern: '^IBM.*', manufacturer: 'IBM' },\n      { pattern: '^FUJITSU.*', manufacturer: 'Fujitsu' },\n      { pattern: '^MP.*', manufacturer: 'Fujitsu' },\n      { pattern: '^MK.*', manufacturer: 'Toshiba' },\n      { pattern: 'MAXTO.*', manufacturer: 'Maxtor' },\n      { pattern: 'PIONEER.*', manufacturer: 'Pioneer' },\n      { pattern: 'PHILIPS.*', manufacturer: 'Philips' },\n      { pattern: 'QUANTUM.*', manufacturer: 'Quantum Technology' },\n      { pattern: 'FIREBALL.*', manufacturer: 'Quantum Technology' },\n      { pattern: '^VBOX.*', manufacturer: 'VirtualBox' },\n      { pattern: 'CORSAIR.*', manufacturer: 'Corsair Components' },\n      { pattern: 'CRUCIAL.*', manufacturer: 'Crucial' },\n      { pattern: 'ECM.*', manufacturer: 'ECM' },\n      { pattern: 'INTEL.*', manufacturer: 'INTEL' },\n      { pattern: 'EVO.*', manufacturer: 'Samsung' },\n      { pattern: 'APPLE.*', manufacturer: 'Apple' },\n    ];\n\n    let result = '';\n    if (model) {\n      model = model.toUpperCase();\n      diskManufacturers.forEach((manufacturer) => {\n        const re = RegExp(manufacturer.pattern);\n        if (re.test(model)) { result = manufacturer.manufacturer; }\n      });\n    }\n    return result;\n  }\n\n  return new Promise((resolve) => {\n    process.nextTick(() => {\n\n      const commitResult = res => {\n        for (let i = 0; i < res.length; i++) {\n          delete res[i].BSDName;\n        }\n        if (callback) {\n          callback(res);\n        }\n        resolve(res);\n      };\n\n      let result = [];\n      let cmd = '';\n\n      if (_linux) {\n        let cmdFullSmart = '';\n\n        exec('export LC_ALL=C; lsblk -ablJO 2>/dev/null; unset LC_ALL', { maxBuffer: 1024 * 1024 }, function (error, stdout) {\n          if (!error) {\n            try {\n              const out = stdout.toString().trim();\n              let devices = [];\n              try {\n                const outJSON = JSON.parse(out);\n                if (outJSON && {}.hasOwnProperty.call(outJSON, 'blockdevices')) {\n                  devices = outJSON.blockdevices.filter(item => { return (item.type === 'disk') && item.size > 0 && (item.model !== null || (item.mountpoint === null && item.label === null && item.fstype === null && item.parttype === null && item.path && item.path.indexOf('/ram') !== 0 && item.path.indexOf('/loop') !== 0 && item['disc-max'] && item['disc-max'] !== 0)); });\n                }\n              } catch (e) {\n                // fallback to older version of lsblk\n                try {\n                  const out2 = execSync('export LC_ALL=C; lsblk -bPo NAME,TYPE,SIZE,FSTYPE,MOUNTPOINT,UUID,ROTA,RO,RM,LABEL,MODEL,OWNER,GROUP 2>/dev/null; unset LC_ALL').toString();\n                  let lines = blkStdoutToObject(out2).split('\\n');\n                  const data = parseBlk(lines);\n                  devices = data.filter(item => { return (item.type === 'disk') && item.size > 0 && ((item.model !== null && item.model !== '') || (item.mount === '' && item.label === '' && item.fsType === '')); });\n                } catch (e) {\n                  util.noop();\n                }\n              }\n              devices.forEach((device) => {\n                let mediumType = '';\n                const BSDName = '/dev/' + device.name;\n                const logical = device.name;\n                try {\n                  mediumType = execSync('cat /sys/block/' + logical + '/queue/rotational 2>/dev/null').toString().split('\\n')[0];\n                } catch (e) {\n                  util.noop();\n                }\n                let interfaceType = device.tran ? device.tran.toUpperCase().trim() : '';\n                if (interfaceType === 'NVME') {\n                  mediumType = '2';\n                  interfaceType = 'PCIe';\n                }\n                result.push({\n                  device: BSDName,\n                  type: (mediumType === '0' ? 'SSD' : (mediumType === '1' ? 'HD' : (mediumType === '2' ? 'NVMe' : (device.model && device.model.indexOf('SSD') > -1 ? 'SSD' : (device.model && device.model.indexOf('NVM') > -1 ? 'NVMe' : 'HD'))))),\n                  name: device.model || '',\n                  vendor: getVendorFromModel(device.model) || (device.vendor ? device.vendor.trim() : ''),\n                  size: device.size || 0,\n                  bytesPerSector: null,\n                  totalCylinders: null,\n                  totalHeads: null,\n                  totalSectors: null,\n                  totalTracks: null,\n                  tracksPerCylinder: null,\n                  sectorsPerTrack: null,\n                  firmwareRevision: device.rev ? device.rev.trim() : '',\n                  serialNum: device.serial ? device.serial.trim() : '',\n                  interfaceType: interfaceType,\n                  smartStatus: 'unknown',\n                  temperature: null,\n                  BSDName: BSDName\n                });\n                cmd += `printf \"\\n${BSDName}|\"; smartctl -H ${BSDName} | grep overall;`;\n                cmdFullSmart += `${cmdFullSmart ? 'printf \",\";' : ''}smartctl -a -j ${BSDName};`;\n              });\n            } catch (e) {\n              util.noop();\n            }\n          }\n          // check S.M.A.R.T. status\n          if (cmdFullSmart) {\n            exec(cmdFullSmart, { maxBuffer: 1024 * 1024 }, function (error, stdout) {\n              try {\n                const data = JSON.parse(`[${stdout}]`);\n                data.forEach(disk => {\n                  const diskBSDName = disk.smartctl.argv[disk.smartctl.argv.length - 1];\n\n                  for (let i = 0; i < result.length; i++) {\n                    if (result[i].BSDName === diskBSDName) {\n                      result[i].smartStatus = (disk.smart_status.passed ? 'Ok' : (disk.smart_status.passed === false ? 'Predicted Failure' : 'unknown'));\n                      if (disk.temperature && disk.temperature.current) {\n                        result[i].temperature = disk.temperature.current;\n                      }\n                      result[i].smartData = disk;\n                    }\n                  }\n                });\n                commitResult(result);\n              } catch (e) {\n                if (cmd) {\n                  cmd = cmd + 'printf \"\\n\"';\n                  exec(cmd, { maxBuffer: 1024 * 1024 }, function (error, stdout) {\n                    let lines = stdout.toString().split('\\n');\n                    lines.forEach(line => {\n                      if (line) {\n                        let parts = line.split('|');\n                        if (parts.length === 2) {\n                          let BSDName = parts[0];\n                          parts[1] = parts[1].trim();\n                          let parts2 = parts[1].split(':');\n                          if (parts2.length === 2) {\n                            parts2[1] = parts2[1].trim();\n                            let status = parts2[1].toLowerCase();\n                            for (let i = 0; i < result.length; i++) {\n                              if (result[i].BSDName === BSDName) {\n                                result[i].smartStatus = (status === 'passed' ? 'Ok' : (status === 'failed!' ? 'Predicted Failure' : 'unknown'));\n                              }\n                            }\n                          }\n                        }\n                      }\n                    });\n                    commitResult(result);\n                  });\n                } else {\n                  commitResult(result);\n                }\n              }\n            });\n          } else {\n            commitResult(result);\n          }\n        });\n      }\n      if (_freebsd || _openbsd || _netbsd) {\n        if (callback) { callback(result); }\n        resolve(result);\n      }\n      if (_sunos) {\n        if (callback) { callback(result); }\n        resolve(result);\n      }\n      if (_darwin) {\n        exec('system_profiler SPSerialATADataType SPNVMeDataType SPUSBDataType', { maxBuffer: 1024 * 1024 }, function (error, stdout) {\n          if (!error) {\n            // split by type:\n            let lines = stdout.toString().split('\\n');\n            let linesSATA = [];\n            let linesNVMe = [];\n            let linesUSB = [];\n            let dataType = 'SATA';\n            lines.forEach(line => {\n              if (line === 'NVMExpress:') { dataType = 'NVMe'; }\n              else if (line === 'USB:') { dataType = 'USB'; }\n              else if (line === 'SATA/SATA Express:') { dataType = 'SATA'; }\n              else if (dataType === 'SATA') { linesSATA.push(line); }\n              else if (dataType === 'NVMe') { linesNVMe.push(line); }\n              else if (dataType === 'USB') { linesUSB.push(line); }\n            });\n            try {\n              // Serial ATA Drives\n              let devices = linesSATA.join('\\n').split(' Physical Interconnect: ');\n              devices.shift();\n              devices.forEach(function (device) {\n                device = 'InterfaceType: ' + device;\n                let lines = device.split('\\n');\n                const mediumType = util.getValue(lines, 'Medium Type', ':', true).trim();\n                const sizeStr = util.getValue(lines, 'capacity', ':', true).trim();\n                const BSDName = util.getValue(lines, 'BSD Name', ':', true).trim();\n                if (sizeStr) {\n                  let sizeValue = 0;\n                  if (sizeStr.indexOf('(') >= 0) {\n                    sizeValue = parseInt(sizeStr.match(/\\(([^)]+)\\)/)[1].replace(/\\./g, '').replace(/,/g, '').replace(/\\s/g, ''));\n                  }\n                  if (!sizeValue) {\n                    sizeValue = parseInt(sizeStr);\n                  }\n                  if (sizeValue) {\n                    const smartStatusString = util.getValue(lines, 'S.M.A.R.T. status', ':', true).trim().toLowerCase();\n                    result.push({\n                      device: BSDName,\n                      type: mediumType.startsWith('Solid') ? 'SSD' : 'HD',\n                      name: util.getValue(lines, 'Model', ':', true).trim(),\n                      vendor: getVendorFromModel(util.getValue(lines, 'Model', ':', true).trim()) || util.getValue(lines, 'Manufacturer', ':', true),\n                      size: sizeValue,\n                      bytesPerSector: null,\n                      totalCylinders: null,\n                      totalHeads: null,\n                      totalSectors: null,\n                      totalTracks: null,\n                      tracksPerCylinder: null,\n                      sectorsPerTrack: null,\n                      firmwareRevision: util.getValue(lines, 'Revision', ':', true).trim(),\n                      serialNum: util.getValue(lines, 'Serial Number', ':', true).trim(),\n                      interfaceType: util.getValue(lines, 'InterfaceType', ':', true).trim(),\n                      smartStatus: smartStatusString === 'verified' ? 'OK' : smartStatusString || 'unknown',\n                      temperature: null,\n                      BSDName: BSDName\n                    });\n                    cmd = cmd + 'printf \"\\n' + BSDName + '|\"; diskutil info /dev/' + BSDName + ' | grep SMART;';\n                  }\n                }\n              });\n            } catch (e) {\n              util.noop();\n            }\n\n            // NVME Drives\n            try {\n              let devices = linesNVMe.join('\\n').split('\\n\\n          Capacity:');\n              devices.shift();\n              devices.forEach(function (device) {\n                device = '!Capacity: ' + device;\n                let lines = device.split('\\n');\n                const linkWidth = util.getValue(lines, 'link width', ':', true).trim();\n                const sizeStr = util.getValue(lines, '!capacity', ':', true).trim();\n                const BSDName = util.getValue(lines, 'BSD Name', ':', true).trim();\n                if (sizeStr) {\n                  let sizeValue = 0;\n                  if (sizeStr.indexOf('(') >= 0) {\n                    sizeValue = parseInt(sizeStr.match(/\\(([^)]+)\\)/)[1].replace(/\\./g, '').replace(/,/g, '').replace(/\\s/g, ''));\n                  }\n                  if (!sizeValue) {\n                    sizeValue = parseInt(sizeStr);\n                  }\n                  if (sizeValue) {\n                    const smartStatusString = util.getValue(lines, 'S.M.A.R.T. status', ':', true).trim().toLowerCase();\n                    result.push({\n                      device: BSDName,\n                      type: 'NVMe',\n                      name: util.getValue(lines, 'Model', ':', true).trim(),\n                      vendor: getVendorFromModel(util.getValue(lines, 'Model', ':', true).trim()),\n                      size: sizeValue,\n                      bytesPerSector: null,\n                      totalCylinders: null,\n                      totalHeads: null,\n                      totalSectors: null,\n                      totalTracks: null,\n                      tracksPerCylinder: null,\n                      sectorsPerTrack: null,\n                      firmwareRevision: util.getValue(lines, 'Revision', ':', true).trim(),\n                      serialNum: util.getValue(lines, 'Serial Number', ':', true).trim(),\n                      interfaceType: ('PCIe ' + linkWidth).trim(),\n                      smartStatus: smartStatusString === 'verified' ? 'OK' : smartStatusString || 'unknown',\n                      temperature: null,\n                      BSDName: BSDName\n                    });\n                    cmd = cmd + 'printf \"\\n' + BSDName + '|\"; diskutil info /dev/' + BSDName + ' | grep SMART;';\n                  }\n                }\n              });\n            } catch (e) {\n              util.noop();\n            }\n            // USB Drives\n            try {\n              let devices = linesUSB.join('\\n').replaceAll('Media:\\n ', 'Model:').split('\\n\\n          Product ID:');\n              devices.shift();\n              devices.forEach(function (device) {\n                let lines = device.split('\\n');\n                const sizeStr = util.getValue(lines, 'Capacity', ':', true).trim();\n                const BSDName = util.getValue(lines, 'BSD Name', ':', true).trim();\n                if (sizeStr) {\n                  let sizeValue = 0;\n                  if (sizeStr.indexOf('(') >= 0) {\n                    sizeValue = parseInt(sizeStr.match(/\\(([^)]+)\\)/)[1].replace(/\\./g, '').replace(/,/g, '').replace(/\\s/g, ''));\n                  }\n                  if (!sizeValue) {\n                    sizeValue = parseInt(sizeStr);\n                  }\n                  if (sizeValue) {\n                    const smartStatusString = util.getValue(lines, 'S.M.A.R.T. status', ':', true).trim().toLowerCase();\n                    result.push({\n                      device: BSDName,\n                      type: 'USB',\n                      name: util.getValue(lines, 'Model', ':', true).trim().replaceAll(':', ''),\n                      vendor: getVendorFromModel(util.getValue(lines, 'Model', ':', true).trim()),\n                      size: sizeValue,\n                      bytesPerSector: null,\n                      totalCylinders: null,\n                      totalHeads: null,\n                      totalSectors: null,\n                      totalTracks: null,\n                      tracksPerCylinder: null,\n                      sectorsPerTrack: null,\n                      firmwareRevision: util.getValue(lines, 'Revision', ':', true).trim(),\n                      serialNum: util.getValue(lines, 'Serial Number', ':', true).trim(),\n                      interfaceType: 'USB',\n                      smartStatus: smartStatusString === 'verified' ? 'OK' : smartStatusString || 'unknown',\n                      temperature: null,\n                      BSDName: BSDName\n                    });\n                    cmd = cmd + 'printf \"\\n' + BSDName + '|\"; diskutil info /dev/' + BSDName + ' | grep SMART;';\n                  }\n                }\n              });\n            } catch (e) {\n              util.noop();\n            }\n            if (cmd) {\n              cmd = cmd + 'printf \"\\n\"';\n              exec(cmd, { maxBuffer: 1024 * 1024 }, function (error, stdout) {\n                let lines = stdout.toString().split('\\n');\n                lines.forEach(line => {\n                  if (line) {\n                    let parts = line.split('|');\n                    if (parts.length === 2) {\n                      let BSDName = parts[0];\n                      parts[1] = parts[1].trim();\n                      let parts2 = parts[1].split(':');\n                      if (parts2.length === 2) {\n                        parts2[1] = parts2[1].trim();\n                        let status = parts2[1].toLowerCase();\n                        for (let i = 0; i < result.length; i++) {\n                          if (result[i].BSDName === BSDName) {\n                            result[i].smartStatus = (status === 'not supported' ? 'not supported' : (status === 'verified' ? 'Ok' : (status === 'failing' ? 'Predicted Failure' : 'unknown')));\n                          }\n                        }\n                      }\n                    }\n                  }\n                });\n                for (let i = 0; i < result.length; i++) {\n                  delete result[i].BSDName;\n                }\n                if (callback) {\n                  callback(result);\n                }\n                resolve(result);\n              });\n            } else {\n              for (let i = 0; i < result.length; i++) {\n                delete result[i].BSDName;\n              }\n              if (callback) {\n                callback(result);\n              }\n              resolve(result);\n            }\n          }\n        });\n      }\n      if (_windows) {\n        try {\n          const workload = [];\n          workload.push(util.powerShell('Get-CimInstance Win32_DiskDrive | select Caption,Size,Status,PNPDeviceId,DeviceId,BytesPerSector,TotalCylinders,TotalHeads,TotalSectors,TotalTracks,TracksPerCylinder,SectorsPerTrack,FirmwareRevision,SerialNumber,InterfaceType | fl'));\n          workload.push(util.powerShell('Get-PhysicalDisk | select BusType,MediaType,FriendlyName,Model,SerialNumber,Size | fl'));\n          if (util.smartMonToolsInstalled()) {\n            try {\n              const smartDev = JSON.parse(execSync('smartctl --scan -j').toString());\n              if (smartDev && smartDev.devices && smartDev.devices.length > 0) {\n                smartDev.devices.forEach((dev) => {\n                  workload.push(execPromiseSave(`smartctl -j -a ${dev.name}`, util.execOptsWin));\n                });\n              }\n            } catch (e) {\n              util.noop();\n            }\n          }\n          util.promiseAll(\n            workload\n          ).then((data) => {\n            let devices = data.results[0].toString().split(/\\n\\s*\\n/);\n            devices.forEach(function (device) {\n              let lines = device.split('\\r\\n');\n              const size = util.getValue(lines, 'Size', ':').trim();\n              const status = util.getValue(lines, 'Status', ':').trim().toLowerCase();\n              if (size) {\n                result.push({\n                  device: util.getValue(lines, 'DeviceId', ':'),  // changed from PNPDeviceId to DeviceID (be be able to match devices)\n                  type: device.indexOf('SSD') > -1 ? 'SSD' : 'HD',  // just a starting point ... better: MSFT_PhysicalDisk - Media Type ... see below\n                  name: util.getValue(lines, 'Caption', ':'),\n                  vendor: getVendorFromModel(util.getValue(lines, 'Caption', ':', true).trim()),\n                  size: parseInt(size),\n                  bytesPerSector: parseInt(util.getValue(lines, 'BytesPerSector', ':')),\n                  totalCylinders: parseInt(util.getValue(lines, 'TotalCylinders', ':')),\n                  totalHeads: parseInt(util.getValue(lines, 'TotalHeads', ':')),\n                  totalSectors: parseInt(util.getValue(lines, 'TotalSectors', ':')),\n                  totalTracks: parseInt(util.getValue(lines, 'TotalTracks', ':')),\n                  tracksPerCylinder: parseInt(util.getValue(lines, 'TracksPerCylinder', ':')),\n                  sectorsPerTrack: parseInt(util.getValue(lines, 'SectorsPerTrack', ':')),\n                  firmwareRevision: util.getValue(lines, 'FirmwareRevision', ':').trim(),\n                  serialNum: util.getValue(lines, 'SerialNumber', ':').trim(),\n                  interfaceType: util.getValue(lines, 'InterfaceType', ':').trim(),\n                  smartStatus: (status === 'ok' ? 'Ok' : (status === 'degraded' ? 'Degraded' : (status === 'pred fail' ? 'Predicted Failure' : 'Unknown'))),\n                  temperature: null,\n                });\n              }\n            });\n            devices = data.results[1].split(/\\n\\s*\\n/);\n            devices.forEach(function (device) {\n              let lines = device.split('\\r\\n');\n              const serialNum = util.getValue(lines, 'SerialNumber', ':').trim();\n              const name = util.getValue(lines, 'FriendlyName', ':').trim().replace('Msft ', 'Microsoft');\n              const size = util.getValue(lines, 'Size', ':').trim();\n              const model = util.getValue(lines, 'Model', ':').trim();\n              const interfaceType = util.getValue(lines, 'BusType', ':').trim();\n              let mediaType = util.getValue(lines, 'MediaType', ':').trim();\n              if (mediaType === '3' || mediaType === 'HDD') { mediaType = 'HD'; }\n              if (mediaType === '4') { mediaType = 'SSD'; }\n              if (mediaType === '5') { mediaType = 'SCM'; }\n              if (mediaType === 'Unspecified' && (model.toLowerCase().indexOf('virtual') > -1 || model.toLowerCase().indexOf('vbox') > -1)) { mediaType = 'Virtual'; }\n              if (size) {\n                let i = util.findObjectByKey(result, 'serialNum', serialNum);\n                if (i === -1 || serialNum === '') {\n                  i = util.findObjectByKey(result, 'name', name);\n                }\n                if (i != -1) {\n                  result[i].type = mediaType;\n                  result[i].interfaceType = interfaceType;\n                }\n              }\n            });\n            // S.M.A.R.T\n            data.results.shift();\n            data.results.shift();\n            if (data.results.length) {\n              data.results.forEach((smartStr) => {\n                try {\n                  const smartData = JSON.parse(smartStr);\n                  if (smartData.serial_number) {\n                    const serialNum = smartData.serial_number;\n                    let i = util.findObjectByKey(result, 'serialNum', serialNum);\n                    if (i != -1) {\n                      result[i].smartStatus = (smartData.smart_status && smartData.smart_status.passed ? 'Ok' : (smartData.smart_status && smartData.smart_status.passed === false ? 'Predicted Failure' : 'unknown'));\n                      if (smartData.temperature && smartData.temperature.current) {\n                        result[i].temperature = smartData.temperature.current;\n                      }\n                      result[i].smartData = smartData;\n                    }\n                  }\n                } catch (e) {\n                  util.noop();\n                }\n              });\n            }\n            if (callback) {\n              callback(result);\n            }\n            resolve(result);\n          });\n        } catch (e) {\n          if (callback) { callback(result); }\n          resolve(result);\n        }\n      }\n    });\n  });\n}\n\nexports.diskLayout = diskLayout;\n", "'use strict';\n// @ts-check\n// ==================================================================================\n// network.js\n// ----------------------------------------------------------------------------------\n// Description:   System Information - library\n//                for Node.js\n// Copyright:     (c) 2014 - 2024\n// Author:        Sebastian Hildebrandt\n// ----------------------------------------------------------------------------------\n// License:       MIT\n// ==================================================================================\n// 9. Network\n// ----------------------------------------------------------------------------------\n\nconst os = require('os');\nconst exec = require('child_process').exec;\nconst execSync = require('child_process').execSync;\nconst fs = require('fs');\nconst util = require('./util');\n\nlet _platform = process.platform;\n\nconst _linux = (_platform === 'linux' || _platform === 'android');\nconst _darwin = (_platform === 'darwin');\nconst _windows = (_platform === 'win32');\nconst _freebsd = (_platform === 'freebsd');\nconst _openbsd = (_platform === 'openbsd');\nconst _netbsd = (_platform === 'netbsd');\nconst _sunos = (_platform === 'sunos');\n\nlet _network = {};\nlet _default_iface = '';\nlet _ifaces = {};\nlet _dhcpNics = [];\nlet _networkInterfaces = [];\nlet _mac = {};\nlet pathToIp;\n\nfunction getDefaultNetworkInterface() {\n\n  let ifacename = '';\n  let ifacenameFirst = '';\n  try {\n    let ifaces = os.networkInterfaces();\n\n    let scopeid = 9999;\n\n    // fallback - \"first\" external interface (sorted by scopeid)\n    for (let dev in ifaces) {\n      if ({}.hasOwnProperty.call(ifaces, dev)) {\n        ifaces[dev].forEach(function (details) {\n          if (details && details.internal === false) {\n            ifacenameFirst = ifacenameFirst || dev; // fallback if no scopeid\n            if (details.scopeid && details.scopeid < scopeid) {\n              ifacename = dev;\n              scopeid = details.scopeid;\n            }\n          }\n        });\n      }\n    }\n    ifacename = ifacename || ifacenameFirst || '';\n\n    if (_windows) {\n      // https://www.inetdaemon.com/tutorials/internet/ip/routing/default_route.shtml\n      let defaultIp = '';\n      const cmd = 'netstat -r';\n      const result = execSync(cmd, util.execOptsWin);\n      const lines = result.toString().split(os.EOL);\n      lines.forEach(line => {\n        line = line.replace(/\\s+/g, ' ').trim();\n        if (line.indexOf('0.0.0.0 0.0.0.0') > -1 && !(/[a-zA-Z]/.test(line))) {\n          const parts = line.split(' ');\n          if (parts.length >= 5) {\n            defaultIp = parts[parts.length - 2];\n          }\n        }\n      });\n      if (defaultIp) {\n        for (let dev in ifaces) {\n          if ({}.hasOwnProperty.call(ifaces, dev)) {\n            ifaces[dev].forEach(function (details) {\n              if (details && details.address && details.address === defaultIp) {\n                ifacename = dev;\n              }\n            });\n          }\n        }\n      }\n    }\n    if (_linux) {\n      let cmd = 'ip route 2> /dev/null | grep default';\n      let result = execSync(cmd);\n      let parts = result.toString().split('\\n')[0].split(/\\s+/);\n      if (parts[0] === 'none' && parts[5]) {\n        ifacename = parts[5];\n      } else if (parts[4]) {\n        ifacename = parts[4];\n      }\n\n      if (ifacename.indexOf(':') > -1) {\n        ifacename = ifacename.split(':')[1].trim();\n      }\n    }\n    if (_darwin || _freebsd || _openbsd || _netbsd || _sunos) {\n      let cmd = '';\n      if (_linux) { cmd = 'ip route 2> /dev/null | grep default | awk \\'{print $5}\\''; }\n      if (_darwin) { cmd = 'route -n get default 2>/dev/null | grep interface: | awk \\'{print $2}\\''; }\n      if (_freebsd || _openbsd || _netbsd || _sunos) { cmd = 'route get 0.0.0.0 | grep interface:'; }\n      let result = execSync(cmd);\n      ifacename = result.toString().split('\\n')[0];\n      if (ifacename.indexOf(':') > -1) {\n        ifacename = ifacename.split(':')[1].trim();\n      }\n    }\n  } catch (e) {\n    util.noop();\n  }\n  if (ifacename) { _default_iface = ifacename; }\n  return _default_iface;\n}\n\nexports.getDefaultNetworkInterface = getDefaultNetworkInterface;\n\nfunction getMacAddresses() {\n  let iface = '';\n  let mac = '';\n  let result = {};\n  if (_linux || _freebsd || _openbsd || _netbsd) {\n    if (typeof pathToIp === 'undefined') {\n      try {\n        const lines = execSync('which ip').toString().split('\\n');\n        if (lines.length && lines[0].indexOf(':') === -1 && lines[0].indexOf('/') === 0) {\n          pathToIp = lines[0];\n        } else {\n          pathToIp = '';\n        }\n      } catch (e) {\n        pathToIp = '';\n      }\n    }\n    try {\n      const cmd = 'export LC_ALL=C; ' + ((pathToIp) ? pathToIp + ' link show up' : '/sbin/ifconfig') + '; unset LC_ALL';\n      let res = execSync(cmd);\n      const lines = res.toString().split('\\n');\n      for (let i = 0; i < lines.length; i++) {\n        if (lines[i] && lines[i][0] !== ' ') {\n          if (pathToIp) {\n            let nextline = lines[i + 1].trim().split(' ');\n            if (nextline[0] === 'link/ether') {\n              iface = lines[i].split(' ')[1];\n              iface = iface.slice(0, iface.length - 1);\n              mac = nextline[1];\n            }\n          } else {\n            iface = lines[i].split(' ')[0];\n            mac = lines[i].split('HWaddr ')[1];\n          }\n\n          if (iface && mac) {\n            result[iface] = mac.trim();\n            iface = '';\n            mac = '';\n          }\n        }\n      }\n    } catch (e) {\n      util.noop();\n    }\n  }\n  if (_darwin) {\n    try {\n      const cmd = '/sbin/ifconfig';\n      let res = execSync(cmd);\n      const lines = res.toString().split('\\n');\n      for (let i = 0; i < lines.length; i++) {\n        if (lines[i] && lines[i][0] !== '\\t' && lines[i].indexOf(':') > 0) {\n          iface = lines[i].split(':')[0];\n        } else if (lines[i].indexOf('\\tether ') === 0) {\n          mac = lines[i].split('\\tether ')[1];\n          if (iface && mac) {\n            result[iface] = mac.trim();\n            iface = '';\n            mac = '';\n          }\n        }\n      }\n    } catch (e) {\n      util.noop();\n    }\n  }\n  return result;\n}\n\nfunction networkInterfaceDefault(callback) {\n\n  return new Promise((resolve) => {\n    process.nextTick(() => {\n      let result = getDefaultNetworkInterface();\n      if (callback) { callback(result); }\n      resolve(result);\n    });\n  });\n}\n\nexports.networkInterfaceDefault = networkInterfaceDefault;\n\n// --------------------------\n// NET - interfaces\n\nfunction parseLinesWindowsNics(sections, nconfigsections) {\n  let nics = [];\n  for (let i in sections) {\n    if ({}.hasOwnProperty.call(sections, i)) {\n\n      if (sections[i].trim() !== '') {\n\n        let lines = sections[i].trim().split('\\r\\n');\n        let linesNicConfig = nconfigsections && nconfigsections[i] ? nconfigsections[i].trim().split('\\r\\n') : [];\n        let netEnabled = util.getValue(lines, 'NetEnabled', ':');\n        let adapterType = util.getValue(lines, 'AdapterTypeID', ':') === '9' ? 'wireless' : 'wired';\n        let ifacename = util.getValue(lines, 'Name', ':').replace(/\\]/g, ')').replace(/\\[/g, '(');\n        let iface = util.getValue(lines, 'NetConnectionID', ':').replace(/\\]/g, ')').replace(/\\[/g, '(');\n        if (ifacename.toLowerCase().indexOf('wi-fi') >= 0 || ifacename.toLowerCase().indexOf('wireless') >= 0) {\n          adapterType = 'wireless';\n        }\n        if (netEnabled !== '') {\n          const speed = parseInt(util.getValue(lines, 'speed', ':').trim(), 10) / 1000000;\n          nics.push({\n            mac: util.getValue(lines, 'MACAddress', ':').toLowerCase(),\n            dhcp: util.getValue(linesNicConfig, 'dhcpEnabled', ':').toLowerCase() === 'true',\n            name: ifacename,\n            iface,\n            netEnabled: netEnabled === 'TRUE',\n            speed: isNaN(speed) ? null : speed,\n            operstate: util.getValue(lines, 'NetConnectionStatus', ':') === '2' ? 'up' : 'down',\n            type: adapterType\n          });\n        }\n      }\n    }\n  }\n  return nics;\n}\n\nfunction getWindowsNics() {\n  return new Promise((resolve) => {\n    process.nextTick(() => {\n      let cmd = 'Get-CimInstance Win32_NetworkAdapter | fl *' + '; echo \\'#-#-#-#\\';';\n      cmd += 'Get-CimInstance Win32_NetworkAdapterConfiguration | fl DHCPEnabled' + '';\n      try {\n        util.powerShell(cmd).then((data) => {\n          data = data.split('#-#-#-#');\n          const nsections = (data[0] || '').split(/\\n\\s*\\n/);\n          const nconfigsections = (data[1] || '').split(/\\n\\s*\\n/);\n          resolve(parseLinesWindowsNics(nsections, nconfigsections));\n        });\n      } catch (e) {\n        resolve([]);\n      }\n    });\n  });\n}\n\nfunction getWindowsDNSsuffixes() {\n\n  let iface = {};\n\n  let dnsSuffixes = {\n    primaryDNS: '',\n    exitCode: 0,\n    ifaces: [],\n  };\n\n  try {\n    const ipconfig = execSync('ipconfig /all', util.execOptsWin);\n    const ipconfigArray = ipconfig.split('\\r\\n\\r\\n');\n\n    ipconfigArray.forEach((element, index) => {\n\n      if (index == 1) {\n        const longPrimaryDNS = element.split('\\r\\n').filter((element) => {\n          return element.toUpperCase().includes('DNS');\n        });\n        const primaryDNS = longPrimaryDNS[0].substring(longPrimaryDNS[0].lastIndexOf(':') + 1);\n        dnsSuffixes.primaryDNS = primaryDNS.trim();\n        if (!dnsSuffixes.primaryDNS) { dnsSuffixes.primaryDNS = 'Not defined'; }\n      }\n      if (index > 1) {\n        if (index % 2 == 0) {\n          const name = element.substring(element.lastIndexOf(' ') + 1).replace(':', '');\n          iface.name = name;\n        } else {\n          const connectionSpecificDNS = element.split('\\r\\n').filter((element) => {\n            return element.toUpperCase().includes('DNS');\n          });\n          const dnsSuffix = connectionSpecificDNS[0].substring(connectionSpecificDNS[0].lastIndexOf(':') + 1);\n          iface.dnsSuffix = dnsSuffix.trim();\n          dnsSuffixes.ifaces.push(iface);\n          iface = {};\n        }\n      }\n    });\n\n    return dnsSuffixes;\n  } catch (error) {\n    return {\n      primaryDNS: '',\n      exitCode: 0,\n      ifaces: [],\n    };\n  }\n}\n\nfunction getWindowsIfaceDNSsuffix(ifaces, ifacename) {\n  let dnsSuffix = '';\n  // Adding (.) to ensure ifacename compatibility when duplicated iface-names\n  const interfaceName = ifacename + '.';\n  try {\n    const connectionDnsSuffix = ifaces.filter((iface) => {\n      return interfaceName.includes(iface.name + '.');\n    }).map((iface) => iface.dnsSuffix);\n    if (connectionDnsSuffix[0]) {\n      dnsSuffix = connectionDnsSuffix[0];\n    }\n    if (!dnsSuffix) { dnsSuffix = ''; }\n    return dnsSuffix;\n  } catch (error) {\n    return 'Unknown';\n  }\n}\n\nfunction getWindowsWiredProfilesInformation() {\n  try {\n    const result = execSync('netsh lan show profiles', util.execOptsWin);\n    const profileList = result.split('\\r\\nProfile on interface');\n    return profileList;\n  } catch (error) {\n    if (error.status === 1 && error.stdout.includes('AutoConfig')) {\n      return 'Disabled';\n    }\n    return [];\n  }\n}\n\nfunction getWindowsWirelessIfaceSSID(interfaceName) {\n  try {\n    const result = execSync(`netsh wlan show  interface name=\"${interfaceName}\" | findstr \"SSID\"`, util.execOptsWin);\n    const SSID = result.split('\\r\\n').shift();\n    const parseSSID = SSID.split(':').pop();\n    return parseSSID;\n  } catch (error) {\n    return 'Unknown';\n  }\n}\nfunction getWindowsIEEE8021x(connectionType, iface, ifaces) {\n  let i8021x = {\n    state: 'Unknown',\n    protocol: 'Unknown',\n  };\n\n  if (ifaces === 'Disabled') {\n    i8021x.state = 'Disabled';\n    i8021x.protocol = 'Not defined';\n    return i8021x;\n  }\n\n  if (connectionType == 'wired' && ifaces.length > 0) {\n    try {\n      // Get 802.1x information by interface name\n      const iface8021xInfo = ifaces.find((element) => {\n        return element.includes(iface + '\\r\\n');\n      });\n      const arrayIface8021xInfo = iface8021xInfo.split('\\r\\n');\n      const state8021x = arrayIface8021xInfo.find((element) => {\n        return element.includes('802.1x');\n      });\n\n      if (state8021x.includes('Disabled')) {\n        i8021x.state = 'Disabled';\n        i8021x.protocol = 'Not defined';\n      } else if (state8021x.includes('Enabled')) {\n        const protocol8021x = arrayIface8021xInfo.find((element) => {\n          return element.includes('EAP');\n        });\n        i8021x.protocol = protocol8021x.split(':').pop();\n        i8021x.state = 'Enabled';\n      }\n    } catch (error) {\n      return i8021x;\n    }\n  } else if (connectionType == 'wireless') {\n\n    let i8021xState = '';\n    let i8021xProtocol = '';\n\n\n\n    try {\n      const SSID = getWindowsWirelessIfaceSSID(iface);\n      if (SSID !== 'Unknown') {\n        i8021xState = execSync(`netsh wlan show profiles \"${SSID}\" | findstr \"802.1X\"`, util.execOptsWin);\n        i8021xProtocol = execSync(`netsh wlan show profiles \"${SSID}\" | findstr \"EAP\"`, util.execOptsWin);\n      }\n\n      if (i8021xState.includes(':') && i8021xProtocol.includes(':')) {\n        i8021x.state = i8021xState.split(':').pop();\n        i8021x.protocol = i8021xProtocol.split(':').pop();\n      }\n    } catch (error) {\n      if (error.status === 1 && error.stdout.includes('AutoConfig')) {\n        i8021x.state = 'Disabled';\n        i8021x.protocol = 'Not defined';\n      }\n      return i8021x;\n    }\n  }\n\n  return i8021x;\n}\n\nfunction splitSectionsNics(lines) {\n  const result = [];\n  let section = [];\n  lines.forEach(function (line) {\n    if (!line.startsWith('\\t') && !line.startsWith(' ')) {\n      if (section.length) {\n        result.push(section);\n        section = [];\n      }\n    }\n    section.push(line);\n  });\n  if (section.length) {\n    result.push(section);\n  }\n  return result;\n}\n\nfunction parseLinesDarwinNics(sections) {\n  let nics = [];\n  sections.forEach(section => {\n    let nic = {\n      iface: '',\n      mtu: null,\n      mac: '',\n      ip6: '',\n      ip4: '',\n      speed: null,\n      type: '',\n      operstate: '',\n      duplex: '',\n      internal: false\n    };\n    const first = section[0];\n    nic.iface = first.split(':')[0].trim();\n    let parts = first.split('> mtu');\n    nic.mtu = parts.length > 1 ? parseInt(parts[1], 10) : null;\n    if (isNaN(nic.mtu)) {\n      nic.mtu = null;\n    }\n    nic.internal = parts[0].toLowerCase().indexOf('loopback') > -1;\n    section.forEach(line => {\n      if (line.trim().startsWith('ether ')) {\n        nic.mac = line.split('ether ')[1].toLowerCase().trim();\n      }\n      if (line.trim().startsWith('inet6 ') && !nic.ip6) {\n        nic.ip6 = line.split('inet6 ')[1].toLowerCase().split('%')[0].split(' ')[0];\n      }\n      if (line.trim().startsWith('inet ') && !nic.ip4) {\n        nic.ip4 = line.split('inet ')[1].toLowerCase().split(' ')[0];\n      }\n    });\n    let speed = util.getValue(section, 'link rate');\n    nic.speed = speed ? parseFloat(speed) : null;\n    if (nic.speed === null) {\n      speed = util.getValue(section, 'uplink rate');\n      nic.speed = speed ? parseFloat(speed) : null;\n      if (nic.speed !== null && speed.toLowerCase().indexOf('gbps') >= 0) {\n        nic.speed = nic.speed * 1000;\n      }\n    } else {\n      if (speed.toLowerCase().indexOf('gbps') >= 0) {\n        nic.speed = nic.speed * 1000;\n      }\n    }\n    nic.type = util.getValue(section, 'type').toLowerCase().indexOf('wi-fi') > -1 ? 'wireless' : 'wired';\n    const operstate = util.getValue(section, 'status').toLowerCase();\n    nic.operstate = (operstate === 'active' ? 'up' : (operstate === 'inactive' ? 'down' : 'unknown'));\n    nic.duplex = util.getValue(section, 'media').toLowerCase().indexOf('half-duplex') > -1 ? 'half' : 'full';\n    if (nic.ip6 || nic.ip4 || nic.mac) {\n      nics.push(nic);\n    }\n  });\n  return nics;\n}\n\nfunction getDarwinNics() {\n  const cmd = '/sbin/ifconfig -v';\n  try {\n    const lines = execSync(cmd, { maxBuffer: 1024 * 20000 }).toString().split('\\n');\n    const nsections = splitSectionsNics(lines);\n    return (parseLinesDarwinNics(nsections));\n  } catch (e) {\n    return [];\n  }\n}\n\nfunction getLinuxIfaceConnectionName(interfaceName) {\n  const cmd = `nmcli device status 2>/dev/null | grep ${interfaceName}`;\n\n  try {\n    const result = execSync(cmd).toString();\n    const resultFormat = result.replace(/\\s+/g, ' ').trim();\n    const connectionNameLines = resultFormat.split(' ').slice(3);\n    const connectionName = connectionNameLines.join(' ');\n    return connectionName != '--' ? connectionName : '';\n  } catch (e) {\n    return '';\n  }\n}\n\nfunction checkLinuxDCHPInterfaces(file) {\n  let result = [];\n  try {\n    let cmd = `cat ${file} 2> /dev/null | grep 'iface\\\\|source'`;\n    const lines = execSync(cmd, { maxBuffer: 1024 * 20000 }).toString().split('\\n');\n\n    lines.forEach(line => {\n      const parts = line.replace(/\\s+/g, ' ').trim().split(' ');\n      if (parts.length >= 4) {\n        if (line.toLowerCase().indexOf(' inet ') >= 0 && line.toLowerCase().indexOf('dhcp') >= 0) {\n          result.push(parts[1]);\n        }\n      }\n      if (line.toLowerCase().includes('source')) {\n        let file = line.split(' ')[1];\n        result = result.concat(checkLinuxDCHPInterfaces(file));\n      }\n    });\n  } catch (e) {\n    util.noop();\n  }\n  return result;\n}\n\nfunction getLinuxDHCPNics() {\n  // alternate methods getting interfaces using DHCP\n  let cmd = 'ip a 2> /dev/null';\n  let result = [];\n  try {\n    const lines = execSync(cmd, { maxBuffer: 1024 * 20000 }).toString().split('\\n');\n    const nsections = splitSectionsNics(lines);\n    result = (parseLinuxDHCPNics(nsections));\n  } catch (e) {\n    util.noop();\n  }\n  try {\n    result = checkLinuxDCHPInterfaces('/etc/network/interfaces');\n  } catch (e) {\n    util.noop();\n  }\n  return result;\n}\n\nfunction parseLinuxDHCPNics(sections) {\n  const result = [];\n  if (sections && sections.length) {\n    sections.forEach(lines => {\n      if (lines && lines.length) {\n        const parts = lines[0].split(':');\n        if (parts.length > 2) {\n          for (let line of lines) {\n            if (line.indexOf(' inet ') >= 0 && line.indexOf(' dynamic ') >= 0) {\n              const parts2 = line.split(' ');\n              const nic = parts2[parts2.length - 1].trim();\n              result.push(nic);\n              break;\n            }\n          }\n        }\n      }\n    });\n  }\n  return result;\n}\n\nfunction getLinuxIfaceDHCPstatus(iface, connectionName, DHCPNics) {\n  let result = false;\n  if (connectionName) {\n    const cmd = `nmcli connection show \"${connectionName}\" 2>/dev/null | grep ipv4.method;`;\n    try {\n      const lines = execSync(cmd).toString();\n      const resultFormat = lines.replace(/\\s+/g, ' ').trim();\n\n      let dhcStatus = resultFormat.split(' ').slice(1).toString();\n      switch (dhcStatus) {\n        case 'auto':\n          result = true;\n          break;\n\n        default:\n          result = false;\n          break;\n      }\n      return result;\n    } catch (e) {\n      return (DHCPNics.indexOf(iface) >= 0);\n    }\n  } else {\n    return (DHCPNics.indexOf(iface) >= 0);\n  }\n}\n\nfunction getDarwinIfaceDHCPstatus(iface) {\n  let result = false;\n  const cmd = `ipconfig getpacket \"${iface}\" 2>/dev/null | grep lease_time;`;\n  try {\n    const lines = execSync(cmd).toString().split('\\n');\n    if (lines.length && lines[0].startsWith('lease_time')) {\n      result = true;\n    }\n  } catch (e) {\n    util.noop();\n  }\n  return result;\n}\n\nfunction getLinuxIfaceDNSsuffix(connectionName) {\n  if (connectionName) {\n    const cmd = `nmcli connection show \"${connectionName}\" 2>/dev/null | grep ipv4.dns-search;`;\n    try {\n      const result = execSync(cmd).toString();\n      const resultFormat = result.replace(/\\s+/g, ' ').trim();\n      const dnsSuffix = resultFormat.split(' ').slice(1).toString();\n      return dnsSuffix == '--' ? 'Not defined' : dnsSuffix;\n    } catch (e) {\n      return 'Unknown';\n    }\n  } else {\n    return 'Unknown';\n  }\n}\n\nfunction getLinuxIfaceIEEE8021xAuth(connectionName) {\n  if (connectionName) {\n    const cmd = `nmcli connection show \"${connectionName}\" 2>/dev/null | grep 802-1x.eap;`;\n    try {\n      const result = execSync(cmd).toString();\n      const resultFormat = result.replace(/\\s+/g, ' ').trim();\n      const authenticationProtocol = resultFormat.split(' ').slice(1).toString();\n\n\n      return authenticationProtocol == '--' ? '' : authenticationProtocol;\n    } catch (e) {\n      return 'Not defined';\n    }\n  } else {\n    return 'Not defined';\n  }\n}\n\nfunction getLinuxIfaceIEEE8021xState(authenticationProtocol) {\n  if (authenticationProtocol) {\n    if (authenticationProtocol == 'Not defined') {\n      return 'Disabled';\n    }\n    return 'Enabled';\n  } else {\n    return 'Unknown';\n  }\n}\n\nfunction testVirtualNic(iface, ifaceName, mac) {\n  const virtualMacs = ['00:00:00:00:00:00', '00:03:FF', '00:05:69', '00:0C:29', '00:0F:4B', '00:13:07', '00:13:BE', '00:15:5d', '00:16:3E', '00:1C:42', '00:21:F6', '00:24:0B', '00:50:56', '00:A0:B1', '00:E0:C8', '08:00:27', '0A:00:27', '18:92:2C', '16:DF:49', '3C:F3:92', '54:52:00', 'FC:15:97'];\n  if (mac) {\n    return virtualMacs.filter(item => { return mac.toUpperCase().toUpperCase().startsWith(item.substring(0, mac.length)); }).length > 0 ||\n      iface.toLowerCase().indexOf(' virtual ') > -1 ||\n      ifaceName.toLowerCase().indexOf(' virtual ') > -1 ||\n      iface.toLowerCase().indexOf('vethernet ') > -1 ||\n      ifaceName.toLowerCase().indexOf('vethernet ') > -1 ||\n      iface.toLowerCase().startsWith('veth') ||\n      ifaceName.toLowerCase().startsWith('veth') ||\n      iface.toLowerCase().startsWith('vboxnet') ||\n      ifaceName.toLowerCase().startsWith('vboxnet');\n  } else { return false; }\n}\n\nfunction networkInterfaces(callback, rescan, defaultString) {\n\n  if (typeof callback === 'string') {\n    defaultString = callback;\n    rescan = true;\n    callback = null;\n  }\n\n  if (typeof callback === 'boolean') {\n    rescan = callback;\n    callback = null;\n    defaultString = '';\n  }\n  if (typeof rescan === 'undefined') {\n    rescan = true;\n  }\n  defaultString = defaultString || '';\n  defaultString = '' + defaultString;\n\n  return new Promise((resolve) => {\n    process.nextTick(() => {\n\n      let ifaces = os.networkInterfaces();\n\n      let result = [];\n      let nics = [];\n      let dnsSuffixes = [];\n      let nics8021xInfo = [];\n      // seperate handling in OSX\n      if (_darwin || _freebsd || _openbsd || _netbsd) {\n        if ((JSON.stringify(ifaces) === JSON.stringify(_ifaces)) && !rescan) {\n          // no changes - just return object\n          result = _networkInterfaces;\n\n          if (callback) { callback(result); }\n          resolve(result);\n        } else {\n          const defaultInterface = getDefaultNetworkInterface();\n          _ifaces = JSON.parse(JSON.stringify(ifaces));\n\n          nics = getDarwinNics();\n\n\n          nics.forEach(nic => {\n\n            if ({}.hasOwnProperty.call(ifaces, nic.iface)) {\n              ifaces[nic.iface].forEach(function (details) {\n                if (details.family === 'IPv4' || details.family === 4) {\n                  nic.ip4subnet = details.netmask;\n                }\n                if (details.family === 'IPv6' || details.family === 6) {\n                  nic.ip6subnet = details.netmask;\n                }\n              });\n            }\n\n            let ifaceSanitized = '';\n            const s = util.isPrototypePolluted() ? '---' : util.sanitizeShellString(nic.iface);\n            const l = util.mathMin(s.length, 2000);\n            for (let i = 0; i <= l; i++) {\n              if (s[i] !== undefined) {\n                ifaceSanitized = ifaceSanitized + s[i];\n              }\n            }\n\n            result.push({\n              iface: nic.iface,\n              ifaceName: nic.iface,\n              default: nic.iface === defaultInterface,\n              ip4: nic.ip4,\n              ip4subnet: nic.ip4subnet || '',\n              ip6: nic.ip6,\n              ip6subnet: nic.ip6subnet || '',\n              mac: nic.mac,\n              internal: nic.internal,\n              virtual: nic.internal ? false : testVirtualNic(nic.iface, nic.iface, nic.mac),\n              operstate: nic.operstate,\n              type: nic.type,\n              duplex: nic.duplex,\n              mtu: nic.mtu,\n              speed: nic.speed,\n              dhcp: getDarwinIfaceDHCPstatus(ifaceSanitized),\n              dnsSuffix: '',\n              ieee8021xAuth: '',\n              ieee8021xState: '',\n              carrierChanges: 0\n            });\n          });\n          _networkInterfaces = result;\n          if (defaultString.toLowerCase().indexOf('default') >= 0) {\n            result = result.filter(item => item.default);\n            if (result.length > 0) {\n              result = result[0];\n            } else {\n              result = [];\n            }\n          }\n          if (callback) { callback(result); }\n          resolve(result);\n        }\n      }\n      if (_linux) {\n        if ((JSON.stringify(ifaces) === JSON.stringify(_ifaces)) && !rescan) {\n          // no changes - just return object\n          result = _networkInterfaces;\n\n          if (callback) { callback(result); }\n          resolve(result);\n        } else {\n          _ifaces = JSON.parse(JSON.stringify(ifaces));\n          _dhcpNics = getLinuxDHCPNics();\n          const defaultInterface = getDefaultNetworkInterface();\n          for (let dev in ifaces) {\n            let ip4 = '';\n            let ip4subnet = '';\n            let ip6 = '';\n            let ip6subnet = '';\n            let mac = '';\n            let duplex = '';\n            let mtu = '';\n            let speed = null;\n            let carrierChanges = 0;\n            let dhcp = false;\n            let dnsSuffix = '';\n            let ieee8021xAuth = '';\n            let ieee8021xState = '';\n            let type = '';\n\n            if ({}.hasOwnProperty.call(ifaces, dev)) {\n              let ifaceName = dev;\n              ifaces[dev].forEach(function (details) {\n                if (details.family === 'IPv4' || details.family === 4) {\n                  ip4 = details.address;\n                  ip4subnet = details.netmask;\n                }\n                if (details.family === 'IPv6' || details.family === 6) {\n                  if (!ip6 || ip6.match(/^fe80::/i)) {\n                    ip6 = details.address;\n                    ip6subnet = details.netmask;\n                  }\n                }\n                mac = details.mac;\n                // fallback due to https://github.com/nodejs/node/issues/13581 (node 8.1 - node 8.2)\n                const nodeMainVersion = parseInt(process.versions.node.split('.'), 10);\n                if (mac.indexOf('00:00:0') > -1 && (_linux || _darwin) && (!details.internal) && nodeMainVersion >= 8 && nodeMainVersion <= 11) {\n                  if (Object.keys(_mac).length === 0) {\n                    _mac = getMacAddresses();\n                  }\n                  mac = _mac[dev] || '';\n                }\n              });\n              let iface = dev.split(':')[0].trim().toLowerCase();\n              let ifaceSanitized = '';\n              const s = util.isPrototypePolluted() ? '---' : util.sanitizeShellString(iface);\n              const l = util.mathMin(s.length, 2000);\n              for (let i = 0; i <= l; i++) {\n                if (s[i] !== undefined) {\n                  ifaceSanitized = ifaceSanitized + s[i];\n                }\n              }\n              const cmd = `echo -n \"addr_assign_type: \"; cat /sys/class/net/${ifaceSanitized}/addr_assign_type 2>/dev/null; echo;\n            echo -n \"address: \"; cat /sys/class/net/${ifaceSanitized}/address 2>/dev/null; echo;\n            echo -n \"addr_len: \"; cat /sys/class/net/${ifaceSanitized}/addr_len 2>/dev/null; echo;\n            echo -n \"broadcast: \"; cat /sys/class/net/${ifaceSanitized}/broadcast 2>/dev/null; echo;\n            echo -n \"carrier: \"; cat /sys/class/net/${ifaceSanitized}/carrier 2>/dev/null; echo;\n            echo -n \"carrier_changes: \"; cat /sys/class/net/${ifaceSanitized}/carrier_changes 2>/dev/null; echo;\n            echo -n \"dev_id: \"; cat /sys/class/net/${ifaceSanitized}/dev_id 2>/dev/null; echo;\n            echo -n \"dev_port: \"; cat /sys/class/net/${ifaceSanitized}/dev_port 2>/dev/null; echo;\n            echo -n \"dormant: \"; cat /sys/class/net/${ifaceSanitized}/dormant 2>/dev/null; echo;\n            echo -n \"duplex: \"; cat /sys/class/net/${ifaceSanitized}/duplex 2>/dev/null; echo;\n            echo -n \"flags: \"; cat /sys/class/net/${ifaceSanitized}/flags 2>/dev/null; echo;\n            echo -n \"gro_flush_timeout: \"; cat /sys/class/net/${ifaceSanitized}/gro_flush_timeout 2>/dev/null; echo;\n            echo -n \"ifalias: \"; cat /sys/class/net/${ifaceSanitized}/ifalias 2>/dev/null; echo;\n            echo -n \"ifindex: \"; cat /sys/class/net/${ifaceSanitized}/ifindex 2>/dev/null; echo;\n            echo -n \"iflink: \"; cat /sys/class/net/${ifaceSanitized}/iflink 2>/dev/null; echo;\n            echo -n \"link_mode: \"; cat /sys/class/net/${ifaceSanitized}/link_mode 2>/dev/null; echo;\n            echo -n \"mtu: \"; cat /sys/class/net/${ifaceSanitized}/mtu 2>/dev/null; echo;\n            echo -n \"netdev_group: \"; cat /sys/class/net/${ifaceSanitized}/netdev_group 2>/dev/null; echo;\n            echo -n \"operstate: \"; cat /sys/class/net/${ifaceSanitized}/operstate 2>/dev/null; echo;\n            echo -n \"proto_down: \"; cat /sys/class/net/${ifaceSanitized}/proto_down 2>/dev/null; echo;\n            echo -n \"speed: \"; cat /sys/class/net/${ifaceSanitized}/speed 2>/dev/null; echo;\n            echo -n \"tx_queue_len: \"; cat /sys/class/net/${ifaceSanitized}/tx_queue_len 2>/dev/null; echo;\n            echo -n \"type: \"; cat /sys/class/net/${ifaceSanitized}/type 2>/dev/null; echo;\n            echo -n \"wireless: \"; cat /proc/net/wireless 2>/dev/null | grep ${ifaceSanitized}; echo;\n            echo -n \"wirelessspeed: \"; iw dev ${ifaceSanitized} link 2>&1 | grep bitrate; echo;`;\n\n              let lines = [];\n              try {\n                lines = execSync(cmd).toString().split('\\n');\n                const connectionName = getLinuxIfaceConnectionName(ifaceSanitized);\n                dhcp = getLinuxIfaceDHCPstatus(ifaceSanitized, connectionName, _dhcpNics);\n                dnsSuffix = getLinuxIfaceDNSsuffix(connectionName);\n                ieee8021xAuth = getLinuxIfaceIEEE8021xAuth(connectionName);\n                ieee8021xState = getLinuxIfaceIEEE8021xState(ieee8021xAuth);\n              } catch (e) {\n                util.noop();\n              }\n              duplex = util.getValue(lines, 'duplex');\n              duplex = duplex.startsWith('cat') ? '' : duplex;\n              mtu = parseInt(util.getValue(lines, 'mtu'), 10);\n              let myspeed = parseInt(util.getValue(lines, 'speed'), 10);\n              speed = isNaN(myspeed) ? null : myspeed;\n              let wirelessspeed = util.getValue(lines, 'wirelessspeed').split('tx bitrate: ');\n              if (speed === null && wirelessspeed.length === 2) {\n                myspeed = parseFloat(wirelessspeed[1]);\n                speed = isNaN(myspeed) ? null : myspeed;\n              }\n              carrierChanges = parseInt(util.getValue(lines, 'carrier_changes'), 10);\n              const operstate = util.getValue(lines, 'operstate');\n              type = operstate === 'up' ? (util.getValue(lines, 'wireless').trim() ? 'wireless' : 'wired') : 'unknown';\n              if (ifaceSanitized === 'lo' || ifaceSanitized.startsWith('bond')) { type = 'virtual'; }\n\n              let internal = (ifaces[dev] && ifaces[dev][0]) ? ifaces[dev][0].internal : false;\n              if (dev.toLowerCase().indexOf('loopback') > -1 || ifaceName.toLowerCase().indexOf('loopback') > -1) {\n                internal = true;\n              }\n              const virtual = internal ? false : testVirtualNic(dev, ifaceName, mac);\n              result.push({\n                iface: ifaceSanitized,\n                ifaceName,\n                default: iface === defaultInterface,\n                ip4,\n                ip4subnet,\n                ip6,\n                ip6subnet,\n                mac,\n                internal,\n                virtual,\n                operstate,\n                type,\n                duplex,\n                mtu,\n                speed,\n                dhcp,\n                dnsSuffix,\n                ieee8021xAuth,\n                ieee8021xState,\n                carrierChanges,\n              });\n            }\n          }\n          _networkInterfaces = result;\n          if (defaultString.toLowerCase().indexOf('default') >= 0) {\n            result = result.filter(item => item.default);\n            if (result.length > 0) {\n              result = result[0];\n            } else {\n              result = [];\n            }\n          }\n          if (callback) { callback(result); }\n          resolve(result);\n        }\n      }\n      if (_windows) {\n        if ((JSON.stringify(ifaces) === JSON.stringify(_ifaces)) && !rescan) {\n          // no changes - just return object\n          result = _networkInterfaces;\n\n          if (callback) { callback(result); }\n          resolve(result);\n        } else {\n          _ifaces = JSON.parse(JSON.stringify(ifaces));\n          const defaultInterface = getDefaultNetworkInterface();\n\n          getWindowsNics().then(function (nics) {\n            nics.forEach(nic => {\n              let found = false;\n              Object.keys(ifaces).forEach(key => {\n                if (!found) {\n                  ifaces[key].forEach(value => {\n                    if (Object.keys(value).indexOf('mac') >= 0) {\n                      found = value['mac'] === nic.mac;\n                    }\n                  });\n                }\n              });\n\n              if (!found) {\n                ifaces[nic.name] = [{ mac: nic.mac }];\n              }\n            });\n            nics8021xInfo = getWindowsWiredProfilesInformation();\n            dnsSuffixes = getWindowsDNSsuffixes();\n            for (let dev in ifaces) {\n\n              let ifaceSanitized = '';\n              const s = util.isPrototypePolluted() ? '---' : util.sanitizeShellString(dev);\n              const l = util.mathMin(s.length, 2000);\n              for (let i = 0; i <= l; i++) {\n                if (s[i] !== undefined) {\n                  ifaceSanitized = ifaceSanitized + s[i];\n                }\n              }\n\n              let iface = dev;\n              let ip4 = '';\n              let ip4subnet = '';\n              let ip6 = '';\n              let ip6subnet = '';\n              let mac = '';\n              let duplex = '';\n              let mtu = '';\n              let speed = null;\n              let carrierChanges = 0;\n              let operstate = 'down';\n              let dhcp = false;\n              let dnsSuffix = '';\n              let ieee8021xAuth = '';\n              let ieee8021xState = '';\n              let type = '';\n\n              if ({}.hasOwnProperty.call(ifaces, dev)) {\n                let ifaceName = dev;\n                ifaces[dev].forEach(function (details) {\n                  if (details.family === 'IPv4' || details.family === 4) {\n                    ip4 = details.address;\n                    ip4subnet = details.netmask;\n                  }\n                  if (details.family === 'IPv6' || details.family === 6) {\n                    if (!ip6 || ip6.match(/^fe80::/i)) {\n                      ip6 = details.address;\n                      ip6subnet = details.netmask;\n                    }\n                  }\n                  mac = details.mac;\n                  // fallback due to https://github.com/nodejs/node/issues/13581 (node 8.1 - node 8.2)\n                  const nodeMainVersion = parseInt(process.versions.node.split('.'), 10);\n                  if (mac.indexOf('00:00:0') > -1 && (_linux || _darwin) && (!details.internal) && nodeMainVersion >= 8 && nodeMainVersion <= 11) {\n                    if (Object.keys(_mac).length === 0) {\n                      _mac = getMacAddresses();\n                    }\n                    mac = _mac[dev] || '';\n                  }\n                });\n\n\n\n                dnsSuffix = getWindowsIfaceDNSsuffix(dnsSuffixes.ifaces, ifaceSanitized);\n                let foundFirst = false;\n                nics.forEach(detail => {\n                  if (detail.mac === mac && !foundFirst) {\n                    iface = detail.iface || iface;\n                    ifaceName = detail.name;\n                    dhcp = detail.dhcp;\n                    operstate = detail.operstate;\n                    speed = operstate === 'up' ? detail.speed : 0;\n                    type = detail.type;\n                    foundFirst = true;\n                  }\n                });\n\n                if (dev.toLowerCase().indexOf('wlan') >= 0 || ifaceName.toLowerCase().indexOf('wlan') >= 0 || ifaceName.toLowerCase().indexOf('802.11n') >= 0 || ifaceName.toLowerCase().indexOf('wireless') >= 0 || ifaceName.toLowerCase().indexOf('wi-fi') >= 0 || ifaceName.toLowerCase().indexOf('wifi') >= 0) {\n                  type = 'wireless';\n                }\n\n                const IEEE8021x = getWindowsIEEE8021x(type, ifaceSanitized, nics8021xInfo);\n                ieee8021xAuth = IEEE8021x.protocol;\n                ieee8021xState = IEEE8021x.state;\n                let internal = (ifaces[dev] && ifaces[dev][0]) ? ifaces[dev][0].internal : false;\n                if (dev.toLowerCase().indexOf('loopback') > -1 || ifaceName.toLowerCase().indexOf('loopback') > -1) {\n                  internal = true;\n                }\n                const virtual = internal ? false : testVirtualNic(dev, ifaceName, mac);\n                result.push({\n                  iface,\n                  ifaceName,\n                  default: iface === defaultInterface,\n                  ip4,\n                  ip4subnet,\n                  ip6,\n                  ip6subnet,\n                  mac,\n                  internal,\n                  virtual,\n                  operstate,\n                  type,\n                  duplex,\n                  mtu,\n                  speed,\n                  dhcp,\n                  dnsSuffix,\n                  ieee8021xAuth,\n                  ieee8021xState,\n                  carrierChanges,\n                });\n              }\n            }\n            _networkInterfaces = result;\n            if (defaultString.toLowerCase().indexOf('default') >= 0) {\n              result = result.filter(item => item.default);\n              if (result.length > 0) {\n                result = result[0];\n              } else {\n                result = [];\n              }\n            }\n            if (callback) { callback(result); }\n            resolve(result);\n          });\n        }\n      }\n    });\n  });\n}\n\nexports.networkInterfaces = networkInterfaces;\n\n// --------------------------\n// NET - Speed\n\nfunction calcNetworkSpeed(iface, rx_bytes, tx_bytes, operstate, rx_dropped, rx_errors, tx_dropped, tx_errors) {\n  let result = {\n    iface,\n    operstate,\n    rx_bytes,\n    rx_dropped,\n    rx_errors,\n    tx_bytes,\n    tx_dropped,\n    tx_errors,\n    rx_sec: null,\n    tx_sec: null,\n    ms: 0\n  };\n\n  if (_network[iface] && _network[iface].ms) {\n    result.ms = Date.now() - _network[iface].ms;\n    result.rx_sec = (rx_bytes - _network[iface].rx_bytes) >= 0 ? (rx_bytes - _network[iface].rx_bytes) / (result.ms / 1000) : 0;\n    result.tx_sec = (tx_bytes - _network[iface].tx_bytes) >= 0 ? (tx_bytes - _network[iface].tx_bytes) / (result.ms / 1000) : 0;\n    _network[iface].rx_bytes = rx_bytes;\n    _network[iface].tx_bytes = tx_bytes;\n    _network[iface].rx_sec = result.rx_sec;\n    _network[iface].tx_sec = result.tx_sec;\n    _network[iface].ms = Date.now();\n    _network[iface].last_ms = result.ms;\n    _network[iface].operstate = operstate;\n  } else {\n    if (!_network[iface]) { _network[iface] = {}; }\n    _network[iface].rx_bytes = rx_bytes;\n    _network[iface].tx_bytes = tx_bytes;\n    _network[iface].rx_sec = null;\n    _network[iface].tx_sec = null;\n    _network[iface].ms = Date.now();\n    _network[iface].last_ms = 0;\n    _network[iface].operstate = operstate;\n  }\n  return result;\n}\n\nfunction networkStats(ifaces, callback) {\n\n  let ifacesArray = [];\n\n  return new Promise((resolve) => {\n    process.nextTick(() => {\n\n      // fallback - if only callback is given\n      if (util.isFunction(ifaces) && !callback) {\n        callback = ifaces;\n        ifacesArray = [getDefaultNetworkInterface()];\n      } else {\n        if (typeof ifaces !== 'string' && ifaces !== undefined) {\n          if (callback) { callback([]); }\n          return resolve([]);\n        }\n        ifaces = ifaces || getDefaultNetworkInterface();\n\n        ifaces.__proto__.toLowerCase = util.stringToLower;\n        ifaces.__proto__.replace = util.stringReplace;\n        ifaces.__proto__.trim = util.stringTrim;\n\n        ifaces = ifaces.trim().toLowerCase().replace(/,+/g, '|');\n        ifacesArray = ifaces.split('|');\n      }\n\n      const result = [];\n\n      const workload = [];\n      if (ifacesArray.length && ifacesArray[0].trim() === '*') {\n        ifacesArray = [];\n        networkInterfaces(false).then(allIFaces => {\n          for (let iface of allIFaces) {\n            ifacesArray.push(iface.iface);\n          }\n          networkStats(ifacesArray.join(',')).then(result => {\n            if (callback) { callback(result); }\n            resolve(result);\n          });\n        });\n      } else {\n        for (let iface of ifacesArray) {\n          workload.push(networkStatsSingle(iface.trim()));\n        }\n        if (workload.length) {\n          Promise.all(\n            workload\n          ).then((data) => {\n            if (callback) { callback(data); }\n            resolve(data);\n          });\n        } else {\n          if (callback) { callback(result); }\n          resolve(result);\n        }\n      }\n    });\n  });\n}\n\nfunction networkStatsSingle(iface) {\n\n  function parseLinesWindowsPerfData(sections) {\n    let perfData = [];\n    for (let i in sections) {\n      if ({}.hasOwnProperty.call(sections, i)) {\n        if (sections[i].trim() !== '') {\n          let lines = sections[i].trim().split('\\r\\n');\n          perfData.push({\n            name: util.getValue(lines, 'Name', ':').replace(/[()[\\] ]+/g, '').replace(/#|\\//g, '_').toLowerCase(),\n            rx_bytes: parseInt(util.getValue(lines, 'BytesReceivedPersec', ':'), 10),\n            rx_errors: parseInt(util.getValue(lines, 'PacketsReceivedErrors', ':'), 10),\n            rx_dropped: parseInt(util.getValue(lines, 'PacketsReceivedDiscarded', ':'), 10),\n            tx_bytes: parseInt(util.getValue(lines, 'BytesSentPersec', ':'), 10),\n            tx_errors: parseInt(util.getValue(lines, 'PacketsOutboundErrors', ':'), 10),\n            tx_dropped: parseInt(util.getValue(lines, 'PacketsOutboundDiscarded', ':'), 10)\n          });\n        }\n      }\n    }\n    return perfData;\n  }\n\n  return new Promise((resolve) => {\n    process.nextTick(() => {\n      let ifaceSanitized = '';\n      const s = util.isPrototypePolluted() ? '---' : util.sanitizeShellString(iface);\n      const l = util.mathMin(s.length, 2000);\n      for (let i = 0; i <= l; i++) {\n        if (s[i] !== undefined) {\n          ifaceSanitized = ifaceSanitized + s[i];\n        }\n      }\n\n      let result = {\n        iface: ifaceSanitized,\n        operstate: 'unknown',\n        rx_bytes: 0,\n        rx_dropped: 0,\n        rx_errors: 0,\n        tx_bytes: 0,\n        tx_dropped: 0,\n        tx_errors: 0,\n        rx_sec: null,\n        tx_sec: null,\n        ms: 0\n      };\n\n      let operstate = 'unknown';\n      let rx_bytes = 0;\n      let tx_bytes = 0;\n      let rx_dropped = 0;\n      let rx_errors = 0;\n      let tx_dropped = 0;\n      let tx_errors = 0;\n\n      let cmd, lines, stats;\n      if (!_network[ifaceSanitized] || (_network[ifaceSanitized] && !_network[ifaceSanitized].ms) || (_network[ifaceSanitized] && _network[ifaceSanitized].ms && Date.now() - _network[ifaceSanitized].ms >= 500)) {\n        if (_linux) {\n          if (fs.existsSync('/sys/class/net/' + ifaceSanitized)) {\n            cmd =\n              'cat /sys/class/net/' + ifaceSanitized + '/operstate; ' +\n              'cat /sys/class/net/' + ifaceSanitized + '/statistics/rx_bytes; ' +\n              'cat /sys/class/net/' + ifaceSanitized + '/statistics/tx_bytes; ' +\n              'cat /sys/class/net/' + ifaceSanitized + '/statistics/rx_dropped; ' +\n              'cat /sys/class/net/' + ifaceSanitized + '/statistics/rx_errors; ' +\n              'cat /sys/class/net/' + ifaceSanitized + '/statistics/tx_dropped; ' +\n              'cat /sys/class/net/' + ifaceSanitized + '/statistics/tx_errors; ';\n            exec(cmd, function (error, stdout) {\n              if (!error) {\n                lines = stdout.toString().split('\\n');\n                operstate = lines[0].trim();\n                rx_bytes = parseInt(lines[1], 10);\n                tx_bytes = parseInt(lines[2], 10);\n                rx_dropped = parseInt(lines[3], 10);\n                rx_errors = parseInt(lines[4], 10);\n                tx_dropped = parseInt(lines[5], 10);\n                tx_errors = parseInt(lines[6], 10);\n\n                result = calcNetworkSpeed(ifaceSanitized, rx_bytes, tx_bytes, operstate, rx_dropped, rx_errors, tx_dropped, tx_errors);\n\n              }\n              resolve(result);\n            });\n          } else {\n            resolve(result);\n          }\n        }\n        if (_freebsd || _openbsd || _netbsd) {\n          cmd = 'netstat -ibndI ' + ifaceSanitized;   // lgtm [js/shell-command-constructed-from-input]\n          exec(cmd, function (error, stdout) {\n            if (!error) {\n              lines = stdout.toString().split('\\n');\n              for (let i = 1; i < lines.length; i++) {\n                const line = lines[i].replace(/ +/g, ' ').split(' ');\n                if (line && line[0] && line[7] && line[10]) {\n                  rx_bytes = rx_bytes + parseInt(line[7]);\n                  if (line[6].trim() !== '-') { rx_dropped = rx_dropped + parseInt(line[6]); }\n                  if (line[5].trim() !== '-') { rx_errors = rx_errors + parseInt(line[5]); }\n                  tx_bytes = tx_bytes + parseInt(line[10]);\n                  if (line[12].trim() !== '-') { tx_dropped = tx_dropped + parseInt(line[12]); }\n                  if (line[9].trim() !== '-') { tx_errors = tx_errors + parseInt(line[9]); }\n                  operstate = 'up';\n                }\n              }\n              result = calcNetworkSpeed(ifaceSanitized, rx_bytes, tx_bytes, operstate, rx_dropped, rx_errors, tx_dropped, tx_errors);\n            }\n            resolve(result);\n          });\n        }\n        if (_darwin) {\n          cmd = 'ifconfig ' + ifaceSanitized + ' | grep \"status\"';    // lgtm [js/shell-command-constructed-from-input]\n          exec(cmd, function (error, stdout) {\n            result.operstate = (stdout.toString().split(':')[1] || '').trim();\n            result.operstate = (result.operstate || '').toLowerCase();\n            result.operstate = (result.operstate === 'active' ? 'up' : (result.operstate === 'inactive' ? 'down' : 'unknown'));\n            cmd = 'netstat -bdI ' + ifaceSanitized;   // lgtm [js/shell-command-constructed-from-input]\n            exec(cmd, function (error, stdout) {\n              if (!error) {\n                lines = stdout.toString().split('\\n');\n                // if there is less than 2 lines, no information for this interface was found\n                if (lines.length > 1 && lines[1].trim() !== '') {\n                  // skip header line\n                  // use the second line because it is tied to the NIC instead of the ipv4 or ipv6 address\n                  stats = lines[1].replace(/ +/g, ' ').split(' ');\n                  const offset = stats.length > 11 ? 1 : 0;\n                  rx_bytes = parseInt(stats[offset + 5]);\n                  rx_dropped = parseInt(stats[offset + 10]);\n                  rx_errors = parseInt(stats[offset + 4]);\n                  tx_bytes = parseInt(stats[offset + 8]);\n                  tx_dropped = parseInt(stats[offset + 10]);\n                  tx_errors = parseInt(stats[offset + 7]);\n                  result = calcNetworkSpeed(ifaceSanitized, rx_bytes, tx_bytes, result.operstate, rx_dropped, rx_errors, tx_dropped, tx_errors);\n                }\n              }\n              resolve(result);\n            });\n          });\n        }\n        if (_windows) {\n          let perfData = [];\n          let ifaceName = ifaceSanitized;\n\n          // Performance Data\n          util.powerShell('Get-CimInstance Win32_PerfRawData_Tcpip_NetworkInterface | select Name,BytesReceivedPersec,PacketsReceivedErrors,PacketsReceivedDiscarded,BytesSentPersec,PacketsOutboundErrors,PacketsOutboundDiscarded | fl').then((stdout, error) => {\n            if (!error) {\n              const psections = stdout.toString().split(/\\n\\s*\\n/);\n              perfData = parseLinesWindowsPerfData(psections);\n            }\n\n            // Network Interfaces\n            networkInterfaces(false).then(interfaces => {\n              // get bytes sent, received from perfData by name\n              rx_bytes = 0;\n              tx_bytes = 0;\n              perfData.forEach(detail => {\n                interfaces.forEach(det => {\n                  if ((det.iface.toLowerCase() === ifaceSanitized.toLowerCase() ||\n                    det.mac.toLowerCase() === ifaceSanitized.toLowerCase() ||\n                    det.ip4.toLowerCase() === ifaceSanitized.toLowerCase() ||\n                    det.ip6.toLowerCase() === ifaceSanitized.toLowerCase() ||\n                    det.ifaceName.replace(/[()[\\] ]+/g, '').replace(/#|\\//g, '_').toLowerCase() === ifaceSanitized.replace(/[()[\\] ]+/g, '').replace('#', '_').toLowerCase()) &&\n                    (det.ifaceName.replace(/[()[\\] ]+/g, '').replace(/#|\\//g, '_').toLowerCase() === detail.name)) {\n                    ifaceName = det.iface;\n                    rx_bytes = detail.rx_bytes;\n                    rx_dropped = detail.rx_dropped;\n                    rx_errors = detail.rx_errors;\n                    tx_bytes = detail.tx_bytes;\n                    tx_dropped = detail.tx_dropped;\n                    tx_errors = detail.tx_errors;\n                    operstate = det.operstate;\n                  }\n                });\n              });\n              if (rx_bytes && tx_bytes) {\n                result = calcNetworkSpeed(ifaceName, parseInt(rx_bytes), parseInt(tx_bytes), operstate, rx_dropped, rx_errors, tx_dropped, tx_errors);\n              }\n              resolve(result);\n            });\n          });\n        }\n      } else {\n        result.rx_bytes = _network[ifaceSanitized].rx_bytes;\n        result.tx_bytes = _network[ifaceSanitized].tx_bytes;\n        result.rx_sec = _network[ifaceSanitized].rx_sec;\n        result.tx_sec = _network[ifaceSanitized].tx_sec;\n        result.ms = _network[ifaceSanitized].last_ms;\n        result.operstate = _network[ifaceSanitized].operstate;\n        resolve(result);\n      }\n    });\n  });\n}\n\nexports.networkStats = networkStats;\n\n// --------------------------\n// NET - connections (sockets)\n\nfunction getProcessName(processes, pid) {\n  let cmd = '';\n  processes.forEach(line => {\n    const parts = line.split(' ');\n    const id = parseInt(parts[0], 10) || -1;\n    if (id === pid) {\n      parts.shift();\n      cmd = parts.join(' ').split(':')[0];\n    }\n  });\n  cmd = cmd.split(' -')[0];\n  // return cmd;\n  const cmdParts = cmd.split('/');\n  return cmdParts[cmdParts.length - 1];\n}\n\nfunction networkConnections(callback) {\n\n  return new Promise((resolve) => {\n    process.nextTick(() => {\n      let result = [];\n      if (_linux || _freebsd || _openbsd || _netbsd) {\n        let cmd = 'export LC_ALL=C; netstat -tunap | grep \"ESTABLISHED\\\\|SYN_SENT\\\\|SYN_RECV\\\\|FIN_WAIT1\\\\|FIN_WAIT2\\\\|TIME_WAIT\\\\|CLOSE\\\\|CLOSE_WAIT\\\\|LAST_ACK\\\\|LISTEN\\\\|CLOSING\\\\|UNKNOWN\"; unset LC_ALL';\n        if (_freebsd || _openbsd || _netbsd) { cmd = 'export LC_ALL=C; netstat -na | grep \"ESTABLISHED\\\\|SYN_SENT\\\\|SYN_RECV\\\\|FIN_WAIT1\\\\|FIN_WAIT2\\\\|TIME_WAIT\\\\|CLOSE\\\\|CLOSE_WAIT\\\\|LAST_ACK\\\\|LISTEN\\\\|CLOSING\\\\|UNKNOWN\"; unset LC_ALL'; }\n        exec(cmd, { maxBuffer: 1024 * 20000 }, function (error, stdout) {\n          let lines = stdout.toString().split('\\n');\n          if (!error && (lines.length > 1 || lines[0] != '')) {\n            lines.forEach(function (line) {\n              line = line.replace(/ +/g, ' ').split(' ');\n              if (line.length >= 7) {\n                let localip = line[3];\n                let localport = '';\n                let localaddress = line[3].split(':');\n                if (localaddress.length > 1) {\n                  localport = localaddress[localaddress.length - 1];\n                  localaddress.pop();\n                  localip = localaddress.join(':');\n                }\n                let peerip = line[4];\n                let peerport = '';\n                let peeraddress = line[4].split(':');\n                if (peeraddress.length > 1) {\n                  peerport = peeraddress[peeraddress.length - 1];\n                  peeraddress.pop();\n                  peerip = peeraddress.join(':');\n                }\n                let connstate = line[5];\n                let proc = line[6].split('/');\n\n                if (connstate) {\n                  result.push({\n                    protocol: line[0],\n                    localAddress: localip,\n                    localPort: localport,\n                    peerAddress: peerip,\n                    peerPort: peerport,\n                    state: connstate,\n                    pid: proc[0] && proc[0] !== '-' ? parseInt(proc[0], 10) : null,\n                    process: proc[1] ? proc[1].split(' ')[0].split(':')[0] : ''\n                  });\n                }\n              }\n            });\n            if (callback) {\n              callback(result);\n            }\n            resolve(result);\n          } else {\n            cmd = 'ss -tunap | grep \"ESTAB\\\\|SYN-SENT\\\\|SYN-RECV\\\\|FIN-WAIT1\\\\|FIN-WAIT2\\\\|TIME-WAIT\\\\|CLOSE\\\\|CLOSE-WAIT\\\\|LAST-ACK\\\\|LISTEN\\\\|CLOSING\"';\n            exec(cmd, { maxBuffer: 1024 * 20000 }, function (error, stdout) {\n\n              if (!error) {\n                let lines = stdout.toString().split('\\n');\n                lines.forEach(function (line) {\n                  line = line.replace(/ +/g, ' ').split(' ');\n                  if (line.length >= 6) {\n                    let localip = line[4];\n                    let localport = '';\n                    let localaddress = line[4].split(':');\n                    if (localaddress.length > 1) {\n                      localport = localaddress[localaddress.length - 1];\n                      localaddress.pop();\n                      localip = localaddress.join(':');\n                    }\n                    let peerip = line[5];\n                    let peerport = '';\n                    let peeraddress = line[5].split(':');\n                    if (peeraddress.length > 1) {\n                      peerport = peeraddress[peeraddress.length - 1];\n                      peeraddress.pop();\n                      peerip = peeraddress.join(':');\n                    }\n                    let connstate = line[1];\n                    if (connstate === 'ESTAB') { connstate = 'ESTABLISHED'; }\n                    if (connstate === 'TIME-WAIT') { connstate = 'TIME_WAIT'; }\n                    let pid = null;\n                    let process = '';\n                    if (line.length >= 7 && line[6].indexOf('users:') > -1) {\n                      let proc = line[6].replace('users:((\"', '').replace(/\"/g, '').split(',');\n                      if (proc.length > 2) {\n                        process = proc[0].split(' ')[0].split(':')[0];\n                        pid = parseInt(proc[1], 10);\n                      }\n                    }\n                    if (connstate) {\n                      result.push({\n                        protocol: line[0],\n                        localAddress: localip,\n                        localPort: localport,\n                        peerAddress: peerip,\n                        peerPort: peerport,\n                        state: connstate,\n                        pid,\n                        process\n                      });\n                    }\n                  }\n                });\n              }\n              if (callback) {\n                callback(result);\n              }\n              resolve(result);\n            });\n          }\n        });\n      }\n      if (_darwin) {\n        // let cmd = 'netstat -natv | grep \"ESTABLISHED\\\\|SYN_SENT\\\\|SYN_RECV\\\\|FIN_WAIT1\\\\|FIN_WAIT2\\\\|TIME_WAIT\\\\|CLOSE\\\\|CLOSE_WAIT\\\\|LAST_ACK\\\\|LISTEN\\\\|CLOSING\\\\|UNKNOWN\"';\n        let cmd = 'netstat -natvln | grep \"tcp4\\\\|tcp6\\\\|udp4\\\\|udp6\"';\n        const states = 'ESTABLISHED|SYN_SENT|SYN_RECV|FIN_WAIT1|FIN_WAIT2|TIME_WAIT|CLOSE|CLOSE_WAIT|LAST_ACK|LISTEN|CLOSING|UNKNOWN';\n        exec(cmd, { maxBuffer: 1024 * 20000 }, function (error, stdout) {\n          if (!error) {\n            exec('ps -axo pid,command', { maxBuffer: 1024 * 20000 }, function (err2, stdout2) {\n              let processes = stdout2.toString().split('\\n');\n              processes = processes.map((line => { return line.trim().replace(/ +/g, ' '); }));\n              let lines = stdout.toString().split('\\n');\n\n              lines.forEach(function (line) {\n                line = line.replace(/ +/g, ' ').split(' ');\n                if (line.length >= 8) {\n                  let localip = line[3];\n                  let localport = '';\n                  let localaddress = line[3].split('.');\n                  if (localaddress.length > 1) {\n                    localport = localaddress[localaddress.length - 1];\n                    localaddress.pop();\n                    localip = localaddress.join('.');\n                  }\n                  let peerip = line[4];\n                  let peerport = '';\n                  let peeraddress = line[4].split('.');\n                  if (peeraddress.length > 1) {\n                    peerport = peeraddress[peeraddress.length - 1];\n                    peeraddress.pop();\n                    peerip = peeraddress.join('.');\n                  }\n                  const hasState = states.indexOf(line[5]) >= 0;\n                  let connstate = hasState ? line[5] : 'UNKNOWN';\n                  let pid = parseInt(line[8 + (hasState ? 0 : -1)], 10);\n                  if (connstate) {\n                    result.push({\n                      protocol: line[0],\n                      localAddress: localip,\n                      localPort: localport,\n                      peerAddress: peerip,\n                      peerPort: peerport,\n                      state: connstate,\n                      pid: pid,\n                      process: getProcessName(processes, pid)\n                    });\n                  }\n                }\n              });\n              if (callback) {\n                callback(result);\n              }\n              resolve(result);\n            });\n\n          }\n        });\n      }\n      if (_windows) {\n        let cmd = 'netstat -nao';\n        try {\n          exec(cmd, util.execOptsWin, function (error, stdout) {\n            if (!error) {\n\n              let lines = stdout.toString().split('\\r\\n');\n\n              lines.forEach(function (line) {\n                line = line.trim().replace(/ +/g, ' ').split(' ');\n                if (line.length >= 4) {\n                  let localip = line[1];\n                  let localport = '';\n                  let localaddress = line[1].split(':');\n                  if (localaddress.length > 1) {\n                    localport = localaddress[localaddress.length - 1];\n                    localaddress.pop();\n                    localip = localaddress.join(':');\n                  }\n                  localip = localip.replace(/\\[/g, '').replace(/\\]/g, '');\n                  let peerip = line[2];\n                  let peerport = '';\n                  let peeraddress = line[2].split(':');\n                  if (peeraddress.length > 1) {\n                    peerport = peeraddress[peeraddress.length - 1];\n                    peeraddress.pop();\n                    peerip = peeraddress.join(':');\n                  }\n                  peerip = peerip.replace(/\\[/g, '').replace(/\\]/g, '');\n                  let pid = util.toInt(line[4]);\n                  let connstate = line[3];\n                  if (connstate === 'HERGESTELLT') { connstate = 'ESTABLISHED'; }\n                  if (connstate.startsWith('ABH')) { connstate = 'LISTEN'; }\n                  if (connstate === 'SCHLIESSEN_WARTEN') { connstate = 'CLOSE_WAIT'; }\n                  if (connstate === 'WARTEND') { connstate = 'TIME_WAIT'; }\n                  if (connstate === 'SYN_GESENDET') { connstate = 'SYN_SENT'; }\n\n                  if (connstate === 'LISTENING') { connstate = 'LISTEN'; }\n                  if (connstate === 'SYN_RECEIVED') { connstate = 'SYN_RECV'; }\n                  if (connstate === 'FIN_WAIT_1') { connstate = 'FIN_WAIT1'; }\n                  if (connstate === 'FIN_WAIT_2') { connstate = 'FIN_WAIT2'; }\n                  if (line[0].toLowerCase() !== 'udp' && connstate) {\n                    result.push({\n                      protocol: line[0].toLowerCase(),\n                      localAddress: localip,\n                      localPort: localport,\n                      peerAddress: peerip,\n                      peerPort: peerport,\n                      state: connstate,\n                      pid,\n                      process: ''\n                    });\n                  } else if (line[0].toLowerCase() === 'udp') {\n                    result.push({\n                      protocol: line[0].toLowerCase(),\n                      localAddress: localip,\n                      localPort: localport,\n                      peerAddress: peerip,\n                      peerPort: peerport,\n                      state: '',\n                      pid: parseInt(line[3], 10),\n                      process: ''\n                    });\n                  }\n                }\n              });\n              if (callback) {\n                callback(result);\n              }\n              resolve(result);\n            }\n          });\n        } catch (e) {\n          if (callback) { callback(result); }\n          resolve(result);\n        }\n      }\n    });\n  });\n}\n\nexports.networkConnections = networkConnections;\n\nfunction networkGatewayDefault(callback) {\n\n  return new Promise((resolve) => {\n    process.nextTick(() => {\n      let result = '';\n      if (_linux || _freebsd || _openbsd || _netbsd) {\n        let cmd = 'ip route get 1';\n        try {\n          exec(cmd, { maxBuffer: 1024 * 20000 }, function (error, stdout) {\n            if (!error) {\n              let lines = stdout.toString().split('\\n');\n              const line = lines && lines[0] ? lines[0] : '';\n              let parts = line.split(' via ');\n              if (parts && parts[1]) {\n                parts = parts[1].split(' ');\n                result = parts[0];\n              }\n              if (callback) {\n                callback(result);\n              }\n              resolve(result);\n            } else {\n              if (callback) {\n                callback(result);\n              }\n              resolve(result);\n            }\n          });\n        } catch (e) {\n          if (callback) { callback(result); }\n          resolve(result);\n        }\n      }\n      if (_darwin) {\n        let cmd = 'route -n get default';\n        try {\n          exec(cmd, { maxBuffer: 1024 * 20000 }, function (error, stdout) {\n            if (!error) {\n              const lines = stdout.toString().split('\\n').map(line => line.trim());\n              result = util.getValue(lines, 'gateway');\n            }\n            if (!result) {\n              cmd = 'netstat -rn | awk \\'/default/ {print $2}\\'';\n              exec(cmd, { maxBuffer: 1024 * 20000 }, function (error, stdout) {\n                const lines = stdout.toString().split('\\n').map(line => line.trim());\n                result = lines.find(line => (/^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/.test(line)));\n                if (callback) {\n                  callback(result);\n                }\n                resolve(result);\n              });\n            } else {\n              if (callback) {\n                callback(result);\n              }\n              resolve(result);\n            }\n          });\n        } catch (e) {\n          if (callback) { callback(result); }\n          resolve(result);\n        }\n      }\n      if (_windows) {\n        try {\n          exec('netstat -r', util.execOptsWin, function (error, stdout) {\n            const lines = stdout.toString().split(os.EOL);\n            lines.forEach(line => {\n              line = line.replace(/\\s+/g, ' ').trim();\n              if (line.indexOf('0.0.0.0 0.0.0.0') > -1 && !(/[a-zA-Z]/.test(line))) {\n                const parts = line.split(' ');\n                if (parts.length >= 5 && (parts[parts.length - 3]).indexOf('.') > -1) {\n                  result = parts[parts.length - 3];\n                }\n              }\n            });\n            if (!result) {\n              util.powerShell('Get-CimInstance -ClassName Win32_IP4RouteTable | Where-Object { $_.Destination -eq \\'0.0.0.0\\' -and $_.Mask -eq \\'0.0.0.0\\' }')\n                .then((data) => {\n                  let lines = data.toString().split('\\r\\n');\n                  if (lines.length > 1 && !result) {\n                    result = util.getValue(lines, 'NextHop');\n                    if (callback) {\n                      callback(result);\n                    }\n                    resolve(result);\n                    // } else {\n                    //   exec('ipconfig', util.execOptsWin, function (error, stdout) {\n                    //     let lines = stdout.toString().split('\\r\\n');\n                    //     lines.forEach(function (line) {\n                    //       line = line.trim().replace(/\\. /g, '');\n                    //       line = line.trim().replace(/ +/g, '');\n                    //       const parts = line.split(':');\n                    //       if ((parts[0].toLowerCase().startsWith('standardgate') || parts[0].toLowerCase().indexOf('gateway') > -1 || parts[0].toLowerCase().indexOf('enlace') > -1) && parts[1]) {\n                    //         result = parts[1];\n                    //       }\n                    //     });\n                    //     if (callback) { callback(result); }\n                    //     resolve(result);\n                    //   });\n                  }\n                });\n            } else {\n              if (callback) {\n                callback(result);\n              }\n              resolve(result);\n            }\n          });\n        } catch (e) {\n          if (callback) { callback(result); }\n          resolve(result);\n        }\n      }\n    });\n  });\n}\n\nexports.networkGatewayDefault = networkGatewayDefault;\n", "'use strict';\n// @ts-check\n// ==================================================================================\n// wifi.js\n// ----------------------------------------------------------------------------------\n// Description:   System Information - library\n//                for Node.js\n// Copyright:     (c) 2014 - 2024\n// Author:        Sebastian Hildebrandt\n// ----------------------------------------------------------------------------------\n// License:       MIT\n// ==================================================================================\n// 9. wifi\n// ----------------------------------------------------------------------------------\n\nconst os = require('os');\nconst exec = require('child_process').exec;\nconst execSync = require('child_process').execSync;\nconst util = require('./util');\n\nlet _platform = process.platform;\n\nconst _linux = (_platform === 'linux' || _platform === 'android');\nconst _darwin = (_platform === 'darwin');\nconst _windows = (_platform === 'win32');\n\nfunction wifiDBFromQuality(quality) {\n  const qual = parseFloat(quality);\n  if (qual < 0) { return 0; }\n  if (qual >= 100) { return -50; }\n  return (qual / 2 - 100);\n}\n\nfunction wifiQualityFromDB(db) {\n  const result = 2 * (parseFloat(db) + 100);\n  return result <= 100 ? result : 100;\n}\n\nconst _wifi_frequencies = {\n  1: 2412,\n  2: 2417,\n  3: 2422,\n  4: 2427,\n  5: 2432,\n  6: 2437,\n  7: 2442,\n  8: 2447,\n  9: 2452,\n  10: 2457,\n  11: 2462,\n  12: 2467,\n  13: 2472,\n  14: 2484,\n  32: 5160,\n  34: 5170,\n  36: 5180,\n  38: 5190,\n  40: 5200,\n  42: 5210,\n  44: 5220,\n  46: 5230,\n  48: 5240,\n  50: 5250,\n  52: 5260,\n  54: 5270,\n  56: 5280,\n  58: 5290,\n  60: 5300,\n  62: 5310,\n  64: 5320,\n  68: 5340,\n  96: 5480,\n  100: 5500,\n  102: 5510,\n  104: 5520,\n  106: 5530,\n  108: 5540,\n  110: 5550,\n  112: 5560,\n  114: 5570,\n  116: 5580,\n  118: 5590,\n  120: 5600,\n  122: 5610,\n  124: 5620,\n  126: 5630,\n  128: 5640,\n  132: 5660,\n  134: 5670,\n  136: 5680,\n  138: 5690,\n  140: 5700,\n  142: 5710,\n  144: 5720,\n  149: 5745,\n  151: 5755,\n  153: 5765,\n  155: 5775,\n  157: 5785,\n  159: 5795,\n  161: 5805,\n  165: 5825,\n  169: 5845,\n  173: 5865,\n  183: 4915,\n  184: 4920,\n  185: 4925,\n  187: 4935,\n  188: 4940,\n  189: 4945,\n  192: 4960,\n  196: 4980\n};\n\nfunction wifiFrequencyFromChannel(channel) {\n  return {}.hasOwnProperty.call(_wifi_frequencies, channel) ? _wifi_frequencies[channel] : null;\n}\n\nfunction wifiChannelFromFrequencs(frequency) {\n  let channel = 0;\n  for (let key in _wifi_frequencies) {\n    if ({}.hasOwnProperty.call(_wifi_frequencies, key)) {\n      if (_wifi_frequencies[key] === frequency) { channel = util.toInt(key); }\n    }\n  }\n  return channel;\n}\n\nfunction ifaceListLinux() {\n  const result = [];\n  const cmd = 'iw dev 2>/dev/null';\n  try {\n    const all = execSync(cmd).toString().split('\\n').map(line => line.trim()).join('\\n');\n    const parts = all.split('\\nInterface ');\n    parts.shift();\n    parts.forEach(ifaceDetails => {\n      const lines = ifaceDetails.split('\\n');\n      const iface = lines[0];\n      const id = util.toInt(util.getValue(lines, 'ifindex', ' '));\n      const mac = util.getValue(lines, 'addr', ' ');\n      const channel = util.toInt(util.getValue(lines, 'channel', ' '));\n      result.push({\n        id,\n        iface,\n        mac,\n        channel\n      });\n    });\n    return result;\n  } catch (e) {\n    try {\n      const all = execSync('nmcli -t -f general,wifi-properties,wired-properties,interface-flags,capabilities,nsp device show 2>/dev/null').toString();\n      const parts = all.split('\\n\\n');\n      let i = 1;\n      parts.forEach(ifaceDetails => {\n        const lines = ifaceDetails.split('\\n');\n        const iface = util.getValue(lines, 'GENERAL.DEVICE');\n        const type = util.getValue(lines, 'GENERAL.TYPE');\n        const id = i++; // // util.getValue(lines, 'GENERAL.PATH');\n        const mac = util.getValue(lines, 'GENERAL.HWADDR');\n        const channel = '';\n        if (type.toLowerCase() === 'wifi') {\n          result.push({\n            id,\n            iface,\n            mac,\n            channel\n          });\n        }\n      });\n      return result;\n    } catch (e) {\n      return [];\n    }\n  }\n}\n\nfunction nmiDeviceLinux(iface) {\n  const cmd = `nmcli -t -f general,wifi-properties,capabilities,ip4,ip6 device show ${iface} 2>/dev/null`;\n  try {\n    const lines = execSync(cmd).toString().split('\\n');\n    const ssid = util.getValue(lines, 'GENERAL.CONNECTION');\n    return {\n      iface,\n      type: util.getValue(lines, 'GENERAL.TYPE'),\n      vendor: util.getValue(lines, 'GENERAL.VENDOR'),\n      product: util.getValue(lines, 'GENERAL.PRODUCT'),\n      mac: util.getValue(lines, 'GENERAL.HWADDR').toLowerCase(),\n      ssid: ssid !== '--' ? ssid : null\n    };\n  } catch (e) {\n    return {};\n  }\n}\n\nfunction nmiConnectionLinux(ssid) {\n  const cmd = `nmcli -t --show-secrets connection show ${ssid} 2>/dev/null`;\n  try {\n    const lines = execSync(cmd).toString().split('\\n');\n    const bssid = util.getValue(lines, '802-11-wireless.seen-bssids').toLowerCase();\n    return {\n      ssid: ssid !== '--' ? ssid : null,\n      uuid: util.getValue(lines, 'connection.uuid'),\n      type: util.getValue(lines, 'connection.type'),\n      autoconnect: util.getValue(lines, 'connection.autoconnect') === 'yes',\n      security: util.getValue(lines, '802-11-wireless-security.key-mgmt'),\n      bssid: bssid !== '--' ? bssid : null\n    };\n  } catch (e) {\n    return {};\n  }\n}\n\nfunction wpaConnectionLinux(iface) {\n  if (!iface) {\n    return {};\n  }\n  const cmd = `wpa_cli -i ${iface} status 2>&1`;\n  try {\n    const lines = execSync(cmd).toString().split('\\n');\n    const freq = util.toInt(util.getValue(lines, 'freq', '='));\n    return {\n      ssid: util.getValue(lines, 'ssid', '='),\n      uuid: util.getValue(lines, 'uuid', '='),\n      security: util.getValue(lines, 'key_mgmt', '='),\n      freq,\n      channel: wifiChannelFromFrequencs(freq),\n      bssid: util.getValue(lines, 'bssid', '=').toLowerCase()\n    };\n  } catch (e) {\n    return {};\n  }\n}\n\nfunction getWifiNetworkListNmi() {\n  const result = [];\n  const cmd = 'nmcli -t -m multiline --fields active,ssid,bssid,mode,chan,freq,signal,security,wpa-flags,rsn-flags device wifi list 2>/dev/null';\n  try {\n    const stdout = execSync(cmd, { maxBuffer: 1024 * 20000 });\n    const parts = stdout.toString().split('ACTIVE:');\n    parts.shift();\n    parts.forEach(part => {\n      part = 'ACTIVE:' + part;\n      const lines = part.split(os.EOL);\n      const channel = util.getValue(lines, 'CHAN');\n      const frequency = util.getValue(lines, 'FREQ').toLowerCase().replace('mhz', '').trim();\n      const security = util.getValue(lines, 'SECURITY').replace('(', '').replace(')', '');\n      const wpaFlags = util.getValue(lines, 'WPA-FLAGS').replace('(', '').replace(')', '');\n      const rsnFlags = util.getValue(lines, 'RSN-FLAGS').replace('(', '').replace(')', '');\n      const quality = util.getValue(lines, 'SIGNAL');\n      result.push({\n        ssid: util.getValue(lines, 'SSID'),\n        bssid: util.getValue(lines, 'BSSID').toLowerCase(),\n        mode: util.getValue(lines, 'MODE'),\n        channel: channel ? parseInt(channel, 10) : null,\n        frequency: frequency ? parseInt(frequency, 10) : null,\n        signalLevel: wifiDBFromQuality(quality),\n        quality: quality ? parseInt(quality, 10) : null,\n        security: security && security !== 'none' ? security.split(' ') : [],\n        wpaFlags: wpaFlags && wpaFlags !== 'none' ? wpaFlags.split(' ') : [],\n        rsnFlags: rsnFlags && rsnFlags !== 'none' ? rsnFlags.split(' ') : []\n      });\n    });\n    return result;\n  } catch (e) {\n    return [];\n  }\n}\n\nfunction getWifiNetworkListIw(iface) {\n  const result = [];\n  try {\n    let iwlistParts = execSync(`export LC_ALL=C; iwlist ${iface} scan 2>&1; unset LC_ALL`).toString().split('        Cell ');\n    if (iwlistParts[0].indexOf('resource busy') >= 0) { return -1; }\n    if (iwlistParts.length > 1) {\n      iwlistParts.shift();\n      iwlistParts.forEach(element => {\n        const lines = element.split('\\n');\n        const channel = util.getValue(lines, 'channel', ':', true);\n        const address = (lines && lines.length && lines[0].indexOf('Address:') >= 0 ? lines[0].split('Address:')[1].trim().toLowerCase() : '');\n        const mode = util.getValue(lines, 'mode', ':', true);\n        const frequency = util.getValue(lines, 'frequency', ':', true);\n        const qualityString = util.getValue(lines, 'Quality', '=', true);\n        const dbParts = qualityString.toLowerCase().split('signal level=');\n        const db = dbParts.length > 1 ? util.toInt(dbParts[1]) : 0;\n        const quality = db ? wifiQualityFromDB(db) : 0;\n        const ssid = util.getValue(lines, 'essid', ':', true);\n\n        // security and wpa-flags\n        const isWpa = element.indexOf(' WPA ') >= 0;\n        const isWpa2 = element.indexOf('WPA2 ') >= 0;\n        const security = [];\n        if (isWpa) { security.push('WPA'); }\n        if (isWpa2) { security.push('WPA2'); }\n        const wpaFlags = [];\n        let wpaFlag = '';\n        lines.forEach(function (line) {\n          const l = line.trim().toLowerCase();\n          if (l.indexOf('group cipher') >= 0) {\n            if (wpaFlag) {\n              wpaFlags.push(wpaFlag);\n            }\n            const parts = l.split(':');\n            if (parts.length > 1) {\n              wpaFlag = parts[1].trim().toUpperCase();\n            }\n          }\n          if (l.indexOf('pairwise cipher') >= 0) {\n            const parts = l.split(':');\n            if (parts.length > 1) {\n              if (parts[1].indexOf('tkip')) { wpaFlag = (wpaFlag ? 'TKIP/' + wpaFlag : 'TKIP'); }\n              else if (parts[1].indexOf('ccmp')) { wpaFlag = (wpaFlag ? 'CCMP/' + wpaFlag : 'CCMP'); }\n              else if (parts[1].indexOf('proprietary')) { wpaFlag = (wpaFlag ? 'PROP/' + wpaFlag : 'PROP'); }\n            }\n          }\n          if (l.indexOf('authentication suites') >= 0) {\n            const parts = l.split(':');\n            if (parts.length > 1) {\n              if (parts[1].indexOf('802.1x')) { wpaFlag = (wpaFlag ? '802.1x/' + wpaFlag : '802.1x'); }\n              else if (parts[1].indexOf('psk')) { wpaFlag = (wpaFlag ? 'PSK/' + wpaFlag : 'PSK'); }\n            }\n          }\n        });\n        if (wpaFlag) {\n          wpaFlags.push(wpaFlag);\n        }\n\n        result.push({\n          ssid,\n          bssid: address,\n          mode,\n          channel: channel ? util.toInt(channel) : null,\n          frequency: frequency ? util.toInt(frequency.replace('.', '')) : null,\n          signalLevel: db,\n          quality,\n          security,\n          wpaFlags,\n          rsnFlags: []\n        });\n      });\n    }\n    return result;\n  } catch (e) {\n    return -1;\n  }\n}\n\nfunction parseWifiDarwin(wifiObj) {\n  const result = [];\n  if (wifiObj) {\n    wifiObj.forEach(function (wifiItem) {\n      const signalLevel = wifiItem.RSSI;\n      let security = [];\n      let wpaFlags = [];\n      let ssid = wifiItem.SSID_STR || '';\n      if (wifiItem.WPA_IE) {\n        security.push('WPA');\n        if (wifiItem.WPA_IE.IE_KEY_WPA_UCIPHERS) {\n          wifiItem.WPA_IE.IE_KEY_WPA_UCIPHERS.forEach(function (ciphers) {\n            if (ciphers === 0 && wpaFlags.indexOf('unknown/TKIP') === -1) { wpaFlags.push('unknown/TKIP'); }\n            if (ciphers === 2 && wpaFlags.indexOf('PSK/TKIP') === -1) { wpaFlags.push('PSK/TKIP'); }\n            if (ciphers === 4 && wpaFlags.indexOf('PSK/AES') === -1) { wpaFlags.push('PSK/AES'); }\n          });\n        }\n      }\n      if (wifiItem.RSN_IE) {\n        security.push('WPA2');\n        if (wifiItem.RSN_IE.IE_KEY_RSN_UCIPHERS) {\n          wifiItem.RSN_IE.IE_KEY_RSN_UCIPHERS.forEach(function (ciphers) {\n            if (ciphers === 0 && wpaFlags.indexOf('unknown/TKIP') === -1) { wpaFlags.push('unknown/TKIP'); }\n            if (ciphers === 2 && wpaFlags.indexOf('TKIP/TKIP') === -1) { wpaFlags.push('TKIP/TKIP'); }\n            if (ciphers === 4 && wpaFlags.indexOf('PSK/AES') === -1) { wpaFlags.push('PSK/AES'); }\n          });\n        }\n      }\n      if (wifiItem.SSID && ssid === '') {\n        try {\n          ssid = Buffer.from(wifiItem.SSID, 'base64').toString('utf8');\n        } catch (err) {\n          util.noop();\n        }\n      }\n      result.push({\n        ssid,\n        bssid: wifiItem.BSSID || '',\n        mode: '',\n        channel: wifiItem.CHANNEL,\n        frequency: wifiFrequencyFromChannel(wifiItem.CHANNEL),\n        signalLevel: signalLevel ? parseInt(signalLevel, 10) : null,\n        quality: wifiQualityFromDB(signalLevel),\n        security,\n        wpaFlags,\n        rsnFlags: []\n      });\n    });\n  }\n  return result;\n}\nfunction wifiNetworks(callback) {\n  return new Promise((resolve) => {\n    process.nextTick(() => {\n      let result = [];\n      if (_linux) {\n        result = getWifiNetworkListNmi();\n        if (result.length === 0) {\n          try {\n            const iwconfigParts = execSync('export LC_ALL=C; iwconfig 2>/dev/null; unset LC_ALL').toString().split('\\n\\n');\n            let iface = '';\n            iwconfigParts.forEach(element => {\n              if (element.indexOf('no wireless') === -1 && element.trim() !== '') {\n                iface = element.split(' ')[0];\n              }\n            });\n            if (iface) {\n              let ifaceSanitized = '';\n              const s = util.isPrototypePolluted() ? '---' : util.sanitizeShellString(iface, true);\n              const l = util.mathMin(s.length, 2000);\n\n              for (let i = 0; i <= l; i++) {\n                if (s[i] !== undefined) {\n                  ifaceSanitized = ifaceSanitized + s[i];\n                }\n              }\n\n              const res = getWifiNetworkListIw(ifaceSanitized);\n              if (res === -1) {\n                // try again after 4 secs\n                setTimeout(function (iface) {\n                  const res = getWifiNetworkListIw(iface);\n                  if (res != -1) { result = res; }\n                  if (callback) {\n                    callback(result);\n                  }\n                  resolve(result);\n                }, 4000);\n              } else {\n                result = res;\n                if (callback) {\n                  callback(result);\n                }\n                resolve(result);\n              }\n            } else {\n              if (callback) {\n                callback(result);\n              }\n              resolve(result);\n            }\n          } catch (e) {\n            if (callback) {\n              callback(result);\n            }\n            resolve(result);\n          }\n        } else {\n          if (callback) {\n            callback(result);\n          }\n          resolve(result);\n        }\n      } else if (_darwin) {\n        let cmd = '/System/Library/PrivateFrameworks/Apple80211.framework/Versions/Current/Resources/airport -s -x';\n        exec(cmd, { maxBuffer: 1024 * 40000 }, function (error, stdout) {\n          const output = stdout.toString();\n          result = parseWifiDarwin(util.plistParser(output));\n          if (callback) {\n            callback(result);\n          }\n          resolve(result);\n        });\n      } else if (_windows) {\n        let cmd = 'netsh wlan show networks mode=Bssid';\n        util.powerShell(cmd).then((stdout) => {\n          const ssidParts = stdout.toString('utf8').split(os.EOL + os.EOL + 'SSID ');\n          ssidParts.shift();\n\n          ssidParts.forEach(ssidPart => {\n            const ssidLines = ssidPart.split(os.EOL);\n            if (ssidLines && ssidLines.length >= 8 && ssidLines[0].indexOf(':') >= 0) {\n              const bssidsParts = ssidPart.split(' BSSID');\n              bssidsParts.shift();\n\n              bssidsParts.forEach((bssidPart) => {\n                const bssidLines = bssidPart.split(os.EOL);\n                const bssidLine = bssidLines[0].split(':');\n                bssidLine.shift();\n                const bssid = bssidLine.join(':').trim().toLowerCase();\n                const channel = bssidLines[3].split(':').pop().trim();\n                const quality = bssidLines[1].split(':').pop().trim();\n\n                result.push({\n                  ssid: ssidLines[0].split(':').pop().trim(),\n                  bssid,\n                  mode: '',\n                  channel: channel ? parseInt(channel, 10) : null,\n                  frequency: wifiFrequencyFromChannel(channel),\n                  signalLevel: wifiDBFromQuality(quality),\n                  quality: quality ? parseInt(quality, 10) : null,\n                  security: [ssidLines[2].split(':').pop().trim()],\n                  wpaFlags: [ssidLines[3].split(':').pop().trim()],\n                  rsnFlags: []\n                });\n              });\n            }\n          });\n\n          if (callback) {\n            callback(result);\n          }\n          resolve(result);\n        });\n      } else {\n        if (callback) {\n          callback(result);\n        }\n        resolve(result);\n      }\n    });\n  });\n}\n\nexports.wifiNetworks = wifiNetworks;\n\nfunction getVendor(model) {\n  model = model.toLowerCase();\n  let result = '';\n  if (model.indexOf('intel') >= 0) { result = 'Intel'; }\n  else if (model.indexOf('realtek') >= 0) { result = 'Realtek'; }\n  else if (model.indexOf('qualcom') >= 0) { result = 'Qualcom'; }\n  else if (model.indexOf('broadcom') >= 0) { result = 'Broadcom'; }\n  else if (model.indexOf('cavium') >= 0) { result = 'Cavium'; }\n  else if (model.indexOf('cisco') >= 0) { result = 'Cisco'; }\n  else if (model.indexOf('marvel') >= 0) { result = 'Marvel'; }\n  else if (model.indexOf('zyxel') >= 0) { result = 'Zyxel'; }\n  else if (model.indexOf('melanox') >= 0) { result = 'Melanox'; }\n  else if (model.indexOf('d-link') >= 0) { result = 'D-Link'; }\n  else if (model.indexOf('tp-link') >= 0) { result = 'TP-Link'; }\n  else if (model.indexOf('asus') >= 0) { result = 'Asus'; }\n  else if (model.indexOf('linksys') >= 0) { result = 'Linksys'; }\n  return result;\n}\n\nfunction formatBssid(s) {\n  s = s.replace(/</g, '').replace(/>/g, '').match(/.{1,2}/g) || [];\n  return s.join(':');\n}\n\nfunction wifiConnections(callback) {\n\n  return new Promise((resolve) => {\n    process.nextTick(() => {\n      const result = [];\n\n      if (_linux) {\n        const ifaces = ifaceListLinux();\n        const networkList = getWifiNetworkListNmi();\n        ifaces.forEach(ifaceDetail => {\n          let ifaceSanitized = '';\n          const s = util.isPrototypePolluted() ? '---' : util.sanitizeShellString(ifaceDetail.iface, true);\n          const ll = util.mathMin(s.length, 2000);\n\n          for (let i = 0; i <= ll; i++) {\n            if (s[i] !== undefined) {\n              ifaceSanitized = ifaceSanitized + s[i];\n            }\n          }\n\n          const nmiDetails = nmiDeviceLinux(ifaceSanitized);\n          const wpaDetails = wpaConnectionLinux(ifaceSanitized);\n          const ssid = nmiDetails.ssid || wpaDetails.ssid;\n          const network = networkList.filter(nw => nw.ssid === ssid);\n          let ssidSanitized = '';\n          const t = util.isPrototypePolluted() ? '---' : util.sanitizeShellString(ssid, true);\n          const l = util.mathMin(t.length, 2000);\n          for (let i = 0; i <= l; i++) {\n            if (t[i] !== undefined) {\n              ssidSanitized = ssidSanitized + t[i];\n            }\n          }\n\n          const nmiConnection = nmiConnectionLinux(ssidSanitized);\n          const channel = network && network.length && network[0].channel ? network[0].channel : (wpaDetails.channel ? wpaDetails.channel : null);\n          const bssid = network && network.length && network[0].bssid ? network[0].bssid : (wpaDetails.bssid ? wpaDetails.bssid : null);\n          const signalLevel = network && network.length && network[0].signalLevel ? network[0].signalLevel : null;\n          if (ssid && bssid) {\n            result.push({\n              id: ifaceDetail.id,\n              iface: ifaceDetail.iface,\n              model: nmiDetails.product,\n              ssid,\n              bssid: network && network.length && network[0].bssid ? network[0].bssid : (wpaDetails.bssid ? wpaDetails.bssid : null),\n              channel,\n              frequency: channel ? wifiFrequencyFromChannel(channel) : null,\n              type: nmiConnection.type ? nmiConnection.type : '802.11',\n              security: nmiConnection.security ? nmiConnection.security : (wpaDetails.security ? wpaDetails.security : null),\n              signalLevel,\n              quality: wifiQualityFromDB(signalLevel),\n              txRate: null\n            });\n          }\n        });\n        if (callback) {\n          callback(result);\n        }\n        resolve(result);\n      } else if (_darwin) {\n        let cmd = 'system_profiler SPNetworkDataType';\n        exec(cmd, function (error, stdout) {\n          const parts1 = stdout.toString().split('\\n\\n    Wi-Fi:\\n\\n');\n          if (parts1.length > 1) {\n            const lines = parts1[1].split('\\n\\n')[0].split('\\n');\n            const iface = util.getValue(lines, 'BSD Device Name', ':', true);\n            const model = util.getValue(lines, 'hardware', ':', true);\n            cmd = '/System/Library/PrivateFrameworks/Apple80211.framework/Versions/Current/Resources/airport -I 2>/dev/null; echo \"######\" ; ioreg -n AppleBCMWLANSkywalkInterface -r 2>/dev/null';\n            exec(cmd, function (error, stdout) {\n              const parts = stdout.toString().split('######');\n              const lines2 = parts[0].split('\\n');\n              let lines3 = [];\n              if (parts[1].indexOf('  | {') > 0 && parts[1].indexOf('  | }') > parts[1].indexOf('  | {')) {\n                lines3 = parts[1].split('  | {')[1].split('  | }')[0].replace(/ \\| /g, '').replace(/\"/g, '').split('\\n');\n              }\n              if (lines2.length > 10) {\n                const ssid = util.getValue(lines2, 'ssid', ':', true);\n                const bssid = util.getValue(lines2, 'bssid', ':', true) || formatBssid(util.getValue(lines3, 'IO80211BSSID', '=', true));\n                const security = util.getValue(lines2, 'link auth', ':', true);\n                const txRate = util.getValue(lines2, 'lastTxRate', ':', true);\n                const channel = util.getValue(lines2, 'channel', ':', true).split(',')[0];\n                const type = '802.11';\n                const rssi = util.toInt(util.getValue(lines2, 'agrCtlRSSI', ':', true));\n                /// const noise = util.toInt(util.getValue(lines2, 'agrCtlNoise', ':', true));\n                const signalLevel = rssi;\n                if (ssid || bssid) {\n                  result.push({\n                    id: 'Wi-Fi',\n                    iface,\n                    model,\n                    ssid,\n                    bssid,\n                    channel: util.toInt(channel),\n                    frequency: channel ? wifiFrequencyFromChannel(channel) : null,\n                    type,\n                    security,\n                    signalLevel,\n                    quality: wifiQualityFromDB(signalLevel),\n                    txRate\n                  });\n                }\n              }\n              if (lines3.length > 10) {\n                const ssid = util.getValue(lines3, 'IO80211SSID', '=', true);\n                const bssid = formatBssid(util.getValue(lines3, 'IO80211BSSID', '=', true));\n                const security = '';\n                const txRate = -1;\n                const signalLevel = -1;\n                const quality = -1;\n                const channel = util.getValue(lines3, 'IO80211Channel', '=', true);\n                const type = '802.11';\n                if ((ssid || bssid) && !result.length) {\n                  result.push({\n                    id: 'Wi-Fi',\n                    iface,\n                    model,\n                    ssid,\n                    bssid,\n                    channel: util.toInt(channel),\n                    frequency: channel ? wifiFrequencyFromChannel(channel) : null,\n                    type,\n                    security,\n                    signalLevel,\n                    quality,\n                    txRate\n                  });\n                }\n              }\n              if (callback) {\n                callback(result);\n              }\n              resolve(result);\n            });\n          } else {\n            if (callback) {\n              callback(result);\n            }\n            resolve(result);\n          }\n        });\n      } else if (_windows) {\n        let cmd = 'netsh wlan show interfaces';\n        util.powerShell(cmd).then(function (stdout) {\n          const allLines = stdout.toString().split('\\r\\n');\n          for (let i = 0; i < allLines.length; i++) {\n            allLines[i] = allLines[i].trim();\n          }\n          const parts = allLines.join('\\r\\n').split(':\\r\\n\\r\\n');\n          parts.shift();\n          parts.forEach(part => {\n            const lines = part.split('\\r\\n');\n            if (lines.length >= 5) {\n              const iface = lines[0].indexOf(':') >= 0 ? lines[0].split(':')[1].trim() : '';\n              const model = lines[1].indexOf(':') >= 0 ? lines[1].split(':')[1].trim() : '';\n              const id = lines[2].indexOf(':') >= 0 ? lines[2].split(':')[1].trim() : '';\n              const ssid = util.getValue(lines, 'SSID', ':', true);\n              const bssid = util.getValue(lines, 'BSSID', ':', true);\n              const quality = util.getValue(lines, 'Signal', ':', true);\n              const signalLevel = wifiDBFromQuality(quality);\n              const type = util.getValue(lines, 'Radio type', ':', true) || util.getValue(lines, 'Type de radio', ':', true) || util.getValue(lines, 'Funktyp', ':', true) || null;\n              const security = util.getValue(lines, 'authentication', ':', true) || util.getValue(lines, 'Authentification', ':', true) || util.getValue(lines, 'Authentifizierung', ':', true) || null;\n              const channel = util.getValue(lines, 'Channel', ':', true) || util.getValue(lines, 'Canal', ':', true) || util.getValue(lines, 'Kanal', ':', true) || null;\n              const txRate = util.getValue(lines, 'Transmit rate (mbps)', ':', true) || util.getValue(lines, 'Transmission (mbit/s)', ':', true) || util.getValue(lines, 'Empfangsrate (MBit/s)', ':', true) || null;\n              if (model && id && ssid && bssid) {\n                result.push({\n                  id,\n                  iface,\n                  model,\n                  ssid,\n                  bssid,\n                  channel: util.toInt(channel),\n                  frequency: channel ? wifiFrequencyFromChannel(channel) : null,\n                  type,\n                  security,\n                  signalLevel,\n                  quality: quality ? parseInt(quality, 10) : null,\n                  txRate: util.toInt(txRate) || null\n                });\n              }\n            }\n          });\n          if (callback) {\n            callback(result);\n          }\n          resolve(result);\n        });\n      } else {\n        if (callback) {\n          callback(result);\n        }\n        resolve(result);\n      }\n    });\n  });\n}\n\nexports.wifiConnections = wifiConnections;\n\nfunction wifiInterfaces(callback) {\n\n  return new Promise((resolve) => {\n    process.nextTick(() => {\n      const result = [];\n\n      if (_linux) {\n        const ifaces = ifaceListLinux();\n        ifaces.forEach(ifaceDetail => {\n          const nmiDetails = nmiDeviceLinux(ifaceDetail.iface);\n          result.push({\n            id: ifaceDetail.id,\n            iface: ifaceDetail.iface,\n            model: nmiDetails.product ? nmiDetails.product : null,\n            vendor: nmiDetails.vendor ? nmiDetails.vendor : null,\n            mac: ifaceDetail.mac,\n          });\n        });\n        if (callback) {\n          callback(result);\n        }\n        resolve(result);\n      } else if (_darwin) {\n        let cmd = 'system_profiler SPNetworkDataType';\n        exec(cmd, function (error, stdout) {\n          const parts1 = stdout.toString().split('\\n\\n    Wi-Fi:\\n\\n');\n          if (parts1.length > 1) {\n            const lines = parts1[1].split('\\n\\n')[0].split('\\n');\n            const iface = util.getValue(lines, 'BSD Device Name', ':', true);\n            const mac = util.getValue(lines, 'MAC Address', ':', true);\n            const model = util.getValue(lines, 'hardware', ':', true);\n            result.push({\n              id: 'Wi-Fi',\n              iface,\n              model,\n              vendor: '',\n              mac\n            });\n          }\n          if (callback) {\n            callback(result);\n          }\n          resolve(result);\n        });\n      } else if (_windows) {\n        let cmd = 'netsh wlan show interfaces';\n        util.powerShell(cmd).then(function (stdout) {\n          const allLines = stdout.toString().split('\\r\\n');\n          for (let i = 0; i < allLines.length; i++) {\n            allLines[i] = allLines[i].trim();\n          }\n          const parts = allLines.join('\\r\\n').split(':\\r\\n\\r\\n');\n          parts.shift();\n          parts.forEach(part => {\n            const lines = part.split('\\r\\n');\n            if (lines.length >= 5) {\n              const iface = lines[0].indexOf(':') >= 0 ? lines[0].split(':')[1].trim() : '';\n              const model = lines[1].indexOf(':') >= 0 ? lines[1].split(':')[1].trim() : '';\n              const id = lines[2].indexOf(':') >= 0 ? lines[2].split(':')[1].trim() : '';\n              const macParts = lines[3].indexOf(':') >= 0 ? lines[3].split(':') : [];\n              macParts.shift();\n              const mac = macParts.join(':').trim();\n              const vendor = getVendor(model);\n              if (iface && model && id && mac) {\n                result.push({\n                  id,\n                  iface,\n                  model,\n                  vendor,\n                  mac,\n                });\n              }\n            }\n          });\n          if (callback) {\n            callback(result);\n          }\n          resolve(result);\n        });\n      } else {\n        if (callback) {\n          callback(result);\n        }\n        resolve(result);\n      }\n    });\n  });\n}\n\nexports.wifiInterfaces = wifiInterfaces;\n", "'use strict';\n// @ts-check\n// ==================================================================================\n// processes.js\n// ----------------------------------------------------------------------------------\n// Description:   System Information - library\n//                for Node.js\n// Copyright:     (c) 2014 - 2024\n// Author:        Sebastian Hildebrandt\n// ----------------------------------------------------------------------------------\n// License:       MIT\n// ==================================================================================\n// 10. Processes\n// ----------------------------------------------------------------------------------\n\nconst os = require('os');\nconst fs = require('fs');\nconst path = require('path');\nconst exec = require('child_process').exec;\nconst execSync = require('child_process').execSync;\n\nconst util = require('./util');\n\nlet _platform = process.platform;\n\nconst _linux = (_platform === 'linux' || _platform === 'android');\nconst _darwin = (_platform === 'darwin');\nconst _windows = (_platform === 'win32');\nconst _freebsd = (_platform === 'freebsd');\nconst _openbsd = (_platform === 'openbsd');\nconst _netbsd = (_platform === 'netbsd');\nconst _sunos = (_platform === 'sunos');\n\nconst _processes_cpu = {\n  all: 0,\n  all_utime: 0,\n  all_stime: 0,\n  list: {},\n  ms: 0,\n  result: {}\n};\nconst _services_cpu = {\n  all: 0,\n  all_utime: 0,\n  all_stime: 0,\n  list: {},\n  ms: 0,\n  result: {}\n};\nconst _process_cpu = {\n  all: 0,\n  all_utime: 0,\n  all_stime: 0,\n  list: {},\n  ms: 0,\n  result: {}\n};\n\nconst _winStatusValues = {\n  '0': 'unknown',\n  '1': 'other',\n  '2': 'ready',\n  '3': 'running',\n  '4': 'blocked',\n  '5': 'suspended blocked',\n  '6': 'suspended ready',\n  '7': 'terminated',\n  '8': 'stopped',\n  '9': 'growing',\n};\n\nfunction parseTimeUnix(time) {\n  let result = time;\n  let parts = time.replace(/ +/g, ' ').split(' ');\n  if (parts.length === 5) {\n    result = parts[4] + '-' + ('0' + ('JANFEBMARAPRMAYJUNJULAUGSEPOCTNOVDEC'.indexOf(parts[1].toUpperCase()) / 3 + 1)).slice(-2) + '-' + ('0' + parts[2]).slice(-2) + ' ' + parts[3];\n  }\n  return result;\n}\n\nfunction parseElapsedTime(etime) {\n  let current = new Date();\n  current = new Date(current.getTime() - current.getTimezoneOffset() * 60000);\n\n  const elapsed = etime.split('-');\n\n  const timeIndex = elapsed.length - 1;\n  const days = timeIndex > 0 ? parseInt(elapsed[timeIndex - 1]) : 0;\n\n  const timeStr = elapsed[timeIndex].split(':');\n  const hours = timeStr.length === 3 ? parseInt(timeStr[0] || 0) : 0;\n  const mins = parseInt(timeStr[timeStr.length === 3 ? 1 : 0] || 0);\n  const secs = parseInt(timeStr[timeStr.length === 3 ? 2 : 1] || 0);\n  const ms = (((((days * 24 + hours) * 60) + mins) * 60 + secs) * 1000);\n\n  let res = new Date(current.getTime());\n  let result = res.toISOString().substring(0, 10) + ' ' + res.toISOString().substring(11, 19);\n  try {\n    res = new Date(current.getTime() - ms);\n    result = res.toISOString().substring(0, 10) + ' ' + res.toISOString().substring(11, 19);\n  } catch (e) {\n    util.noop();\n  }\n  return result;\n}\n\n// --------------------------\n// PS - services\n// pass a comma separated string with services to check (mysql, apache, postgresql, ...)\n// this function gives an array back, if the services are running.\n\nfunction services(srv, callback) {\n\n  // fallback - if only callback is given\n  if (util.isFunction(srv) && !callback) {\n    callback = srv;\n    srv = '';\n  }\n\n  return new Promise((resolve) => {\n    process.nextTick(() => {\n      if (typeof srv !== 'string') {\n        if (callback) { callback([]); }\n        return resolve([]);\n      }\n\n      if (srv) {\n        let srvString = '';\n        srvString.__proto__.toLowerCase = util.stringToLower;\n        srvString.__proto__.replace = util.stringReplace;\n        srvString.__proto__.trim = util.stringTrim;\n\n        const s = util.sanitizeShellString(srv);\n        const l = util.mathMin(s.length, 2000);\n        for (let i = 0; i <= l; i++) {\n          if (s[i] !== undefined) {\n            srvString = srvString + s[i];\n          }\n        }\n\n        srvString = srvString.trim().toLowerCase().replace(/, /g, '|').replace(/,+/g, '|');\n        if (srvString === '') {\n          srvString = '*';\n        }\n        if (util.isPrototypePolluted() && srvString !== '*') {\n          srvString = '------';\n        }\n        let srvs = srvString.split('|');\n        let result = [];\n        let dataSrv = [];\n\n        if (_linux || _freebsd || _openbsd || _netbsd || _darwin) {\n          if ((_linux || _freebsd || _openbsd || _netbsd) && srvString === '*') {\n            try {\n              const tmpsrv = execSync('systemctl --all --type=service --no-legend 2> /dev/null').toString().split('\\n');\n              srvs = [];\n              for (const s of tmpsrv) {\n                const name = s.split('.service')[0];\n                if (name && s.indexOf(' not-found ') === -1) {\n                  srvs.push(name.trim());\n                }\n              }\n              srvString = srvs.join('|');\n            } catch (d) {\n              try {\n                srvString = '';\n                const tmpsrv = execSync('service --status-all 2> /dev/null').toString().split('\\n');\n                for (const s of tmpsrv) {\n                  const parts = s.split(']');\n                  if (parts.length === 2) {\n                    srvString += (srvString !== '' ? '|' : '') + parts[1].trim();\n                  }\n                }\n                srvs = srvString.split('|');\n              } catch (e) {\n                try {\n                  const srvStr = execSync('ls /etc/init.d/ -m 2> /dev/null').toString().split('\\n').join('');\n                  srvString = '';\n                  if (srvStr) {\n                    const tmpsrv = srvStr.split(',');\n                    for (const s of tmpsrv) {\n                      const name = s.trim();\n                      if (name) {\n                        srvString += (srvString !== '' ? '|' : '') + name;\n                      }\n                    }\n                    srvs = srvString.split('|');\n                  }\n                } catch (f) {\n                  srvString = '';\n                  srvs = [];\n                }\n              }\n            }\n          }\n          if ((_darwin) && srvString === '*') { // service enumeration not yet suported on mac OS\n            if (callback) { callback(result); }\n            resolve(result);\n          }\n          let args = (_darwin) ? ['-caxo', 'pcpu,pmem,pid,command'] : ['-axo', 'pcpu,pmem,pid,command'];\n          if (srvString !== '' && srvs.length > 0) {\n            util.execSafe('ps', args).then((stdout) => {\n              if (stdout) {\n                let lines = stdout.replace(/ +/g, ' ').replace(/,+/g, '.').split('\\n');\n                srvs.forEach(function (srv) {\n                  let ps;\n                  if (_darwin) {\n                    ps = lines.filter(function (e) {\n                      return (e.toLowerCase().indexOf(srv) !== -1);\n                    });\n\n                  } else {\n                    ps = lines.filter(function (e) {\n                      return (e.toLowerCase().indexOf(' ' + srv.toLowerCase() + ':') !== -1) || (e.toLowerCase().indexOf('/' + srv.toLowerCase()) !== -1);\n                    });\n                  }\n                  const pids = [];\n                  for (const p of ps) {\n                    const pid = p.trim().split(' ')[2];\n                    if (pid) {\n                      pids.push(parseInt(pid, 10));\n                    }\n                  }\n                  result.push({\n                    name: srv,\n                    running: ps.length > 0,\n                    startmode: '',\n                    pids: pids,\n                    cpu: parseFloat((ps.reduce(function (pv, cv) {\n                      return pv + parseFloat(cv.trim().split(' ')[0]);\n                    }, 0)).toFixed(2)),\n                    mem: parseFloat((ps.reduce(function (pv, cv) {\n                      return pv + parseFloat(cv.trim().split(' ')[1]);\n                    }, 0)).toFixed(2))\n                  });\n                });\n                if (_linux) {\n                  // calc process_cpu - ps is not accurate in linux!\n                  let cmd = 'cat /proc/stat | grep \"cpu \"';\n                  for (let i in result) {\n                    for (let j in result[i].pids) {\n                      cmd += (';cat /proc/' + result[i].pids[j] + '/stat');\n                    }\n                  }\n                  exec(cmd, { maxBuffer: 1024 * 20000 }, function (error, stdout) {\n                    let curr_processes = stdout.toString().split('\\n');\n\n                    // first line (all - /proc/stat)\n                    let all = parseProcStat(curr_processes.shift());\n\n                    // process\n                    let list_new = {};\n                    let resultProcess = {};\n                    curr_processes.forEach((element) => {\n                      resultProcess = calcProcStatLinux(element, all, _services_cpu);\n\n                      if (resultProcess.pid) {\n                        let listPos = -1;\n                        for (let i in result) {\n                          for (let j in result[i].pids) {\n                            if (parseInt(result[i].pids[j]) === parseInt(resultProcess.pid)) {\n                              listPos = i;\n                            }\n                          }\n                        }\n                        if (listPos >= 0) {\n                          result[listPos].cpu += resultProcess.cpuu + resultProcess.cpus;\n                        }\n\n                        // save new values\n                        list_new[resultProcess.pid] = {\n                          cpuu: resultProcess.cpuu,\n                          cpus: resultProcess.cpus,\n                          utime: resultProcess.utime,\n                          stime: resultProcess.stime,\n                          cutime: resultProcess.cutime,\n                          cstime: resultProcess.cstime\n                        };\n                      }\n                    });\n\n                    // store old values\n                    _services_cpu.all = all;\n                    _services_cpu.list = Object.assign({}, list_new);\n                    _services_cpu.ms = Date.now() - _services_cpu.ms;\n                    _services_cpu.result = Object.assign({}, result);\n                    if (callback) { callback(result); }\n                    resolve(result);\n                  });\n                } else {\n                  if (callback) { callback(result); }\n                  resolve(result);\n                }\n              } else {\n                args = ['-o', 'comm'];\n                util.execSafe('ps', args).then((stdout) => {\n                  if (stdout) {\n                    let lines = stdout.replace(/ +/g, ' ').replace(/,+/g, '.').split('\\n');\n                    srvs.forEach(function (srv) {\n                      let ps = lines.filter(function (e) {\n                        return e.indexOf(srv) !== -1;\n                      });\n                      result.push({\n                        name: srv,\n                        running: ps.length > 0,\n                        startmode: '',\n                        cpu: 0,\n                        mem: 0\n                      });\n                    });\n                    if (callback) { callback(result); }\n                    resolve(result);\n                  } else {\n                    srvs.forEach(function (srv) {\n                      result.push({\n                        name: srv,\n                        running: false,\n                        startmode: '',\n                        cpu: 0,\n                        mem: 0\n                      });\n                    });\n                    if (callback) { callback(result); }\n                    resolve(result);\n                  }\n                });\n              }\n            });\n          } else {\n            if (callback) { callback(result); }\n            resolve(result);\n          }\n        }\n        if (_windows) {\n          try {\n            let wincommand = 'Get-CimInstance Win32_Service';\n            if (srvs[0] !== '*') {\n              wincommand += ' -Filter \"';\n              srvs.forEach((srv) => {\n                wincommand += `Name='${srv}' or `;\n              });\n              wincommand = `${wincommand.slice(0, -4)}\"`;\n            }\n            wincommand += ' | select Name,Caption,Started,StartMode,ProcessId | fl';\n            util.powerShell(wincommand).then((stdout, error) => {\n              if (!error) {\n                let serviceSections = stdout.split(/\\n\\s*\\n/);\n                serviceSections.forEach((element) => {\n                  if (element.trim() !== '') {\n                    let lines = element.trim().split('\\r\\n');\n                    let srvName = util.getValue(lines, 'Name', ':', true).toLowerCase();\n                    let srvCaption = util.getValue(lines, 'Caption', ':', true).toLowerCase();\n                    let started = util.getValue(lines, 'Started', ':', true);\n                    let startMode = util.getValue(lines, 'StartMode', ':', true);\n                    let pid = util.getValue(lines, 'ProcessId', ':', true);\n                    if (srvString === '*' || srvs.indexOf(srvName) >= 0 || srvs.indexOf(srvCaption) >= 0) {\n                      result.push({\n                        name: srvName,\n                        running: (started.toLowerCase() === 'true'),\n                        startmode: startMode,\n                        pids: [pid],\n                        cpu: 0,\n                        mem: 0\n                      });\n                      dataSrv.push(srvName);\n                      dataSrv.push(srvCaption);\n                    }\n                  }\n\n                });\n\n                if (srvString !== '*') {\n                  let srvsMissing = srvs.filter(function (e) {\n                    return dataSrv.indexOf(e) === -1;\n                  });\n                  srvsMissing.forEach(function (srvName) {\n                    result.push({\n                      name: srvName,\n                      running: false,\n                      startmode: '',\n                      pids: [],\n                      cpu: 0,\n                      mem: 0\n                    });\n                  });\n                }\n                if (callback) { callback(result); }\n                resolve(result);\n              } else {\n                srvs.forEach(function (srvName) {\n                  result.push({\n                    name: srvName,\n                    running: false,\n                    startmode: '',\n                    cpu: 0,\n                    mem: 0\n                  });\n                });\n                if (callback) { callback(result); }\n                resolve(result);\n              }\n            });\n          } catch (e) {\n            if (callback) { callback(result); }\n            resolve(result);\n          }\n        }\n      } else {\n        if (callback) { callback([]); }\n        resolve([]);\n      }\n    });\n  });\n}\n\nexports.services = services;\n\nfunction parseProcStat(line) {\n  let parts = line.replace(/ +/g, ' ').split(' ');\n  let user = (parts.length >= 2 ? parseInt(parts[1]) : 0);\n  let nice = (parts.length >= 3 ? parseInt(parts[2]) : 0);\n  let system = (parts.length >= 4 ? parseInt(parts[3]) : 0);\n  let idle = (parts.length >= 5 ? parseInt(parts[4]) : 0);\n  let iowait = (parts.length >= 6 ? parseInt(parts[5]) : 0);\n  let irq = (parts.length >= 7 ? parseInt(parts[6]) : 0);\n  let softirq = (parts.length >= 8 ? parseInt(parts[7]) : 0);\n  let steal = (parts.length >= 9 ? parseInt(parts[8]) : 0);\n  let guest = (parts.length >= 10 ? parseInt(parts[9]) : 0);\n  let guest_nice = (parts.length >= 11 ? parseInt(parts[10]) : 0);\n  return user + nice + system + idle + iowait + irq + softirq + steal + guest + guest_nice;\n}\n\nfunction calcProcStatLinux(line, all, _cpu_old) {\n  let statparts = line.replace(/ +/g, ' ').split(')');\n  if (statparts.length >= 2) {\n    let parts = statparts[1].split(' ');\n    if (parts.length >= 16) {\n      let pid = parseInt(statparts[0].split(' ')[0]);\n      let utime = parseInt(parts[12]);\n      let stime = parseInt(parts[13]);\n      let cutime = parseInt(parts[14]);\n      let cstime = parseInt(parts[15]);\n\n      // calc\n      let cpuu = 0;\n      let cpus = 0;\n      if (_cpu_old.all > 0 && _cpu_old.list[pid]) {\n        cpuu = (utime + cutime - _cpu_old.list[pid].utime - _cpu_old.list[pid].cutime) / (all - _cpu_old.all) * 100; // user\n        cpus = (stime + cstime - _cpu_old.list[pid].stime - _cpu_old.list[pid].cstime) / (all - _cpu_old.all) * 100; // system\n      } else {\n        cpuu = (utime + cutime) / (all) * 100; // user\n        cpus = (stime + cstime) / (all) * 100; // system\n      }\n      return {\n        pid: pid,\n        utime: utime,\n        stime: stime,\n        cutime: cutime,\n        cstime: cstime,\n        cpuu: cpuu,\n        cpus: cpus\n      };\n    } else {\n      return {\n        pid: 0,\n        utime: 0,\n        stime: 0,\n        cutime: 0,\n        cstime: 0,\n        cpuu: 0,\n        cpus: 0\n      };\n    }\n  } else {\n    return {\n      pid: 0,\n      utime: 0,\n      stime: 0,\n      cutime: 0,\n      cstime: 0,\n      cpuu: 0,\n      cpus: 0\n    };\n  }\n}\n\nfunction calcProcStatWin(procStat, all, _cpu_old) {\n  // calc\n  let cpuu = 0;\n  let cpus = 0;\n  if (_cpu_old.all > 0 && _cpu_old.list[procStat.pid]) {\n    cpuu = (procStat.utime - _cpu_old.list[procStat.pid].utime) / (all - _cpu_old.all) * 100; // user\n    cpus = (procStat.stime - _cpu_old.list[procStat.pid].stime) / (all - _cpu_old.all) * 100; // system\n  } else {\n    cpuu = (procStat.utime) / (all) * 100; // user\n    cpus = (procStat.stime) / (all) * 100; // system\n  }\n  return {\n    pid: procStat.pid,\n    utime: procStat.utime,\n    stime: procStat.stime,\n    cpuu: cpuu > 0 ? cpuu : 0,\n    cpus: cpus > 0 ? cpus : 0\n  };\n}\n\n\n\n// --------------------------\n// running processes\n\nfunction processes(callback) {\n\n  let parsedhead = [];\n\n  function getName(command) {\n    command = command || '';\n    let result = command.split(' ')[0];\n    if (result.substr(-1) === ':') {\n      result = result.substr(0, result.length - 1);\n    }\n    if (result.substr(0, 1) !== '[') {\n      let parts = result.split('/');\n      if (isNaN(parseInt(parts[parts.length - 1]))) {\n        result = parts[parts.length - 1];\n      } else {\n        result = parts[0];\n      }\n    }\n    return result;\n  }\n\n  function parseLine(line) {\n\n    let offset = 0;\n    let offset2 = 0;\n\n    function checkColumn(i) {\n      offset = offset2;\n      if (parsedhead[i]) {\n        offset2 = line.substring(parsedhead[i].to + offset, 10000).indexOf(' ');\n      } else {\n        offset2 = 10000;\n      }\n    }\n\n    checkColumn(0);\n    const pid = parseInt(line.substring(parsedhead[0].from + offset, parsedhead[0].to + offset2));\n    checkColumn(1);\n    const ppid = parseInt(line.substring(parsedhead[1].from + offset, parsedhead[1].to + offset2));\n    checkColumn(2);\n    const cpu = parseFloat(line.substring(parsedhead[2].from + offset, parsedhead[2].to + offset2).replace(/,/g, '.'));\n    checkColumn(3);\n    const mem = parseFloat(line.substring(parsedhead[3].from + offset, parsedhead[3].to + offset2).replace(/,/g, '.'));\n    checkColumn(4);\n    const priority = parseInt(line.substring(parsedhead[4].from + offset, parsedhead[4].to + offset2));\n    checkColumn(5);\n    const vsz = parseInt(line.substring(parsedhead[5].from + offset, parsedhead[5].to + offset2));\n    checkColumn(6);\n    const rss = parseInt(line.substring(parsedhead[6].from + offset, parsedhead[6].to + offset2));\n    checkColumn(7);\n    const nice = parseInt(line.substring(parsedhead[7].from + offset, parsedhead[7].to + offset2)) || 0;\n    checkColumn(8);\n    const started = !_sunos ? parseElapsedTime(line.substring(parsedhead[8].from + offset, parsedhead[8].to + offset2).trim()) : parseTimeUnix(line.substring(parsedhead[8].from + offset, parsedhead[8].to + offset2).trim());\n    checkColumn(9);\n    let state = line.substring(parsedhead[9].from + offset, parsedhead[9].to + offset2).trim();\n    state = (state[0] === 'R' ? 'running' : (state[0] === 'S' ? 'sleeping' : (state[0] === 'T' ? 'stopped' : (state[0] === 'W' ? 'paging' : (state[0] === 'X' ? 'dead' : (state[0] === 'Z' ? 'zombie' : ((state[0] === 'D' || state[0] === 'U') ? 'blocked' : 'unknown')))))));\n    checkColumn(10);\n    let tty = line.substring(parsedhead[10].from + offset, parsedhead[10].to + offset2).trim();\n    if (tty === '?' || tty === '??') { tty = ''; }\n    checkColumn(11);\n    const user = line.substring(parsedhead[11].from + offset, parsedhead[11].to + offset2).trim();\n    checkColumn(12);\n    let cmdPath = '';\n    let command = '';\n    let params = '';\n    let fullcommand = line.substring(parsedhead[12].from + offset, parsedhead[12].to + offset2).trim();\n    if (fullcommand.substr(fullcommand.length - 1) === ']') { fullcommand = fullcommand.slice(0, -1); }\n    if (fullcommand.substr(0, 1) === '[') { command = fullcommand.substring(1); }\n    else {\n      const p1 = fullcommand.indexOf('(');\n      const p2 = fullcommand.indexOf(')');\n      const p3 = fullcommand.indexOf('/');\n      const p4 = fullcommand.indexOf(':');\n      if (p1 < p2 && p1 < p3 && p3 < p2) {\n        command = fullcommand.split(' ')[0];\n        command = command.replace(/:/g, '');\n      } else {\n        if (p4 > 0 && (p3 === -1 || p3 > 3)) {\n          command = fullcommand.split(' ')[0];\n          command = command.replace(/:/g, '');\n        } else {\n          // try to figure out where parameter starts\n          let firstParamPos = fullcommand.indexOf(' -');\n          let firstParamPathPos = fullcommand.indexOf(' /');\n          firstParamPos = (firstParamPos >= 0 ? firstParamPos : 10000);\n          firstParamPathPos = (firstParamPathPos >= 0 ? firstParamPathPos : 10000);\n          const firstPos = Math.min(firstParamPos, firstParamPathPos);\n          let tmpCommand = fullcommand.substr(0, firstPos);\n          const tmpParams = fullcommand.substr(firstPos);\n          const lastSlashPos = tmpCommand.lastIndexOf('/');\n          if (lastSlashPos >= 0) {\n            cmdPath = tmpCommand.substr(0, lastSlashPos);\n            tmpCommand = tmpCommand.substr(lastSlashPos + 1);\n          }\n\n          if (firstPos === 10000 && tmpCommand.indexOf(' ') > -1) {\n            const parts = tmpCommand.split(' ');\n            if (fs.existsSync(path.join(cmdPath, parts[0]))) {\n              command = parts.shift();\n              params = (parts.join(' ') + ' ' + tmpParams).trim();\n            } else {\n              command = tmpCommand.trim();\n              params = tmpParams.trim();\n            }\n          } else {\n            command = tmpCommand.trim();\n            params = tmpParams.trim();\n          }\n        }\n      }\n\n    }\n\n    return ({\n      pid: pid,\n      parentPid: ppid,\n      name: _linux ? getName(command) : command,\n      cpu: cpu,\n      cpuu: 0,\n      cpus: 0,\n      mem: mem,\n      priority: priority,\n      memVsz: vsz,\n      memRss: rss,\n      nice: nice,\n      started: started,\n      state: state,\n      tty: tty,\n      user: user,\n      command: command,\n      params: params,\n      path: cmdPath\n    });\n  }\n\n  function parseProcesses(lines) {\n    let result = [];\n    if (lines.length > 1) {\n      let head = lines[0];\n      parsedhead = util.parseHead(head, 8);\n      lines.shift();\n      lines.forEach(function (line) {\n        if (line.trim() !== '') {\n          result.push(parseLine(line));\n        }\n      });\n    }\n    return result;\n  }\n  function parseProcesses2(lines) {\n\n    function formatDateTime(time) {\n      const month = ('0' + (time.getMonth() + 1).toString()).slice(-2);\n      const year = time.getFullYear().toString();\n      const day = ('0' + time.getDate().toString()).slice(-2);\n      const hours = ('0' + time.getHours().toString()).slice(-2);\n      const mins = ('0' + time.getMinutes().toString()).slice(-2);\n      const secs = ('0' + time.getSeconds().toString()).slice(-2);\n\n      return (year + '-' + month + '-' + day + ' ' + hours + ':' + mins + ':' + secs);\n    }\n\n    function parseElapsed(etime) {\n      let started = '';\n      if (etime.indexOf('d') >= 0) {\n        const elapsed_parts = etime.split('d');\n        started = formatDateTime(new Date(Date.now() - (elapsed_parts[0] * 24 + elapsed_parts[1] * 1) * 60 * 60 * 1000));\n      } else if (etime.indexOf('h') >= 0) {\n        const elapsed_parts = etime.split('h');\n        started = formatDateTime(new Date(Date.now() - (elapsed_parts[0] * 60 + elapsed_parts[1] * 1) * 60 * 1000));\n      } else if (etime.indexOf(':') >= 0) {\n        const elapsed_parts = etime.split(':');\n        started = formatDateTime(new Date(Date.now() - (elapsed_parts.length > 1 ? (elapsed_parts[0] * 60 + elapsed_parts[1]) * 1000 : elapsed_parts[0] * 1000)));\n      }\n      return started;\n    }\n\n    let result = [];\n    lines.forEach(function (line) {\n      if (line.trim() !== '') {\n        line = line.trim().replace(/ +/g, ' ').replace(/,+/g, '.');\n        const parts = line.split(' ');\n        const command = parts.slice(9).join(' ');\n        const pmem = parseFloat((1.0 * parseInt(parts[3]) * 1024 / os.totalmem()).toFixed(1));\n        const started = parseElapsed(parts[5]);\n\n        result.push({\n          pid: parseInt(parts[0]),\n          parentPid: parseInt(parts[1]),\n          name: getName(command),\n          cpu: 0,\n          cpuu: 0,\n          cpus: 0,\n          mem: pmem,\n          priority: 0,\n          memVsz: parseInt(parts[2]),\n          memRss: parseInt(parts[3]),\n          nice: parseInt(parts[4]),\n          started: started,\n          state: (parts[6] === 'R' ? 'running' : (parts[6] === 'S' ? 'sleeping' : (parts[6] === 'T' ? 'stopped' : (parts[6] === 'W' ? 'paging' : (parts[6] === 'X' ? 'dead' : (parts[6] === 'Z' ? 'zombie' : ((parts[6] === 'D' || parts[6] === 'U') ? 'blocked' : 'unknown'))))))),\n          tty: parts[7],\n          user: parts[8],\n          command: command\n        });\n      }\n    });\n    return result;\n  }\n\n  return new Promise((resolve) => {\n    process.nextTick(() => {\n      let result = {\n        all: 0,\n        running: 0,\n        blocked: 0,\n        sleeping: 0,\n        unknown: 0,\n        list: []\n      };\n\n      let cmd = '';\n\n      if ((_processes_cpu.ms && Date.now() - _processes_cpu.ms >= 500) || _processes_cpu.ms === 0) {\n        if (_linux || _freebsd || _openbsd || _netbsd || _darwin || _sunos) {\n          if (_linux) { cmd = 'export LC_ALL=C; ps -axo pid:11,ppid:11,pcpu:6,pmem:6,pri:5,vsz:11,rss:11,ni:5,etime:30,state:5,tty:15,user:20,command; unset LC_ALL'; }\n          if (_freebsd || _openbsd || _netbsd) { cmd = 'export LC_ALL=C; ps -axo pid,ppid,pcpu,pmem,pri,vsz,rss,ni,etime,state,tty,user,command; unset LC_ALL'; }\n          if (_darwin) { cmd = 'ps -axo pid,ppid,pcpu,pmem,pri,vsz=temp_title_1,rss=temp_title_2,nice,etime=temp_title_3,state,tty,user,command -r'; }\n          if (_sunos) { cmd = 'ps -Ao pid,ppid,pcpu,pmem,pri,vsz,rss,nice,stime,s,tty,user,comm'; }\n          exec(cmd, { maxBuffer: 1024 * 20000 }, function (error, stdout) {\n            if (!error && stdout.toString().trim()) {\n              result.list = (parseProcesses(stdout.toString().split('\\n'))).slice();\n              result.all = result.list.length;\n              result.running = result.list.filter(function (e) {\n                return e.state === 'running';\n              }).length;\n              result.blocked = result.list.filter(function (e) {\n                return e.state === 'blocked';\n              }).length;\n              result.sleeping = result.list.filter(function (e) {\n                return e.state === 'sleeping';\n              }).length;\n\n              if (_linux) {\n                // calc process_cpu - ps is not accurate in linux!\n                cmd = 'cat /proc/stat | grep \"cpu \"';\n                result.list.forEach((element) => {\n                  cmd += (';cat /proc/' + element.pid + '/stat');\n                });\n                exec(cmd, { maxBuffer: 1024 * 20000 }, function (error, stdout) {\n                  let curr_processes = stdout.toString().split('\\n');\n\n                  // first line (all - /proc/stat)\n                  let all = parseProcStat(curr_processes.shift());\n\n                  // process\n                  let list_new = {};\n                  let resultProcess = {};\n                  curr_processes.forEach((element) => {\n                    resultProcess = calcProcStatLinux(element, all, _processes_cpu);\n\n                    if (resultProcess.pid) {\n\n                      // store pcpu in outer array\n                      let listPos = result.list.map(function (e) { return e.pid; }).indexOf(resultProcess.pid);\n                      if (listPos >= 0) {\n                        result.list[listPos].cpu = resultProcess.cpuu + resultProcess.cpus;\n                        result.list[listPos].cpuu = resultProcess.cpuu;\n                        result.list[listPos].cpus = resultProcess.cpus;\n                      }\n\n                      // save new values\n                      list_new[resultProcess.pid] = {\n                        cpuu: resultProcess.cpuu,\n                        cpus: resultProcess.cpus,\n                        utime: resultProcess.utime,\n                        stime: resultProcess.stime,\n                        cutime: resultProcess.cutime,\n                        cstime: resultProcess.cstime\n                      };\n                    }\n                  });\n\n                  // store old values\n                  _processes_cpu.all = all;\n                  _processes_cpu.list = Object.assign({}, list_new);\n                  _processes_cpu.ms = Date.now() - _processes_cpu.ms;\n                  _processes_cpu.result = Object.assign({}, result);\n                  if (callback) { callback(result); }\n                  resolve(result);\n                });\n              } else {\n                if (callback) { callback(result); }\n                resolve(result);\n              }\n            } else {\n              cmd = 'ps -o pid,ppid,vsz,rss,nice,etime,stat,tty,user,comm';\n              if (_sunos) {\n                cmd = 'ps -o pid,ppid,vsz,rss,nice,etime,s,tty,user,comm';\n              }\n              exec(cmd, { maxBuffer: 1024 * 20000 }, function (error, stdout) {\n                if (!error) {\n                  let lines = stdout.toString().split('\\n');\n                  lines.shift();\n\n                  result.list = parseProcesses2(lines).slice();\n                  result.all = result.list.length;\n                  result.running = result.list.filter(function (e) {\n                    return e.state === 'running';\n                  }).length;\n                  result.blocked = result.list.filter(function (e) {\n                    return e.state === 'blocked';\n                  }).length;\n                  result.sleeping = result.list.filter(function (e) {\n                    return e.state === 'sleeping';\n                  }).length;\n                  if (callback) { callback(result); }\n                  resolve(result);\n                } else {\n                  if (callback) { callback(result); }\n                  resolve(result);\n                }\n              });\n            }\n          });\n        } else if (_windows) {\n          try {\n            util.powerShell('Get-CimInstance Win32_Process | select-Object ProcessId,ParentProcessId,ExecutionState,Caption,CommandLine,ExecutablePath,UserModeTime,KernelModeTime,WorkingSetSize,Priority,PageFileUsage, @{n=\"CreationDate\";e={$_.CreationDate.ToString(\"yyyy-MM-dd HH:mm:ss\")}} | fl').then((stdout, error) => {\n              if (!error) {\n                let processSections = stdout.split(/\\n\\s*\\n/);\n                let procs = [];\n                let procStats = [];\n                let list_new = {};\n                let allcpuu = 0;\n                let allcpus = 0;\n                processSections.forEach((element) => {\n                  if (element.trim() !== '') {\n                    let lines = element.trim().split('\\r\\n');\n                    let pid = parseInt(util.getValue(lines, 'ProcessId', ':', true), 10);\n                    let parentPid = parseInt(util.getValue(lines, 'ParentProcessId', ':', true), 10);\n                    let statusValue = util.getValue(lines, 'ExecutionState', ':');\n                    let name = util.getValue(lines, 'Caption', ':', true);\n                    let commandLine = util.getValue(lines, 'CommandLine', ':', true);\n                    // get additional command line data\n                    let additionalCommand = false;\n                    lines.forEach((line) => {\n                      if (additionalCommand && line.toLowerCase().startsWith(' ')) {\n                        commandLine += ' ' + line.trim();\n                      } else {\n                        additionalCommand = false;\n                      }\n                      if (line.toLowerCase().startsWith('commandline')) {\n                        additionalCommand = true;\n                      }\n                    });\n                    let commandPath = util.getValue(lines, 'ExecutablePath', ':', true);\n                    let utime = parseInt(util.getValue(lines, 'UserModeTime', ':', true), 10);\n                    let stime = parseInt(util.getValue(lines, 'KernelModeTime', ':', true), 10);\n                    let memw = parseInt(util.getValue(lines, 'WorkingSetSize', ':', true), 10);\n                    allcpuu = allcpuu + utime;\n                    allcpus = allcpus + stime;\n                    result.all++;\n                    if (!statusValue) { result.unknown++; }\n                    if (statusValue === '3') { result.running++; }\n                    if (statusValue === '4' || statusValue === '5') { result.blocked++; }\n\n                    procStats.push({\n                      pid: pid,\n                      utime: utime,\n                      stime: stime,\n                      cpu: 0,\n                      cpuu: 0,\n                      cpus: 0,\n                    });\n                    procs.push({\n                      pid: pid,\n                      parentPid: parentPid,\n                      name: name,\n                      cpu: 0,\n                      cpuu: 0,\n                      cpus: 0,\n                      mem: memw / os.totalmem() * 100,\n                      priority: parseInt(util.getValue(lines, 'Priority', ':', true), 10),\n                      memVsz: parseInt(util.getValue(lines, 'PageFileUsage', ':', true), 10),\n                      memRss: Math.floor(parseInt(util.getValue(lines, 'WorkingSetSize', ':', true), 10) / 1024),\n                      nice: 0,\n                      started: util.getValue(lines, 'CreationDate', ':', true),\n                      state: (!statusValue ? _winStatusValues[0] : _winStatusValues[statusValue]),\n                      tty: '',\n                      user: '',\n                      command: commandLine || name,\n                      path: commandPath,\n                      params: ''\n                    });\n                  }\n                });\n\n                result.sleeping = result.all - result.running - result.blocked - result.unknown;\n                result.list = procs;\n                procStats.forEach((element) => {\n                  let resultProcess = calcProcStatWin(element, allcpuu + allcpus, _processes_cpu);\n\n                  // store pcpu in outer array\n                  let listPos = result.list.map(function (e) { return e.pid; }).indexOf(resultProcess.pid);\n                  if (listPos >= 0) {\n                    result.list[listPos].cpu = resultProcess.cpuu + resultProcess.cpus;\n                    result.list[listPos].cpuu = resultProcess.cpuu;\n                    result.list[listPos].cpus = resultProcess.cpus;\n                  }\n\n                  // save new values\n                  list_new[resultProcess.pid] = {\n                    cpuu: resultProcess.cpuu,\n                    cpus: resultProcess.cpus,\n                    utime: resultProcess.utime,\n                    stime: resultProcess.stime\n                  };\n                });\n\n                // store old values\n                _processes_cpu.all = allcpuu + allcpus;\n                _processes_cpu.all_utime = allcpuu;\n                _processes_cpu.all_stime = allcpus;\n                _processes_cpu.list = Object.assign({}, list_new);\n                _processes_cpu.ms = Date.now() - _processes_cpu.ms;\n                _processes_cpu.result = Object.assign({}, result);\n              }\n              if (callback) {\n                callback(result);\n              }\n              resolve(result);\n            });\n          } catch (e) {\n            if (callback) { callback(result); }\n            resolve(result);\n          }\n        } else {\n          if (callback) { callback(result); }\n          resolve(result);\n        }\n      } else {\n        if (callback) { callback(_processes_cpu.result); }\n        resolve(_processes_cpu.result);\n      }\n    });\n  });\n}\n\nexports.processes = processes;\n\n// --------------------------\n// PS - process load\n// get detailed information about a certain process\n// (PID, CPU-Usage %, Mem-Usage %)\n\nfunction processLoad(proc, callback) {\n\n  // fallback - if only callback is given\n  if (util.isFunction(proc) && !callback) {\n    callback = proc;\n    proc = '';\n  }\n\n  return new Promise((resolve) => {\n    process.nextTick(() => {\n\n      proc = proc || '';\n\n      if (typeof proc !== 'string') {\n        if (callback) { callback([]); }\n        return resolve([]);\n      }\n\n      let processesString = '';\n      processesString.__proto__.toLowerCase = util.stringToLower;\n      processesString.__proto__.replace = util.stringReplace;\n      processesString.__proto__.trim = util.stringTrim;\n\n      const s = util.sanitizeShellString(proc);\n      const l = util.mathMin(s.length, 2000);\n\n      for (let i = 0; i <= l; i++) {\n        if (s[i] !== undefined) {\n          processesString = processesString + s[i];\n        }\n      }\n\n      processesString = processesString.trim().toLowerCase().replace(/, /g, '|').replace(/,+/g, '|');\n      if (processesString === '') {\n        processesString = '*';\n      }\n      if (util.isPrototypePolluted() && processesString !== '*') {\n        processesString = '------';\n      }\n      let processes = processesString.split('|');\n      let result = [];\n\n      const procSanitized = util.isPrototypePolluted() ? '' : util.sanitizeShellString(proc);\n\n      // from here new\n      // let result = {\n      //   'proc': procSanitized,\n      //   'pid': null,\n      //   'cpu': 0,\n      //   'mem': 0\n      // };\n      if (procSanitized && processes.length && processes[0] !== '------') {\n        if (_windows) {\n          try {\n            util.powerShell('Get-CimInstance Win32_Process | select ProcessId,Caption,UserModeTime,KernelModeTime,WorkingSetSize | fl').then((stdout, error) => {\n              if (!error) {\n                let processSections = stdout.split(/\\n\\s*\\n/);\n                let procStats = [];\n                let list_new = {};\n                let allcpuu = 0;\n                let allcpus = 0;\n\n                // go through all processes\n                processSections.forEach((element) => {\n                  if (element.trim() !== '') {\n                    let lines = element.trim().split('\\r\\n');\n                    let pid = parseInt(util.getValue(lines, 'ProcessId', ':', true), 10);\n                    let name = util.getValue(lines, 'Caption', ':', true);\n                    let utime = parseInt(util.getValue(lines, 'UserModeTime', ':', true), 10);\n                    let stime = parseInt(util.getValue(lines, 'KernelModeTime', ':', true), 10);\n                    let mem = parseInt(util.getValue(lines, 'WorkingSetSize', ':', true), 10);\n                    allcpuu = allcpuu + utime;\n                    allcpus = allcpus + stime;\n\n                    procStats.push({\n                      pid: pid,\n                      name,\n                      utime: utime,\n                      stime: stime,\n                      cpu: 0,\n                      cpuu: 0,\n                      cpus: 0,\n                      mem\n                    });\n                    let pname = '';\n                    let inList = false;\n                    processes.forEach(function (proc) {\n                      if (name.toLowerCase().indexOf(proc.toLowerCase()) >= 0 && !inList) {\n                        inList = true;\n                        pname = proc;\n                      }\n                    });\n\n                    if (processesString === '*' || inList) {\n                      let processFound = false;\n                      result.forEach(function (item) {\n                        if (item.proc.toLowerCase() === pname.toLowerCase()) {\n                          item.pids.push(pid);\n                          item.mem += mem / os.totalmem() * 100;\n                          processFound = true;\n                        }\n                      });\n                      if (!processFound) {\n                        result.push({\n                          proc: pname,\n                          pid: pid,\n                          pids: [pid],\n                          cpu: 0,\n                          mem: mem / os.totalmem() * 100\n                        });\n                      }\n                    }\n                  }\n                });\n\n                // add missing processes\n                if (processesString !== '*') {\n                  let processesMissing = processes.filter(function (name) {\n                    return procStats.filter(function (item) { return item.name.toLowerCase().indexOf(name) >= 0; }).length === 0;\n\n                  });\n                  processesMissing.forEach(function (procName) {\n                    result.push({\n                      proc: procName,\n                      pid: null,\n                      pids: [],\n                      cpu: 0,\n                      mem: 0\n                    });\n                  });\n                }\n\n                // calculate proc stats for each proc\n                procStats.forEach((element) => {\n                  let resultProcess = calcProcStatWin(element, allcpuu + allcpus, _process_cpu);\n\n                  let listPos = -1;\n                  for (let j = 0; j < result.length; j++) {\n                    if (result[j].pid === resultProcess.pid || result[j].pids.indexOf(resultProcess.pid) >= 0) { listPos = j; }\n                  }\n                  if (listPos >= 0) {\n                    result[listPos].cpu += resultProcess.cpuu + resultProcess.cpus;\n                  }\n\n                  // save new values\n                  list_new[resultProcess.pid] = {\n                    cpuu: resultProcess.cpuu,\n                    cpus: resultProcess.cpus,\n                    utime: resultProcess.utime,\n                    stime: resultProcess.stime\n                  };\n                });\n\n                // store old values\n                _process_cpu.all = allcpuu + allcpus;\n                _process_cpu.all_utime = allcpuu;\n                _process_cpu.all_stime = allcpus;\n                _process_cpu.list = Object.assign({}, list_new);\n                _process_cpu.ms = Date.now() - _process_cpu.ms;\n                _process_cpu.result = JSON.parse(JSON.stringify(result));\n                if (callback) {\n                  callback(result);\n                }\n                resolve(result);\n              }\n            });\n          } catch (e) {\n            if (callback) { callback(result); }\n            resolve(result);\n          }\n        }\n\n        if (_darwin || _linux || _freebsd || _openbsd || _netbsd) {\n          const params = ['-axo', 'pid,ppid,pcpu,pmem,comm'];\n          util.execSafe('ps', params).then((stdout) => {\n            if (stdout) {\n              let procStats = [];\n              let lines = stdout.toString().split('\\n').filter(function (line) {\n                if (processesString === '*') { return true; }\n                if (line.toLowerCase().indexOf('grep') !== -1) { return false; } // remove this??\n                let found = false;\n                processes.forEach(function (item) {\n                  found = found || (line.toLowerCase().indexOf(item.toLowerCase()) >= 0);\n                });\n                return found;\n              });\n\n              lines.forEach(function (line) {\n                let data = line.trim().replace(/ +/g, ' ').split(' ');\n                if (data.length > 4) {\n                  procStats.push({\n                    name: data[4].substring(data[4].lastIndexOf('/') + 1),\n                    pid: parseInt(data[0]) || 0,\n                    ppid: parseInt(data[1]) || 0,\n                    cpu: parseFloat(data[2].replace(',', '.')),\n                    mem: parseFloat(data[3].replace(',', '.'))\n                  });\n                }\n              });\n\n              procStats.forEach(function (item) {\n                let listPos = -1;\n                let inList = false;\n                let name = '';\n                for (let j = 0; j < result.length; j++) {\n                  if (item.name.toLowerCase().indexOf(result[j].proc.toLowerCase()) >= 0) {\n                    listPos = j;\n                  }\n                }\n                processes.forEach(function (proc) {\n\n                  if (item.name.toLowerCase().indexOf(proc.toLowerCase()) >= 0 && !inList) {\n                    inList = true;\n                    name = proc;\n                  }\n                });\n                if ((processesString === '*') || inList) {\n                  if (listPos < 0) {\n                    result.push({\n                      proc: name,\n                      pid: item.pid,\n                      pids: [item.pid],\n                      cpu: item.cpu,\n                      mem: item.mem\n                    });\n                  } else {\n                    if (item.ppid < 10) {\n                      result[listPos].pid = item.pid;\n                    }\n                    result[listPos].pids.push(item.pid);\n                    result[listPos].cpu += item.cpu;\n                    result[listPos].mem += item.mem;\n                  }\n                }\n              });\n\n              if (processesString !== '*') {\n                // add missing processes\n                let processesMissing = processes.filter(function (name) {\n                  return procStats.filter(function (item) { return item.name.toLowerCase().indexOf(name) >= 0; }).length === 0;\n                });\n                processesMissing.forEach(function (procName) {\n                  result.push({\n                    proc: procName,\n                    pid: null,\n                    pids: [],\n                    cpu: 0,\n                    mem: 0\n                  });\n                });\n              }\n              if (_linux) {\n                // calc process_cpu - ps is not accurate in linux!\n                result.forEach(function (item) {\n                  item.cpu = 0;\n                });\n                let cmd = 'cat /proc/stat | grep \"cpu \"';\n                for (let i in result) {\n                  for (let j in result[i].pids) {\n                    cmd += (';cat /proc/' + result[i].pids[j] + '/stat');\n                  }\n                }\n                exec(cmd, { maxBuffer: 1024 * 20000 }, function (error, stdout) {\n                  let curr_processes = stdout.toString().split('\\n');\n\n                  // first line (all - /proc/stat)\n                  let all = parseProcStat(curr_processes.shift());\n\n                  // process\n                  let list_new = {};\n                  let resultProcess = {};\n                  curr_processes.forEach((element) => {\n                    resultProcess = calcProcStatLinux(element, all, _process_cpu);\n\n                    if (resultProcess.pid) {\n\n                      // find result item\n                      let resultItemId = -1;\n                      for (let i in result) {\n                        if (result[i].pids.indexOf(resultProcess.pid) >= 0) {\n                          resultItemId = i;\n                        }\n                      }\n                      // store pcpu in outer result\n                      if (resultItemId >= 0) {\n                        result[resultItemId].cpu += resultProcess.cpuu + resultProcess.cpus;\n                      }\n\n                      // save new values\n                      list_new[resultProcess.pid] = {\n                        cpuu: resultProcess.cpuu,\n                        cpus: resultProcess.cpus,\n                        utime: resultProcess.utime,\n                        stime: resultProcess.stime,\n                        cutime: resultProcess.cutime,\n                        cstime: resultProcess.cstime\n                      };\n                    }\n                  });\n\n                  result.forEach(function (item) {\n                    item.cpu = Math.round(item.cpu * 100) / 100;\n                  });\n\n                  _process_cpu.all = all;\n                  _process_cpu.list = Object.assign({}, list_new);\n                  _process_cpu.ms = Date.now() - _process_cpu.ms;\n                  _process_cpu.result = Object.assign({}, result);\n                  if (callback) { callback(result); }\n                  resolve(result);\n                });\n              } else {\n                if (callback) { callback(result); }\n                resolve(result);\n              }\n            } else {\n              if (callback) { callback(result); }\n              resolve(result);\n            }\n          });\n        }\n      }\n    });\n  });\n}\n\nexports.processLoad = processLoad;\n", "'use strict';\n// @ts-check\n// ==================================================================================\n// users.js\n// ----------------------------------------------------------------------------------\n// Description:   System Information - library\n//                for Node.js\n// Copyright:     (c) 2014 - 2024\n// Author:        Sebastian Hildebrandt\n// ----------------------------------------------------------------------------------\n// License:       MIT\n// ==================================================================================\n// 11. Users/Sessions\n// ----------------------------------------------------------------------------------\n\nconst exec = require('child_process').exec;\nconst util = require('./util');\n\nlet _platform = process.platform;\n\nconst _linux = (_platform === 'linux' || _platform === 'android');\nconst _darwin = (_platform === 'darwin');\nconst _windows = (_platform === 'win32');\nconst _freebsd = (_platform === 'freebsd');\nconst _openbsd = (_platform === 'openbsd');\nconst _netbsd = (_platform === 'netbsd');\nconst _sunos = (_platform === 'sunos');\n\nfunction parseUsersLinux(lines, phase) {\n  let result = [];\n  let result_who = [];\n  let result_w = {};\n  let w_first = true;\n  let w_header = [];\n  let w_pos = [];\n  let who_line = {};\n\n  let is_whopart = true;\n  lines.forEach(function (line) {\n    if (line === '---') {\n      is_whopart = false;\n    } else {\n      let l = line.replace(/ +/g, ' ').split(' ');\n\n      // who part\n      if (is_whopart) {\n        result_who.push({\n          user: l[0],\n          tty: l[1],\n          date: l[2],\n          time: l[3],\n          ip: (l && l.length > 4) ? l[4].replace(/\\(/g, '').replace(/\\)/g, '') : ''\n        });\n      } else {\n        // w part\n        if (w_first) {    // header\n          w_header = l;\n          w_header.forEach(function (item) {\n            w_pos.push(line.indexOf(item));\n          });\n          w_first = false;\n        } else {\n          // split by w_pos\n          result_w.user = line.substring(w_pos[0], w_pos[1] - 1).trim();\n          result_w.tty = line.substring(w_pos[1], w_pos[2] - 1).trim();\n          result_w.ip = line.substring(w_pos[2], w_pos[3] - 1).replace(/\\(/g, '').replace(/\\)/g, '').trim();\n          result_w.command = line.substring(w_pos[7], 1000).trim();\n          // find corresponding 'who' line\n          who_line = result_who.filter(function (obj) {\n            return (obj.user.substring(0, 8).trim() === result_w.user && obj.tty === result_w.tty);\n          });\n          if (who_line.length === 1) {\n            result.push({\n              user: who_line[0].user,\n              tty: who_line[0].tty,\n              date: who_line[0].date,\n              time: who_line[0].time,\n              ip: who_line[0].ip,\n              command: result_w.command\n            });\n          }\n        }\n      }\n    }\n  });\n  if (result.length === 0 && phase === 2) {\n    return result_who;\n  } else {\n    return result;\n  }\n}\n\nfunction parseUsersDarwin(lines) {\n  let result = [];\n  let result_who = [];\n  let result_w = {};\n  let who_line = {};\n\n  let is_whopart = true;\n  lines.forEach(function (line) {\n    if (line === '---') {\n      is_whopart = false;\n    } else {\n      let l = line.replace(/ +/g, ' ').split(' ');\n\n      // who part\n      if (is_whopart) {\n        result_who.push({\n          user: l[0],\n          tty: l[1],\n          date: ('' + new Date().getFullYear()) + '-' + ('0' + ('JANFEBMARAPRMAYJUNJULAUGSEPOCTNOVDEC'.indexOf(l[2].toUpperCase()) / 3 + 1)).slice(-2) + '-' + ('0' + l[3]).slice(-2),\n          time: l[4],\n        });\n      } else {\n        // w part\n        // split by w_pos\n        result_w.user = l[0];\n        result_w.tty = l[1];\n        result_w.ip = (l[2] !== '-') ? l[2] : '';\n        result_w.command = l.slice(5, 1000).join(' ');\n        // find corresponding 'who' line\n        who_line = result_who.filter(function (obj) {\n          return (obj.user === result_w.user && (obj.tty.substring(3, 1000) === result_w.tty || obj.tty === result_w.tty));\n        });\n        if (who_line.length === 1) {\n          result.push({\n            user: who_line[0].user,\n            tty: who_line[0].tty,\n            date: who_line[0].date,\n            time: who_line[0].time,\n            ip: result_w.ip,\n            command: result_w.command\n          });\n        }\n      }\n    }\n  });\n  return result;\n}\n\nfunction users(callback) {\n\n  return new Promise((resolve) => {\n    process.nextTick(() => {\n      let result = [];\n\n      // linux\n      if (_linux) {\n        exec('who --ips; echo \"---\"; w | tail -n +2', function (error, stdout) {\n          if (!error) {\n            // lines / split\n            let lines = stdout.toString().split('\\n');\n            result = parseUsersLinux(lines, 1);\n            if (result.length === 0) {\n              exec('who; echo \"---\"; w | tail -n +2', function (error, stdout) {\n                if (!error) {\n                  // lines / split\n                  lines = stdout.toString().split('\\n');\n                  result = parseUsersLinux(lines, 2);\n                }\n                if (callback) { callback(result); }\n                resolve(result);\n              });\n            } else {\n              if (callback) { callback(result); }\n              resolve(result);\n            }\n          } else {\n            if (callback) { callback(result); }\n            resolve(result);\n          }\n        });\n      }\n      if (_freebsd || _openbsd || _netbsd) {\n        exec('who; echo \"---\"; w -ih', function (error, stdout) {\n          if (!error) {\n            // lines / split\n            let lines = stdout.toString().split('\\n');\n            result = parseUsersDarwin(lines);\n          }\n          if (callback) { callback(result); }\n          resolve(result);\n        });\n      }\n      if (_sunos) {\n        exec('who; echo \"---\"; w -h', function (error, stdout) {\n          if (!error) {\n            // lines / split\n            let lines = stdout.toString().split('\\n');\n            result = parseUsersDarwin(lines);\n          }\n          if (callback) { callback(result); }\n          resolve(result);\n        });\n      }\n\n      if (_darwin) {\n        exec('who; echo \"---\"; w -ih', function (error, stdout) {\n          if (!error) {\n            // lines / split\n            let lines = stdout.toString().split('\\n');\n            result = parseUsersDarwin(lines);\n          }\n          if (callback) { callback(result); }\n          resolve(result);\n        });\n      }\n      if (_windows) {\n        try {\n          let cmd = 'Get-CimInstance Win32_LogonSession | select LogonId,@{n=\"StartTime\";e={$_.StartTime.ToString(\"yyyy-MM-dd HH:mm:ss\")}} | fl' + '; echo \\'#-#-#-#\\';';\n          cmd += 'Get-CimInstance Win32_LoggedOnUser | select antecedent,dependent | fl ' + '; echo \\'#-#-#-#\\';';\n          cmd += '$process = (Get-CimInstance Win32_Process -Filter \"name = \\'explorer.exe\\'\"); Invoke-CimMethod -InputObject $process[0] -MethodName GetOwner | select user, domain | fl; get-process -name explorer | select-object sessionid | fl; echo \\'#-#-#-#\\';';\n          cmd += 'query user';\n          util.powerShell(cmd).then((data) => {\n            if (data) {\n              data = data.split('#-#-#-#');\n              let sessions = parseWinSessions((data[0] || '').split(/\\n\\s*\\n/));\n              let loggedons = parseWinLoggedOn((data[1] || '').split(/\\n\\s*\\n/));\n              let queryUser = parseWinUsersQuery((data[3] || '').split('\\r\\n'));\n              let users = parseWinUsers((data[2] || '').split(/\\n\\s*\\n/), queryUser);\n              for (let id in loggedons) {\n                if ({}.hasOwnProperty.call(loggedons, id)) {\n                  loggedons[id].dateTime = {}.hasOwnProperty.call(sessions, id) ? sessions[id] : '';\n                }\n              }\n              users.forEach(user => {\n                let dateTime = '';\n                for (let id in loggedons) {\n                  if ({}.hasOwnProperty.call(loggedons, id)) {\n                    if (loggedons[id].user === user.user && (!dateTime || dateTime < loggedons[id].dateTime)) {\n                      dateTime = loggedons[id].dateTime;\n                    }\n                  }\n                }\n\n                result.push({\n                  user: user.user,\n                  tty: user.tty,\n                  date: `${dateTime.substring(0, 10)}`,\n                  time: `${dateTime.substring(11, 19)}`,\n                  ip: '',\n                  command: ''\n                });\n              });\n            }\n            if (callback) { callback(result); }\n            resolve(result);\n\n          });\n        } catch (e) {\n          if (callback) { callback(result); }\n          resolve(result);\n        }\n      }\n    });\n  });\n}\n\nfunction parseWinSessions(sessionParts) {\n  const sessions = {};\n  sessionParts.forEach(session => {\n    const lines = session.split('\\r\\n');\n    const id = util.getValue(lines, 'LogonId');\n    const starttime = util.getValue(lines, 'starttime');\n    if (id) {\n      sessions[id] = starttime;\n    }\n  });\n  return sessions;\n}\n\nfunction fuzzyMatch(name1, name2) {\n  name1 = name1.toLowerCase();\n  name2 = name2.toLowerCase();\n  let eq = 0;\n  let len = name1.length;\n  if (name2.length > len) { len = name2.length; }\n\n  for (let i = 0; i < len; i++) {\n    const c1 = name1[i] || '';\n    const c2 = name2[i] || '';\n    if (c1 === c2) { eq++; }\n  }\n  return (len > 10 ? eq / len > 0.9 : (len > 0 ? eq / len > 0.8 : false));\n}\n\nfunction parseWinUsers(userParts, userQuery) {\n  const users = [];\n  userParts.forEach(user => {\n    const lines = user.split('\\r\\n');\n\n    const domain = util.getValue(lines, 'domain', ':', true);\n    const username = util.getValue(lines, 'user', ':', true);\n    const sessionid = util.getValue(lines, 'sessionid', ':', true);\n\n    if (username) {\n      const quser = userQuery.filter(item => fuzzyMatch(item.user, username));\n      users.push({\n        domain,\n        user: username,\n        tty: quser && quser[0] && quser[0].tty ? quser[0].tty : sessionid\n      });\n    }\n  });\n  return users;\n}\n\nfunction parseWinLoggedOn(loggedonParts) {\n  const loggedons = {};\n  loggedonParts.forEach(loggedon => {\n    const lines = loggedon.split('\\r\\n');\n\n    const antecendent = util.getValue(lines, 'antecedent', ':', true);\n    let parts = antecendent.split('=');\n    const name = parts.length > 2 ? parts[1].split(',')[0].replace(/\"/g, '').trim() : '';\n    const domain = parts.length > 2 ? parts[2].replace(/\"/g, '').replace(/\\)/g, '').trim() : '';\n    const dependent = util.getValue(lines, 'dependent', ':', true);\n    parts = dependent.split('=');\n    const id = parts.length > 1 ? parts[1].replace(/\"/g, '').replace(/\\)/g, '').trim() : '';\n    if (id) {\n      loggedons[id] = {\n        domain,\n        user: name\n      };\n    }\n  });\n  return loggedons;\n}\n\nfunction parseWinUsersQuery(lines) {\n  lines = lines.filter(item => item);\n  let result = [];\n  const header = lines[0];\n  const headerDelimiter = [];\n  if (header) {\n    const start = (header[0] === ' ') ? 1 : 0;\n    headerDelimiter.push(start - 1);\n    let nextSpace = 0;\n    for (let i = start + 1; i < header.length; i++) {\n      if (header[i] === ' ' && ((header[i - 1] === ' ') || (header[i - 1] === '.'))) {\n        nextSpace = i;\n      } else {\n        if (nextSpace) {\n          headerDelimiter.push(nextSpace);\n          nextSpace = 0;\n        }\n      }\n    }\n    for (let i = 1; i < lines.length; i++) {\n      if (lines[i].trim()) {\n        const user = lines[i].substring(headerDelimiter[0] + 1, headerDelimiter[1]).trim() || '';\n        const tty = lines[i].substring(headerDelimiter[1] + 1, headerDelimiter[2] - 2).trim() || '';\n        result.push({\n          user: user,\n          tty: tty,\n        });\n      }\n    }\n  }\n  return result;\n}\n\nexports.users = users;\n", "'use strict';\n// @ts-check\n// ==================================================================================\n// internet.js\n// ----------------------------------------------------------------------------------\n// Description:   System Information - library\n//                for Node.js\n// Copyright:     (c) 2014 - 2024\n// Author:        Sebastian Hildebrandt\n// ----------------------------------------------------------------------------------\n// License:       MIT\n// ==================================================================================\n// 12. Internet\n// ----------------------------------------------------------------------------------\n\nconst util = require('./util');\n\nlet _platform = process.platform;\n\nconst _linux = (_platform === 'linux' || _platform === 'android');\nconst _darwin = (_platform === 'darwin');\nconst _windows = (_platform === 'win32');\nconst _freebsd = (_platform === 'freebsd');\nconst _openbsd = (_platform === 'openbsd');\nconst _netbsd = (_platform === 'netbsd');\nconst _sunos = (_platform === 'sunos');\n\n// --------------------------\n// check if external site is available\n\nfunction inetChecksite(url, callback) {\n\n  return new Promise((resolve) => {\n    process.nextTick(() => {\n      let result = {\n        url: url,\n        ok: false,\n        status: 404,\n        ms: null\n      };\n      if (typeof url !== 'string') {\n        if (callback) { callback(result); }\n        return resolve(result);\n      }\n      let urlSanitized = '';\n      const s = util.sanitizeShellString(url, true);\n      const l = util.mathMin(s.length, 2000);\n      for (let i = 0; i <= l; i++) {\n        if (s[i] !== undefined) {\n          s[i].__proto__.toLowerCase = util.stringToLower;\n          const sl = s[i].toLowerCase();\n          if (sl && sl[0] && !sl[1] && sl[0].length === 1) {\n            urlSanitized = urlSanitized + sl[0];\n          }\n        }\n      }\n      result.url = urlSanitized;\n      try {\n        if (urlSanitized && !util.isPrototypePolluted()) {\n          urlSanitized.__proto__.startsWith = util.stringStartWith;\n          if (urlSanitized.startsWith('file:') || urlSanitized.startsWith('gopher:') || urlSanitized.startsWith('telnet:') || urlSanitized.startsWith('mailto:') || urlSanitized.startsWith('news:') || urlSanitized.startsWith('nntp:')) {\n            if (callback) { callback(result); }\n            return resolve(result);\n          }\n          let t = Date.now();\n          if (_linux || _freebsd || _openbsd || _netbsd || _darwin || _sunos) {\n            let args = ['-I', '--connect-timeout', '5', '-m', '5'];\n            args.push(urlSanitized);\n            let cmd = 'curl';\n            util.execSafe(cmd, args).then((stdout) => {\n              const lines = stdout.split('\\n');\n              let statusCode = lines[0] && lines[0].indexOf(' ') >= 0 ? parseInt(lines[0].split(' ')[1], 10) : 404;\n              result.status = statusCode || 404;\n              result.ok = (statusCode === 200 || statusCode === 301 || statusCode === 302 || statusCode === 304);\n              result.ms = (result.ok ? Date.now() - t : null);\n              if (callback) { callback(result); }\n              resolve(result);\n            });\n          }\n          if (_windows) {   // if this is stable, this can be used for all OS types\n            const http = (urlSanitized.startsWith('https:') ? require('https') : require('http'));\n            try {\n              http.get(urlSanitized, (res) => {\n                const statusCode = res.statusCode;\n\n                result.status = statusCode || 404;\n                result.ok = (statusCode === 200 || statusCode === 301 || statusCode === 302 || statusCode === 304);\n\n                if (statusCode !== 200) {\n                  res.resume();\n                  result.ms = (result.ok ? Date.now() - t : null);\n                  if (callback) { callback(result); }\n                  resolve(result);\n                } else {\n                  res.on('data', () => { });\n                  res.on('end', () => {\n                    result.ms = (result.ok ? Date.now() - t : null);\n                    if (callback) { callback(result); }\n                    resolve(result);\n                  });\n                }\n              }).on('error', () => {\n                if (callback) { callback(result); }\n                resolve(result);\n              });\n            } catch (err) {\n              if (callback) { callback(result); }\n              resolve(result);\n            }\n          }\n        } else {\n          if (callback) { callback(result); }\n          resolve(result);\n        }\n      } catch (err) {\n        if (callback) { callback(result); }\n        resolve(result);\n      }\n    });\n  });\n}\n\nexports.inetChecksite = inetChecksite;\n\n// --------------------------\n// check inet latency\n\nfunction inetLatency(host, callback) {\n\n  // fallback - if only callback is given\n  if (util.isFunction(host) && !callback) {\n    callback = host;\n    host = '';\n  }\n\n  host = host || '8.8.8.8';\n\n  return new Promise((resolve) => {\n    process.nextTick(() => {\n      if (typeof host !== 'string') {\n        if (callback) { callback(null); }\n        return resolve(null);\n      }\n      let hostSanitized = '';\n      const s = (util.isPrototypePolluted() ? '8.8.8.8' : util.sanitizeShellString(host, true)).trim();\n      const l = util.mathMin(s.length, 2000);\n      for (let i = 0; i <= l; i++) {\n        if (!(s[i] === undefined)) {\n          s[i].__proto__.toLowerCase = util.stringToLower;\n          const sl = s[i].toLowerCase();\n          if (sl && sl[0] && !sl[1]) {\n            hostSanitized = hostSanitized + sl[0];\n          }\n        }\n      }\n      hostSanitized.__proto__.startsWith = util.stringStartWith;\n      if (hostSanitized.startsWith('file:') || hostSanitized.startsWith('gopher:') || hostSanitized.startsWith('telnet:') || hostSanitized.startsWith('mailto:') || hostSanitized.startsWith('news:') || hostSanitized.startsWith('nntp:')) {\n        if (callback) { callback(null); }\n        return resolve(null);\n      }\n      let params;\n      if (_linux || _freebsd || _openbsd || _netbsd || _darwin) {\n        if (_linux) {\n          params = ['-c', '2', '-w', '3', hostSanitized];\n        }\n        if (_freebsd || _openbsd || _netbsd) {\n          params = ['-c', '2', '-t', '3', hostSanitized];\n        }\n        if (_darwin) {\n          params = ['-c2', '-t3', hostSanitized];\n        }\n        util.execSafe('ping', params).then((stdout) => {\n          let result = null;\n          if (stdout) {\n            const lines = stdout.split('\\n').filter((line) => (line.indexOf('rtt') >= 0 || line.indexOf('round-trip') >= 0 || line.indexOf('avg') >= 0)).join('\\n');\n\n            const line = lines.split('=');\n            if (line.length > 1) {\n              const parts = line[1].split('/');\n              if (parts.length > 1) {\n                result = parseFloat(parts[1]);\n              }\n            }\n          }\n          if (callback) { callback(result); }\n          resolve(result);\n        });\n      }\n      if (_sunos) {\n        const params = ['-s', '-a', hostSanitized, '56', '2'];\n        const filt = 'avg';\n        util.execSafe('ping', params, { timeout: 3000 }).then((stdout) => {\n          let result = null;\n          if (stdout) {\n            const lines = stdout.split('\\n').filter(line => line.indexOf(filt) >= 0).join('\\n');\n            const line = lines.split('=');\n            if (line.length > 1) {\n              const parts = line[1].split('/');\n              if (parts.length > 1) {\n                result = parseFloat(parts[1].replace(',', '.'));\n              }\n            }\n          }\n          if (callback) { callback(result); }\n          resolve(result);\n        });\n      }\n      if (_windows) {\n        let result = null;\n        try {\n          const params = [hostSanitized, '-n', '1'];\n          util.execSafe('ping', params, util.execOptsWin).then((stdout) => {\n            if (stdout) {\n              let lines = stdout.split('\\r\\n');\n              lines.shift();\n              lines.forEach(function (line) {\n                if ((line.toLowerCase().match(/ms/g) || []).length === 3) {\n                  let l = line.replace(/ +/g, ' ').split(' ');\n                  if (l.length > 6) {\n                    result = parseFloat(l[l.length - 1]);\n                  }\n                }\n              });\n            }\n            if (callback) { callback(result); }\n            resolve(result);\n          });\n        } catch (e) {\n          if (callback) { callback(result); }\n          resolve(result);\n        }\n      }\n    });\n  });\n}\n\nexports.inetLatency = inetLatency;\n", "'use strict';\n// @ts-check\n// ==================================================================================\n// dockerSockets.js\n// ----------------------------------------------------------------------------------\n// Description:   System Information - library\n//                for Node.js\n// Copyright:     (c) 2014 - 2024\n// Author:        Sebastian Hildebrandt\n// ----------------------------------------------------------------------------------\n// License:       MIT\n// ==================================================================================\n// 13. DockerSockets\n// ----------------------------------------------------------------------------------\n\nconst net = require('net');\nconst isWin = require('os').type() === 'Windows_NT';\nconst socketPath = isWin ? '//./pipe/docker_engine' : '/var/run/docker.sock';\n\nclass DockerSocket {\n\n  getInfo(callback) {\n    try {\n\n      let socket = net.createConnection({ path: socketPath });\n      let alldata = '';\n      let data;\n\n      socket.on('connect', () => {\n        socket.write('GET http:/info HTTP/1.0\\r\\n\\r\\n');\n      });\n\n      socket.on('data', data => {\n        alldata = alldata + data.toString();\n      });\n\n      socket.on('error', () => {\n        socket = false;\n        callback({});\n      });\n\n      socket.on('end', () => {\n        let startbody = alldata.indexOf('\\r\\n\\r\\n');\n        alldata = alldata.substring(startbody + 4);\n        socket = false;\n        try {\n          data = JSON.parse(alldata);\n          callback(data);\n        } catch (err) {\n          callback({});\n        }\n      });\n    } catch (err) {\n      callback({});\n    }\n  }\n\n  listImages(all, callback) {\n    try {\n\n      let socket = net.createConnection({ path: socketPath });\n      let alldata = '';\n      let data;\n\n      socket.on('connect', () => {\n        socket.write('GET http:/images/json' + (all ? '?all=1' : '') + ' HTTP/1.0\\r\\n\\r\\n');\n      });\n\n      socket.on('data', data => {\n        alldata = alldata + data.toString();\n      });\n\n      socket.on('error', () => {\n        socket = false;\n        callback({});\n      });\n\n      socket.on('end', () => {\n        let startbody = alldata.indexOf('\\r\\n\\r\\n');\n        alldata = alldata.substring(startbody + 4);\n        socket = false;\n        try {\n          data = JSON.parse(alldata);\n          callback(data);\n        } catch (err) {\n          callback({});\n        }\n      });\n    } catch (err) {\n      callback({});\n    }\n  }\n\n  inspectImage(id, callback) {\n    id = id || '';\n    if (id) {\n      try {\n        let socket = net.createConnection({ path: socketPath });\n        let alldata = '';\n        let data;\n\n        socket.on('connect', () => {\n          socket.write('GET http:/images/' + id + '/json?stream=0 HTTP/1.0\\r\\n\\r\\n');\n        });\n\n        socket.on('data', data => {\n          alldata = alldata + data.toString();\n        });\n\n        socket.on('error', () => {\n          socket = false;\n          callback({});\n        });\n\n        socket.on('end', () => {\n          let startbody = alldata.indexOf('\\r\\n\\r\\n');\n          alldata = alldata.substring(startbody + 4);\n          socket = false;\n          try {\n            data = JSON.parse(alldata);\n            callback(data);\n          } catch (err) {\n            callback({});\n          }\n        });\n      } catch (err) {\n        callback({});\n      }\n    } else {\n      callback({});\n    }\n  }\n\n  listContainers(all, callback) {\n    try {\n\n      let socket = net.createConnection({ path: socketPath });\n      let alldata = '';\n      let data;\n\n      socket.on('connect', () => {\n        socket.write('GET http:/containers/json' + (all ? '?all=1' : '') + ' HTTP/1.0\\r\\n\\r\\n');\n      });\n\n      socket.on('data', data => {\n        alldata = alldata + data.toString();\n      });\n\n      socket.on('error', () => {\n        socket = false;\n        callback({});\n      });\n\n      socket.on('end', () => {\n        let startbody = alldata.indexOf('\\r\\n\\r\\n');\n        alldata = alldata.substring(startbody + 4);\n        socket = false;\n        try {\n          data = JSON.parse(alldata);\n          callback(data);\n        } catch (err) {\n          callback({});\n        }\n      });\n    } catch (err) {\n      callback({});\n    }\n  }\n\n  getStats(id, callback) {\n    id = id || '';\n    if (id) {\n      try {\n        let socket = net.createConnection({ path: socketPath });\n        let alldata = '';\n        let data;\n\n        socket.on('connect', () => {\n          socket.write('GET http:/containers/' + id + '/stats?stream=0 HTTP/1.0\\r\\n\\r\\n');\n        });\n\n        socket.on('data', data => {\n          alldata = alldata + data.toString();\n        });\n\n        socket.on('error', () => {\n          socket = false;\n          callback({});\n        });\n\n        socket.on('end', () => {\n          let startbody = alldata.indexOf('\\r\\n\\r\\n');\n          alldata = alldata.substring(startbody + 4);\n          socket = false;\n          try {\n            data = JSON.parse(alldata);\n            callback(data);\n          } catch (err) {\n            callback({});\n          }\n        });\n      } catch (err) {\n        callback({});\n      }\n    } else {\n      callback({});\n    }\n  }\n\n  getInspect(id, callback) {\n    id = id || '';\n    if (id) {\n      try {\n        let socket = net.createConnection({ path: socketPath });\n        let alldata = '';\n        let data;\n\n        socket.on('connect', () => {\n          socket.write('GET http:/containers/' + id + '/json?stream=0 HTTP/1.0\\r\\n\\r\\n');\n        });\n\n        socket.on('data', data => {\n          alldata = alldata + data.toString();\n        });\n\n        socket.on('error', () => {\n          socket = false;\n          callback({});\n        });\n\n        socket.on('end', () => {\n          let startbody = alldata.indexOf('\\r\\n\\r\\n');\n          alldata = alldata.substring(startbody + 4);\n          socket = false;\n          try {\n            data = JSON.parse(alldata);\n            callback(data);\n          } catch (err) {\n            callback({});\n          }\n        });\n      } catch (err) {\n        callback({});\n      }\n    } else {\n      callback({});\n    }\n  }\n\n  getProcesses(id, callback) {\n    id = id || '';\n    if (id) {\n      try {\n        let socket = net.createConnection({ path: socketPath });\n        let alldata = '';\n        let data;\n\n        socket.on('connect', () => {\n          socket.write('GET http:/containers/' + id + '/top?ps_args=-opid,ppid,pgid,vsz,time,etime,nice,ruser,user,rgroup,group,stat,rss,args HTTP/1.0\\r\\n\\r\\n');\n        });\n\n        socket.on('data', data => {\n          alldata = alldata + data.toString();\n        });\n\n        socket.on('error', () => {\n          socket = false;\n          callback({});\n        });\n\n        socket.on('end', () => {\n          let startbody = alldata.indexOf('\\r\\n\\r\\n');\n          alldata = alldata.substring(startbody + 4);\n          socket = false;\n          try {\n            data = JSON.parse(alldata);\n            callback(data);\n          } catch (err) {\n            callback({});\n          }\n        });\n      } catch (err) {\n        callback({});\n      }\n    } else {\n      callback({});\n    }\n  }\n\n  listVolumes(callback) {\n    try {\n\n      let socket = net.createConnection({ path: socketPath });\n      let alldata = '';\n      let data;\n\n      socket.on('connect', () => {\n        socket.write('GET http:/volumes HTTP/1.0\\r\\n\\r\\n');\n      });\n\n      socket.on('data', data => {\n        alldata = alldata + data.toString();\n      });\n\n      socket.on('error', () => {\n        socket = false;\n        callback({});\n      });\n\n      socket.on('end', () => {\n        let startbody = alldata.indexOf('\\r\\n\\r\\n');\n        alldata = alldata.substring(startbody + 4);\n        socket = false;\n        try {\n          data = JSON.parse(alldata);\n          callback(data);\n        } catch (err) {\n          callback({});\n        }\n      });\n    } catch (err) {\n      callback({});\n    }\n  }\n}\n\nmodule.exports = DockerSocket;\n", "'use strict';\n// @ts-check\n// ==================================================================================\n// docker.js\n// ----------------------------------------------------------------------------------\n// Description:   System Information - library\n//                for Node.js\n// Copyright:     (c) 2014 - 2024\n// Author:        Sebastian Hildebrandt\n// ----------------------------------------------------------------------------------\n// License:       MIT\n// ==================================================================================\n// 13. Docker\n// ----------------------------------------------------------------------------------\n\nconst util = require('./util');\nconst DockerSocket = require('./dockerSocket');\n\nlet _platform = process.platform;\nconst _windows = (_platform === 'win32');\n\nlet _docker_container_stats = {};\nlet _docker_socket;\nlet _docker_last_read = 0;\n\n\n// --------------------------\n// get containers (parameter all: get also inactive/exited containers)\n\nfunction dockerInfo(callback) {\n  return new Promise((resolve) => {\n    process.nextTick(() => {\n      if (!_docker_socket) {\n        _docker_socket = new DockerSocket();\n      }\n      const result = {};\n\n      _docker_socket.getInfo((data) => {\n        result.id = data.ID;\n        result.containers = data.Containers;\n        result.containersRunning = data.ContainersRunning;\n        result.containersPaused = data.ContainersPaused;\n        result.containersStopped = data.ContainersStopped;\n        result.images = data.Images;\n        result.driver = data.Driver;\n        result.memoryLimit = data.MemoryLimit;\n        result.swapLimit = data.SwapLimit;\n        result.kernelMemory = data.KernelMemory;\n        result.cpuCfsPeriod = data.CpuCfsPeriod;\n        result.cpuCfsQuota = data.CpuCfsQuota;\n        result.cpuShares = data.CPUShares;\n        result.cpuSet = data.CPUSet;\n        result.ipv4Forwarding = data.IPv4Forwarding;\n        result.bridgeNfIptables = data.BridgeNfIptables;\n        result.bridgeNfIp6tables = data.BridgeNfIp6tables;\n        result.debug = data.Debug;\n        result.nfd = data.NFd;\n        result.oomKillDisable = data.OomKillDisable;\n        result.ngoroutines = data.NGoroutines;\n        result.systemTime = data.SystemTime;\n        result.loggingDriver = data.LoggingDriver;\n        result.cgroupDriver = data.CgroupDriver;\n        result.nEventsListener = data.NEventsListener;\n        result.kernelVersion = data.KernelVersion;\n        result.operatingSystem = data.OperatingSystem;\n        result.osType = data.OSType;\n        result.architecture = data.Architecture;\n        result.ncpu = data.NCPU;\n        result.memTotal = data.MemTotal;\n        result.dockerRootDir = data.DockerRootDir;\n        result.httpProxy = data.HttpProxy;\n        result.httpsProxy = data.HttpsProxy;\n        result.noProxy = data.NoProxy;\n        result.name = data.Name;\n        result.labels = data.Labels;\n        result.experimentalBuild = data.ExperimentalBuild;\n        result.serverVersion = data.ServerVersion;\n        result.clusterStore = data.ClusterStore;\n        result.clusterAdvertise = data.ClusterAdvertise;\n        result.defaultRuntime = data.DefaultRuntime;\n        result.liveRestoreEnabled = data.LiveRestoreEnabled;\n        result.isolation = data.Isolation;\n        result.initBinary = data.InitBinary;\n        result.productLicense = data.ProductLicense;\n        if (callback) { callback(result); }\n        resolve(result);\n      });\n    });\n  });\n}\n\nexports.dockerInfo = dockerInfo;\n\nfunction dockerImages(all, callback) {\n\n  // fallback - if only callback is given\n  if (util.isFunction(all) && !callback) {\n    callback = all;\n    all = false;\n  }\n  if (typeof all === 'string' && all === 'true') {\n    all = true;\n  }\n  if (typeof all !== 'boolean' && all !== undefined) {\n    all = false;\n  }\n\n  all = all || false;\n  let result = [];\n  return new Promise((resolve) => {\n    process.nextTick(() => {\n      if (!_docker_socket) {\n        _docker_socket = new DockerSocket();\n      }\n      const workload = [];\n\n      _docker_socket.listImages(all, data => {\n        let dockerImages = {};\n        try {\n          dockerImages = data;\n          if (dockerImages && Object.prototype.toString.call(dockerImages) === '[object Array]' && dockerImages.length > 0) {\n\n            dockerImages.forEach(function (element) {\n\n              if (element.Names && Object.prototype.toString.call(element.Names) === '[object Array]' && element.Names.length > 0) {\n                element.Name = element.Names[0].replace(/^\\/|\\/$/g, '');\n              }\n              workload.push(dockerImagesInspect(element.Id.trim(), element));\n            });\n            if (workload.length) {\n              Promise.all(\n                workload\n              ).then((data) => {\n                if (callback) { callback(data); }\n                resolve(data);\n              });\n            } else {\n              if (callback) { callback(result); }\n              resolve(result);\n            }\n          } else {\n            if (callback) { callback(result); }\n            resolve(result);\n          }\n        } catch (err) {\n          if (callback) { callback(result); }\n          resolve(result);\n        }\n      });\n    });\n  });\n}\n\n// --------------------------\n// container inspect (for one container)\n\nfunction dockerImagesInspect(imageID, payload) {\n  return new Promise((resolve) => {\n    process.nextTick(() => {\n      imageID = imageID || '';\n      if (typeof imageID !== 'string') {\n        return resolve();\n      }\n      const imageIDSanitized = (util.isPrototypePolluted() ? '' : util.sanitizeShellString(imageID, true)).trim();\n      if (imageIDSanitized) {\n\n        if (!_docker_socket) {\n          _docker_socket = new DockerSocket();\n        }\n\n        _docker_socket.inspectImage(imageIDSanitized.trim(), data => {\n          try {\n            resolve({\n              id: payload.Id,\n              container: data.Container,\n              comment: data.Comment,\n              os: data.Os,\n              architecture: data.Architecture,\n              parent: data.Parent,\n              dockerVersion: data.DockerVersion,\n              size: data.Size,\n              sharedSize: payload.SharedSize,\n              virtualSize: data.VirtualSize,\n              author: data.Author,\n              created: data.Created ? Math.round(new Date(data.Created).getTime() / 1000) : 0,\n              containerConfig: data.ContainerConfig ? data.ContainerConfig : {},\n              graphDriver: data.GraphDriver ? data.GraphDriver : {},\n              repoDigests: data.RepoDigests ? data.RepoDigests : {},\n              repoTags: data.RepoTags ? data.RepoTags : {},\n              config: data.Config ? data.Config : {},\n              rootFS: data.RootFS ? data.RootFS : {},\n            });\n          } catch (err) {\n            resolve();\n          }\n        });\n      } else {\n        resolve();\n      }\n    });\n  });\n}\n\nexports.dockerImages = dockerImages;\n\nfunction dockerContainers(all, callback) {\n\n  function inContainers(containers, id) {\n    let filtered = containers.filter(obj => {\n      /**\n       * @namespace\n       * @property {string}  Id\n       */\n      return (obj.Id && (obj.Id === id));\n    });\n    return (filtered.length > 0);\n  }\n\n  // fallback - if only callback is given\n  if (util.isFunction(all) && !callback) {\n    callback = all;\n    all = false;\n  }\n  if (typeof all === 'string' && all === 'true') {\n    all = true;\n  }\n  if (typeof all !== 'boolean' && all !== undefined) {\n    all = false;\n  }\n\n  all = all || false;\n  let result = [];\n  return new Promise((resolve) => {\n    process.nextTick(() => {\n      if (!_docker_socket) {\n        _docker_socket = new DockerSocket();\n      }\n      const workload = [];\n\n      _docker_socket.listContainers(all, data => {\n        let docker_containers = {};\n        try {\n          docker_containers = data;\n          if (docker_containers && Object.prototype.toString.call(docker_containers) === '[object Array]' && docker_containers.length > 0) {\n            // GC in _docker_container_stats\n            for (let key in _docker_container_stats) {\n              if ({}.hasOwnProperty.call(_docker_container_stats, key)) {\n                if (!inContainers(docker_containers, key)) { delete _docker_container_stats[key]; }\n              }\n            }\n\n            docker_containers.forEach(function (element) {\n\n              if (element.Names && Object.prototype.toString.call(element.Names) === '[object Array]' && element.Names.length > 0) {\n                element.Name = element.Names[0].replace(/^\\/|\\/$/g, '');\n              }\n              workload.push(dockerContainerInspect(element.Id.trim(), element));\n            });\n            if (workload.length) {\n              Promise.all(\n                workload\n              ).then((data) => {\n                if (callback) { callback(data); }\n                resolve(data);\n              });\n            } else {\n              if (callback) { callback(result); }\n              resolve(result);\n            }\n          } else {\n            if (callback) { callback(result); }\n            resolve(result);\n          }\n        } catch (err) {\n          // GC in _docker_container_stats\n          for (let key in _docker_container_stats) {\n            if ({}.hasOwnProperty.call(_docker_container_stats, key)) {\n              if (!inContainers(docker_containers, key)) { delete _docker_container_stats[key]; }\n            }\n          }\n          if (callback) { callback(result); }\n          resolve(result);\n        }\n      });\n    });\n  });\n}\n\n// --------------------------\n// container inspect (for one container)\n\nfunction dockerContainerInspect(containerID, payload) {\n  return new Promise((resolve) => {\n    process.nextTick(() => {\n      containerID = containerID || '';\n      if (typeof containerID !== 'string') {\n        return resolve();\n      }\n      const containerIdSanitized = (util.isPrototypePolluted() ? '' : util.sanitizeShellString(containerID, true)).trim();\n      if (containerIdSanitized) {\n\n        if (!_docker_socket) {\n          _docker_socket = new DockerSocket();\n        }\n\n        _docker_socket.getInspect(containerIdSanitized.trim(), data => {\n          try {\n            resolve({\n              id: payload.Id,\n              name: payload.Name,\n              image: payload.Image,\n              imageID: payload.ImageID,\n              command: payload.Command,\n              created: payload.Created,\n              started: data.State && data.State.StartedAt ? Math.round(new Date(data.State.StartedAt).getTime() / 1000) : 0,\n              finished: data.State && data.State.FinishedAt && !data.State.FinishedAt.startsWith('0001-01-01') ? Math.round(new Date(data.State.FinishedAt).getTime() / 1000) : 0,\n              createdAt: data.Created ? data.Created : '',\n              startedAt: data.State && data.State.StartedAt ? data.State.StartedAt : '',\n              finishedAt: data.State && data.State.FinishedAt && !data.State.FinishedAt.startsWith('0001-01-01') ? data.State.FinishedAt : '',\n              state: payload.State,\n              restartCount: data.RestartCount || 0,\n              platform: data.Platform || '',\n              driver: data.Driver || '',\n              ports: payload.Ports,\n              mounts: payload.Mounts,\n              // hostconfig: payload.HostConfig,\n              // network: payload.NetworkSettings\n            });\n          } catch (err) {\n            resolve();\n          }\n        });\n      } else {\n        resolve();\n      }\n    });\n  });\n}\n\nexports.dockerContainers = dockerContainers;\n\n// --------------------------\n// helper functions for calculation of docker stats\n\nfunction docker_calcCPUPercent(cpu_stats, precpu_stats) {\n  /**\n   * @namespace\n   * @property {object}  cpu_usage\n   * @property {number}  cpu_usage.total_usage\n   * @property {number}  system_cpu_usage\n   * @property {object}  cpu_usage\n   * @property {Array}  cpu_usage.percpu_usage\n   */\n\n  if (!_windows) {\n    let cpuPercent = 0.0;\n    // calculate the change for the cpu usage of the container in between readings\n    let cpuDelta = cpu_stats.cpu_usage.total_usage - precpu_stats.cpu_usage.total_usage;\n    // calculate the change for the entire system between readings\n    let systemDelta = cpu_stats.system_cpu_usage - precpu_stats.system_cpu_usage;\n\n    if (systemDelta > 0.0 && cpuDelta > 0.0) {\n      // calculate the change for the cpu usage of the container in between readings\n      if (precpu_stats.online_cpus) {\n        cpuPercent = (cpuDelta / systemDelta) * precpu_stats.online_cpus * 100.0;\n      }\n      else {\n        cpuPercent = (cpuDelta / systemDelta) * cpu_stats.cpu_usage.percpu_usage.length * 100.0;\n      }\n    }\n\n    return cpuPercent;\n  } else {\n    let nanoSecNow = util.nanoSeconds();\n    let cpuPercent = 0.0;\n    if (_docker_last_read > 0) {\n      let possIntervals = (nanoSecNow - _docker_last_read); //  / 100 * os.cpus().length;\n      let intervalsUsed = cpu_stats.cpu_usage.total_usage - precpu_stats.cpu_usage.total_usage;\n      if (possIntervals > 0) {\n        cpuPercent = 100.0 * intervalsUsed / possIntervals;\n      }\n    }\n    _docker_last_read = nanoSecNow;\n    return cpuPercent;\n  }\n}\n\nfunction docker_calcNetworkIO(networks) {\n  let rx;\n  let wx;\n  for (let key in networks) {\n    // skip loop if the property is from prototype\n    if (!{}.hasOwnProperty.call(networks, key)) { continue; }\n\n    /**\n     * @namespace\n     * @property {number}  rx_bytes\n     * @property {number}  tx_bytes\n     */\n    let obj = networks[key];\n    rx = +obj.rx_bytes;\n    wx = +obj.tx_bytes;\n  }\n  return {\n    rx,\n    wx\n  };\n}\n\nfunction docker_calcBlockIO(blkio_stats) {\n  let result = {\n    r: 0,\n    w: 0\n  };\n\n  /**\n   * @namespace\n   * @property {Array}  io_service_bytes_recursive\n   */\n  if (blkio_stats && blkio_stats.io_service_bytes_recursive && Object.prototype.toString.call(blkio_stats.io_service_bytes_recursive) === '[object Array]' && blkio_stats.io_service_bytes_recursive.length > 0) {\n    blkio_stats.io_service_bytes_recursive.forEach(function (element) {\n      /**\n       * @namespace\n       * @property {string}  op\n       * @property {number}  value\n       */\n\n      if (element.op && element.op.toLowerCase() === 'read' && element.value) {\n        result.r += element.value;\n      }\n      if (element.op && element.op.toLowerCase() === 'write' && element.value) {\n        result.w += element.value;\n      }\n    });\n  }\n  return result;\n}\n\nfunction dockerContainerStats(containerIDs, callback) {\n\n  let containerArray = [];\n  return new Promise((resolve) => {\n    process.nextTick(() => {\n\n      // fallback - if only callback is given\n      if (util.isFunction(containerIDs) && !callback) {\n        callback = containerIDs;\n        containerArray = ['*'];\n      } else {\n        containerIDs = containerIDs || '*';\n        if (typeof containerIDs !== 'string') {\n          if (callback) { callback([]); }\n          return resolve([]);\n        }\n        let containerIDsSanitized = '';\n        containerIDsSanitized.__proto__.toLowerCase = util.stringToLower;\n        containerIDsSanitized.__proto__.replace = util.stringReplace;\n        containerIDsSanitized.__proto__.trim = util.stringTrim;\n\n        containerIDsSanitized = containerIDs;\n        containerIDsSanitized = containerIDsSanitized.trim();\n        if (containerIDsSanitized !== '*') {\n          containerIDsSanitized = '';\n          const s = (util.isPrototypePolluted() ? '' : util.sanitizeShellString(containerIDs, true)).trim();\n          const l = util.mathMin(s.length, 2000);\n          for (let i = 0; i <= l; i++) {\n            if (s[i] !== undefined) {\n              s[i].__proto__.toLowerCase = util.stringToLower;\n              const sl = s[i].toLowerCase();\n              if (sl && sl[0] && !sl[1]) {\n                containerIDsSanitized = containerIDsSanitized + sl[0];\n              }\n            }\n          }\n        }\n\n        containerIDsSanitized = containerIDsSanitized.trim().toLowerCase().replace(/,+/g, '|');\n        containerArray = containerIDsSanitized.split('|');\n      }\n\n      const result = [];\n\n      const workload = [];\n      if (containerArray.length && containerArray[0].trim() === '*') {\n        containerArray = [];\n        dockerContainers().then(allContainers => {\n          for (let container of allContainers) {\n            containerArray.push(container.id.substring(0, 12));\n          }\n          if (containerArray.length) {\n            dockerContainerStats(containerArray.join(',')).then(result => {\n              if (callback) { callback(result); }\n              resolve(result);\n            });\n          } else {\n            if (callback) { callback(result); }\n            resolve(result);\n          }\n        });\n      } else {\n        for (let containerID of containerArray) {\n          workload.push(dockerContainerStatsSingle(containerID.trim()));\n        }\n        if (workload.length) {\n          Promise.all(\n            workload\n          ).then((data) => {\n            if (callback) { callback(data); }\n            resolve(data);\n          });\n        } else {\n          if (callback) { callback(result); }\n          resolve(result);\n        }\n      }\n    });\n  });\n}\n\n// --------------------------\n// container stats (for one container)\n\nfunction dockerContainerStatsSingle(containerID) {\n  containerID = containerID || '';\n  let result = {\n    id: containerID,\n    memUsage: 0,\n    memLimit: 0,\n    memPercent: 0,\n    cpuPercent: 0,\n    pids: 0,\n    netIO: {\n      rx: 0,\n      wx: 0\n    },\n    blockIO: {\n      r: 0,\n      w: 0\n    },\n    restartCount: 0,\n    cpuStats: {},\n    precpuStats: {},\n    memoryStats: {},\n    networks: {},\n  };\n  return new Promise((resolve) => {\n    process.nextTick(() => {\n      if (containerID) {\n\n        if (!_docker_socket) {\n          _docker_socket = new DockerSocket();\n        }\n\n        _docker_socket.getInspect(containerID, dataInspect => {\n          try {\n            _docker_socket.getStats(containerID, data => {\n              try {\n                let stats = data;\n                if (!stats.message) {\n                  if (data.id) { result.id = data.id; }\n                  result.memUsage = (stats.memory_stats && stats.memory_stats.usage ? stats.memory_stats.usage : 0);\n                  result.memLimit = (stats.memory_stats && stats.memory_stats.limit ? stats.memory_stats.limit : 0);\n                  result.memPercent = (stats.memory_stats && stats.memory_stats.usage && stats.memory_stats.limit ? stats.memory_stats.usage / stats.memory_stats.limit * 100.0 : 0);\n                  result.cpuPercent = (stats.cpu_stats && stats.precpu_stats ? docker_calcCPUPercent(stats.cpu_stats, stats.precpu_stats) : 0);\n                  result.pids = (stats.pids_stats && stats.pids_stats.current ? stats.pids_stats.current : 0);\n                  result.restartCount = (dataInspect.RestartCount ? dataInspect.RestartCount : 0);\n                  if (stats.networks) { result.netIO = docker_calcNetworkIO(stats.networks); }\n                  if (stats.blkio_stats) { result.blockIO = docker_calcBlockIO(stats.blkio_stats); }\n                  result.cpuStats = (stats.cpu_stats ? stats.cpu_stats : {});\n                  result.precpuStats = (stats.precpu_stats ? stats.precpu_stats : {});\n                  result.memoryStats = (stats.memory_stats ? stats.memory_stats : {});\n                  result.networks = (stats.networks ? stats.networks : {});\n                }\n              } catch (err) {\n                util.noop();\n              }\n              // }\n              resolve(result);\n            });\n          } catch (err) {\n            util.noop();\n          }\n        });\n      } else {\n        resolve(result);\n      }\n    });\n  });\n}\n\nexports.dockerContainerStats = dockerContainerStats;\n\n// --------------------------\n// container processes (for one container)\n\nfunction dockerContainerProcesses(containerID, callback) {\n  let result = [];\n  return new Promise((resolve) => {\n    process.nextTick(() => {\n      containerID = containerID || '';\n      if (typeof containerID !== 'string') {\n        return resolve(result);\n      }\n      const containerIdSanitized = (util.isPrototypePolluted() ? '' : util.sanitizeShellString(containerID, true)).trim();\n\n      if (containerIdSanitized) {\n\n        if (!_docker_socket) {\n          _docker_socket = new DockerSocket();\n        }\n\n        _docker_socket.getProcesses(containerIdSanitized, data => {\n          /**\n           * @namespace\n           * @property {Array}  Titles\n           * @property {Array}  Processes\n           **/\n          try {\n            if (data && data.Titles && data.Processes) {\n              let titles = data.Titles.map(function (value) {\n                return value.toUpperCase();\n              });\n              let pos_pid = titles.indexOf('PID');\n              let pos_ppid = titles.indexOf('PPID');\n              let pos_pgid = titles.indexOf('PGID');\n              let pos_vsz = titles.indexOf('VSZ');\n              let pos_time = titles.indexOf('TIME');\n              let pos_elapsed = titles.indexOf('ELAPSED');\n              let pos_ni = titles.indexOf('NI');\n              let pos_ruser = titles.indexOf('RUSER');\n              let pos_user = titles.indexOf('USER');\n              let pos_rgroup = titles.indexOf('RGROUP');\n              let pos_group = titles.indexOf('GROUP');\n              let pos_stat = titles.indexOf('STAT');\n              let pos_rss = titles.indexOf('RSS');\n              let pos_command = titles.indexOf('COMMAND');\n\n              data.Processes.forEach(process => {\n                result.push({\n                  pidHost: (pos_pid >= 0 ? process[pos_pid] : ''),\n                  ppid: (pos_ppid >= 0 ? process[pos_ppid] : ''),\n                  pgid: (pos_pgid >= 0 ? process[pos_pgid] : ''),\n                  user: (pos_user >= 0 ? process[pos_user] : ''),\n                  ruser: (pos_ruser >= 0 ? process[pos_ruser] : ''),\n                  group: (pos_group >= 0 ? process[pos_group] : ''),\n                  rgroup: (pos_rgroup >= 0 ? process[pos_rgroup] : ''),\n                  stat: (pos_stat >= 0 ? process[pos_stat] : ''),\n                  time: (pos_time >= 0 ? process[pos_time] : ''),\n                  elapsed: (pos_elapsed >= 0 ? process[pos_elapsed] : ''),\n                  nice: (pos_ni >= 0 ? process[pos_ni] : ''),\n                  rss: (pos_rss >= 0 ? process[pos_rss] : ''),\n                  vsz: (pos_vsz >= 0 ? process[pos_vsz] : ''),\n                  command: (pos_command >= 0 ? process[pos_command] : '')\n                });\n              });\n            }\n          } catch (err) {\n            util.noop();\n          }\n          if (callback) { callback(result); }\n          resolve(result);\n        });\n      } else {\n        if (callback) { callback(result); }\n        resolve(result);\n      }\n    });\n  });\n}\n\nexports.dockerContainerProcesses = dockerContainerProcesses;\n\nfunction dockerVolumes(callback) {\n\n  let result = [];\n  return new Promise((resolve) => {\n    process.nextTick(() => {\n      if (!_docker_socket) {\n        _docker_socket = new DockerSocket();\n      }\n      _docker_socket.listVolumes((data) => {\n        let dockerVolumes = {};\n        try {\n          dockerVolumes = data;\n          if (dockerVolumes && dockerVolumes.Volumes && Object.prototype.toString.call(dockerVolumes.Volumes) === '[object Array]' && dockerVolumes.Volumes.length > 0) {\n\n            dockerVolumes.Volumes.forEach(function (element) {\n\n              result.push({\n                name: element.Name,\n                driver: element.Driver,\n                labels: element.Labels,\n                mountpoint: element.Mountpoint,\n                options: element.Options,\n                scope: element.Scope,\n                created: element.CreatedAt ? Math.round(new Date(element.CreatedAt).getTime() / 1000) : 0,\n              });\n            });\n            if (callback) { callback(result); }\n            resolve(result);\n          } else {\n            if (callback) { callback(result); }\n            resolve(result);\n          }\n        } catch (err) {\n          if (callback) { callback(result); }\n          resolve(result);\n        }\n      });\n    });\n  });\n}\n\nexports.dockerVolumes = dockerVolumes;\n\nfunction dockerAll(callback) {\n  return new Promise((resolve) => {\n    process.nextTick(() => {\n      dockerContainers(true).then(result => {\n        if (result && Object.prototype.toString.call(result) === '[object Array]' && result.length > 0) {\n          let l = result.length;\n          result.forEach(function (element) {\n            dockerContainerStats(element.id).then((res) => {\n              // include stats in array\n              element.memUsage = res[0].memUsage;\n              element.memLimit = res[0].memLimit;\n              element.memPercent = res[0].memPercent;\n              element.cpuPercent = res[0].cpuPercent;\n              element.pids = res[0].pids;\n              element.netIO = res[0].netIO;\n              element.blockIO = res[0].blockIO;\n              element.cpuStats = res[0].cpuStats;\n              element.precpuStats = res[0].precpuStats;\n              element.memoryStats = res[0].memoryStats;\n              element.networks = res[0].networks;\n\n              dockerContainerProcesses(element.id).then(processes => {\n                element.processes = processes;\n\n                l -= 1;\n                if (l === 0) {\n                  if (callback) { callback(result); }\n                  resolve(result);\n                }\n              });\n              // all done??\n            });\n          });\n        } else {\n          if (callback) { callback(result); }\n          resolve(result);\n        }\n      });\n    });\n  });\n}\n\nexports.dockerAll = dockerAll;\n", "'use strict';\n// @ts-check\n// ==================================================================================\n// virtualbox.js\n// ----------------------------------------------------------------------------------\n// Description:   System Information - library\n//                for Node.js\n// Copyright:     (c) 2014 - 2024\n// Author:        Sebastian Hildebrandt\n// ----------------------------------------------------------------------------------\n// License:       MIT\n// ==================================================================================\n// 14. Docker\n// ----------------------------------------------------------------------------------\n\nconst os = require('os');\nconst exec = require('child_process').exec;\nconst util = require('./util');\n\nfunction vboxInfo(callback) {\n\n  // fallback - if only callback is given\n  let result = [];\n  return new Promise((resolve) => {\n    process.nextTick(() => {\n      try {\n        exec(util.getVboxmanage() + ' list vms --long', function (error, stdout) {\n          let parts = (os.EOL + stdout.toString()).split(os.EOL + 'Name:');\n          parts.shift();\n          parts.forEach(part => {\n            const lines = ('Name:' + part).split(os.EOL);\n            const state = util.getValue(lines, 'State');\n            const running = state.startsWith('running');\n            const runningSinceString = running ? state.replace('running (since ', '').replace(')', '').trim() : '';\n            let runningSince = 0;\n            try {\n              if (running) {\n                const sinceDateObj = new Date(runningSinceString);\n                const offset = sinceDateObj.getTimezoneOffset();\n                runningSince = Math.round((Date.now() - Date.parse(sinceDateObj)) / 1000) + offset * 60;\n              }\n            } catch (e) {\n              util.noop();\n            }\n            const stoppedSinceString = !running ? state.replace('powered off (since', '').replace(')', '').trim() : '';\n            let stoppedSince = 0;\n            try {\n              if (!running) {\n                const sinceDateObj = new Date(stoppedSinceString);\n                const offset = sinceDateObj.getTimezoneOffset();\n                stoppedSince = Math.round((Date.now() - Date.parse(sinceDateObj)) / 1000) + offset * 60;\n              }\n            } catch (e) {\n              util.noop();\n            }\n            result.push({\n              id: util.getValue(lines, 'UUID'),\n              name: util.getValue(lines, 'Name'),\n              running,\n              started: runningSinceString,\n              runningSince,\n              stopped: stoppedSinceString,\n              stoppedSince,\n              guestOS: util.getValue(lines, 'Guest OS'),\n              hardwareUUID: util.getValue(lines, 'Hardware UUID'),\n              memory: parseInt(util.getValue(lines, 'Memory size', '     '), 10),\n              vram: parseInt(util.getValue(lines, 'VRAM size'), 10),\n              cpus: parseInt(util.getValue(lines, 'Number of CPUs'), 10),\n              cpuExepCap: util.getValue(lines, 'CPU exec cap'),\n              cpuProfile: util.getValue(lines, 'CPUProfile'),\n              chipset: util.getValue(lines, 'Chipset'),\n              firmware: util.getValue(lines, 'Firmware'),\n              pageFusion: util.getValue(lines, 'Page Fusion') === 'enabled',\n              configFile: util.getValue(lines, 'Config file'),\n              snapshotFolder: util.getValue(lines, 'Snapshot folder'),\n              logFolder: util.getValue(lines, 'Log folder'),\n              hpet: util.getValue(lines, 'HPET') === 'enabled',\n              pae: util.getValue(lines, 'PAE') === 'enabled',\n              longMode: util.getValue(lines, 'Long Mode') === 'enabled',\n              tripleFaultReset: util.getValue(lines, 'Triple Fault Reset') === 'enabled',\n              apic: util.getValue(lines, 'APIC') === 'enabled',\n              x2Apic: util.getValue(lines, 'X2APIC') === 'enabled',\n              acpi: util.getValue(lines, 'ACPI') === 'enabled',\n              ioApic: util.getValue(lines, 'IOAPIC') === 'enabled',\n              biosApicMode: util.getValue(lines, 'BIOS APIC mode'),\n              bootMenuMode: util.getValue(lines, 'Boot menu mode'),\n              bootDevice1: util.getValue(lines, 'Boot Device 1'),\n              bootDevice2: util.getValue(lines, 'Boot Device 2'),\n              bootDevice3: util.getValue(lines, 'Boot Device 3'),\n              bootDevice4: util.getValue(lines, 'Boot Device 4'),\n              timeOffset: util.getValue(lines, 'Time offset'),\n              rtc: util.getValue(lines, 'RTC'),\n            });\n          });\n\n          if (callback) { callback(result); }\n          resolve(result);\n        });\n      } catch (e) {\n        if (callback) { callback(result); }\n        resolve(result);\n      }\n    });\n  });\n}\n\nexports.vboxInfo = vboxInfo;\n", "'use strict';\n// @ts-check\n// ==================================================================================\n// printers.js\n// ----------------------------------------------------------------------------------\n// Description:   System Information - library\n//                for Node.js\n// Copyright:     (c) 2014 - 2024\n// Author:        Sebastian Hildebrandt\n// ----------------------------------------------------------------------------------\n// License:       MIT\n// ==================================================================================\n// 15. printers\n// ----------------------------------------------------------------------------------\n\nconst exec = require('child_process').exec;\nconst util = require('./util');\n\nlet _platform = process.platform;\n\nconst _linux = (_platform === 'linux' || _platform === 'android');\nconst _darwin = (_platform === 'darwin');\nconst _windows = (_platform === 'win32');\nconst _freebsd = (_platform === 'freebsd');\nconst _openbsd = (_platform === 'openbsd');\nconst _netbsd = (_platform === 'netbsd');\nconst _sunos = (_platform === 'sunos');\n\nconst winPrinterStatus = {\n  1: 'Other',\n  2: 'Unknown',\n  3: 'Idle',\n  4: 'Printing',\n  5: 'Warmup',\n  6: 'Stopped Printing',\n  7: 'Offline',\n};\n\nfunction parseLinuxCupsHeader(lines) {\n  const result = {};\n  if (lines && lines.length) {\n    if (lines[0].indexOf(' CUPS v') > 0) {\n      const parts = lines[0].split(' CUPS v');\n      result.cupsVersion = parts[1];\n    }\n  }\n  return result;\n}\n\nfunction parseLinuxCupsPrinter(lines) {\n  const result = {};\n  const printerId = util.getValue(lines, 'PrinterId', ' ');\n  result.id = printerId ? parseInt(printerId, 10) : null;\n  result.name = util.getValue(lines, 'Info', ' ');\n  result.model = lines.length > 0 && lines[0] ? lines[0].split(' ')[0] : '';\n  result.uri = util.getValue(lines, 'DeviceURI', ' ');\n  result.uuid = util.getValue(lines, 'UUID', ' ');\n  result.status = util.getValue(lines, 'State', ' ');\n  result.local = util.getValue(lines, 'Location', ' ').toLowerCase().startsWith('local');\n  result.default = null;\n  result.shared = util.getValue(lines, 'Shared', ' ').toLowerCase().startsWith('yes');\n\n  return result;\n}\n\nfunction parseLinuxLpstatPrinter(lines, id) {\n  const result = {};\n  result.id = id;\n  result.name = util.getValue(lines, 'Description', ':', true);\n  result.model = lines.length > 0 && lines[0] ? lines[0].split(' ')[0] : '';\n  result.uri = null;\n  result.uuid = null;\n  result.status = lines.length > 0 && lines[0] ? (lines[0].indexOf(' idle') > 0 ? 'idle' : (lines[0].indexOf(' printing') > 0 ? 'printing' : 'unknown')) : null;\n  result.local = util.getValue(lines, 'Location', ':', true).toLowerCase().startsWith('local');\n  result.default = null;\n  result.shared = util.getValue(lines, 'Shared', ' ').toLowerCase().startsWith('yes');\n\n  return result;\n}\n\nfunction parseDarwinPrinters(printerObject, id) {\n  const result = {};\n  const uriParts = printerObject.uri.split('/');\n  result.id = id;\n  result.name = printerObject._name;\n  result.model = uriParts.length ? uriParts[uriParts.length - 1] : '';\n  result.uri = printerObject.uri;\n  result.uuid = null;\n  result.status = printerObject.status;\n  result.local = printerObject.printserver === 'local';\n  result.default = printerObject.default === 'yes';\n  result.shared = printerObject.shared === 'yes';\n\n  return result;\n}\n\nfunction parseWindowsPrinters(lines, id) {\n  const result = {};\n  const status = parseInt(util.getValue(lines, 'PrinterStatus', ':'), 10);\n\n  result.id = id;\n  result.name = util.getValue(lines, 'name', ':');\n  result.model = util.getValue(lines, 'DriverName', ':');\n  result.uri = null;\n  result.uuid = null;\n  result.status = winPrinterStatus[status] ? winPrinterStatus[status] : null;\n  result.local = util.getValue(lines, 'Local', ':').toUpperCase() === 'TRUE';\n  result.default = util.getValue(lines, 'Default', ':').toUpperCase() === 'TRUE';\n  result.shared = util.getValue(lines, 'Shared', ':').toUpperCase() === 'TRUE';\n\n  return result;\n}\n\nfunction printer(callback) {\n\n  return new Promise((resolve) => {\n    process.nextTick(() => {\n      let result = [];\n      if (_linux || _freebsd || _openbsd || _netbsd) {\n        let cmd = 'cat /etc/cups/printers.conf 2>/dev/null';\n        exec(cmd, function (error, stdout) {\n          // printers.conf\n          if (!error) {\n            const parts = stdout.toString().split('<Printer ');\n            const printerHeader = parseLinuxCupsHeader(parts[0]);\n            for (let i = 1; i < parts.length; i++) {\n              const printers = parseLinuxCupsPrinter(parts[i].split('\\n'));\n              if (printers.name) {\n                printers.engine = 'CUPS';\n                printers.engineVersion = printerHeader.cupsVersion;\n                result.push(printers);\n              }\n            }\n          }\n          if (result.length === 0) {\n            if (_linux) {\n              cmd = 'export LC_ALL=C; lpstat -lp 2>/dev/null; unset LC_ALL';\n              // lpstat\n              exec(cmd, function (error, stdout) {\n                const parts = ('\\n' + stdout.toString()).split('\\nprinter ');\n                for (let i = 1; i < parts.length; i++) {\n                  const printers = parseLinuxLpstatPrinter(parts[i].split('\\n'), i);\n                  result.push(printers);\n                }\n              });\n              if (callback) {\n                callback(result);\n              }\n              resolve(result);\n            } else {\n              if (callback) {\n                callback(result);\n              }\n              resolve(result);\n            }\n          } else {\n            if (callback) {\n              callback(result);\n            }\n            resolve(result);\n          }\n        });\n      }\n      if (_darwin) {\n        let cmd = 'system_profiler SPPrintersDataType -json';\n        exec(cmd, function (error, stdout) {\n          if (!error) {\n            try {\n              const outObj = JSON.parse(stdout.toString());\n              if (outObj.SPPrintersDataType && outObj.SPPrintersDataType.length) {\n                for (let i = 0; i < outObj.SPPrintersDataType.length; i++) {\n                  const printer = parseDarwinPrinters(outObj.SPPrintersDataType[i], i);\n                  result.push(printer);\n                }\n              }\n            } catch (e) {\n              util.noop();\n            }\n          }\n          if (callback) {\n            callback(result);\n          }\n          resolve(result);\n        });\n      }\n      if (_windows) {\n        util.powerShell('Get-CimInstance Win32_Printer | select PrinterStatus,Name,DriverName,Local,Default,Shared | fl').then((stdout, error) => {\n          if (!error) {\n            const parts = stdout.toString().split(/\\n\\s*\\n/);\n            for (let i = 0; i < parts.length; i++) {\n              const printer = parseWindowsPrinters(parts[i].split('\\n'), i);\n              if (printer.name || printer.model) {\n                result.push(printer);\n              }\n            }\n          }\n          if (callback) {\n            callback(result);\n          }\n          resolve(result);\n        });\n      }\n      if (_sunos) {\n        resolve(null);\n      }\n    });\n  });\n}\n\nexports.printer = printer;\n", "'use strict';\n// @ts-check\n// ==================================================================================\n// usb.js\n// ----------------------------------------------------------------------------------\n// Description:   System Information - library\n//                for Node.js\n// Copyright:     (c) 2014 - 2024\n// Author:        Sebastian Hildebrandt\n// ----------------------------------------------------------------------------------\n// License:       MIT\n// ==================================================================================\n// 16. usb\n// ----------------------------------------------------------------------------------\n\nconst exec = require('child_process').exec;\nconst util = require('./util');\n\nlet _platform = process.platform;\n\nconst _linux = (_platform === 'linux' || _platform === 'android');\nconst _darwin = (_platform === 'darwin');\nconst _windows = (_platform === 'win32');\nconst _freebsd = (_platform === 'freebsd');\nconst _openbsd = (_platform === 'openbsd');\nconst _netbsd = (_platform === 'netbsd');\nconst _sunos = (_platform === 'sunos');\n\nfunction getLinuxUsbType(type, name) {\n  let result = type;\n  const str = (name + ' ' + type).toLowerCase();\n  if (str.indexOf('camera') >= 0) { result = 'Camera'; }\n  else if (str.indexOf('hub') >= 0) { result = 'Hub'; }\n  else if (str.indexOf('keybrd') >= 0) { result = 'Keyboard'; }\n  else if (str.indexOf('keyboard') >= 0) { result = 'Keyboard'; }\n  else if (str.indexOf('mouse') >= 0) { result = 'Mouse'; }\n  else if (str.indexOf('stora') >= 0) { result = 'Storage'; }\n  else if (str.indexOf('mic') >= 0) { result = 'Microphone'; }\n  else if (str.indexOf('headset') >= 0) { result = 'Audio'; }\n  else if (str.indexOf('audio') >= 0) { result = 'Audio'; }\n\n  return result;\n}\n\nfunction parseLinuxUsb(usb) {\n  const result = {};\n  const lines = usb.split('\\n');\n  if (lines && lines.length && lines[0].indexOf('Device') >= 0) {\n    const parts = lines[0].split(' ');\n    result.bus = parseInt(parts[0], 10);\n    if (parts[2]) {\n      result.deviceId = parseInt(parts[2], 10);\n    } else {\n      result.deviceId = null;\n    }\n  } else {\n    result.bus = null;\n    result.deviceId = null;\n  }\n  const idVendor = util.getValue(lines, 'idVendor', ' ', true).trim();\n  let vendorParts = idVendor.split(' ');\n  vendorParts.shift();\n  const vendor = vendorParts.join(' ');\n\n  const idProduct = util.getValue(lines, 'idProduct', ' ', true).trim();\n  let productParts = idProduct.split(' ');\n  productParts.shift();\n  const product = productParts.join(' ');\n\n  const interfaceClass = util.getValue(lines, 'bInterfaceClass', ' ', true).trim();\n  let interfaceClassParts = interfaceClass.split(' ');\n  interfaceClassParts.shift();\n  const usbType = interfaceClassParts.join(' ');\n\n  const iManufacturer = util.getValue(lines, 'iManufacturer', ' ', true).trim();\n  let iManufacturerParts = iManufacturer.split(' ');\n  iManufacturerParts.shift();\n  const manufacturer = iManufacturerParts.join(' ');\n\n  result.id = (idVendor.startsWith('0x') ? idVendor.split(' ')[0].substr(2, 10) : '') + ':' + (idProduct.startsWith('0x') ? idProduct.split(' ')[0].substr(2, 10) : '');\n  result.name = product;\n  result.type = getLinuxUsbType(usbType, product);\n  result.removable = null;\n  result.vendor = vendor;\n  result.manufacturer = manufacturer;\n  result.maxPower = util.getValue(lines, 'MaxPower', ' ', true);\n  result.serialNumber = null;\n\n  return result;\n}\n\nfunction getDarwinUsbType(name) {\n  let result = '';\n  if (name.indexOf('camera') >= 0) { result = 'Camera'; }\n  else if (name.indexOf('touch bar') >= 0) { result = 'Touch Bar'; }\n  else if (name.indexOf('controller') >= 0) { result = 'Controller'; }\n  else if (name.indexOf('headset') >= 0) { result = 'Audio'; }\n  else if (name.indexOf('keyboard') >= 0) { result = 'Keyboard'; }\n  else if (name.indexOf('trackpad') >= 0) { result = 'Trackpad'; }\n  else if (name.indexOf('sensor') >= 0) { result = 'Sensor'; }\n  else if (name.indexOf('bthusb') >= 0) { result = 'Bluetooth'; }\n  else if (name.indexOf('bth') >= 0) { result = 'Bluetooth'; }\n  else if (name.indexOf('rfcomm') >= 0) { result = 'Bluetooth'; }\n  else if (name.indexOf('usbhub') >= 0) { result = 'Hub'; }\n  else if (name.indexOf(' hub') >= 0) { result = 'Hub'; }\n  else if (name.indexOf('mouse') >= 0) { result = 'Mouse'; }\n  else if (name.indexOf('mic') >= 0) { result = 'Microphone'; }\n  else if (name.indexOf('removable') >= 0) { result = 'Storage'; }\n  return result;\n}\n\n\nfunction parseDarwinUsb(usb, id) {\n  const result = {};\n  result.id = id;\n\n  usb = usb.replace(/ \\|/g, '');\n  usb = usb.trim();\n  let lines = usb.split('\\n');\n  lines.shift();\n  try {\n    for (let i = 0; i < lines.length; i++) {\n      lines[i] = lines[i].trim();\n      lines[i] = lines[i].replace(/=/g, ':');\n      if (lines[i] !== '{' && lines[i] !== '}' && lines[i + 1] && lines[i + 1].trim() !== '}') {\n        lines[i] = lines[i] + ',';\n      }\n\n      lines[i] = lines[i].replace(':Yes,', ':\"Yes\",');\n      lines[i] = lines[i].replace(': Yes,', ': \"Yes\",');\n      lines[i] = lines[i].replace(': Yes', ': \"Yes\"');\n      lines[i] = lines[i].replace(':No,', ':\"No\",');\n      lines[i] = lines[i].replace(': No,', ': \"No\",');\n      lines[i] = lines[i].replace(': No', ': \"No\"');\n\n      // In this case ((\"com.apple.developer.driverkit.transport.usb\"))\n      lines[i] = lines[i].replace('((', '').replace('))', '');\n\n      // In case we have <923c11> we need make it \"<923c11>\" for correct JSON parse\n      const match = /<(\\w+)>/.exec(lines[i]);\n      if (match) {\n        const number = match[0];\n        lines[i] = lines[i].replace(number, `\"${number}\"`);\n      }\n    }\n    const usbObj = JSON.parse(lines.join('\\n'));\n    const removableDrive = (usbObj['Built-In'] ? usbObj['Built-In'].toLowerCase() !== 'yes' : true) && (usbObj['non-removable'] ? usbObj['non-removable'].toLowerCase() === 'no' : true);\n\n    result.bus = null;\n    result.deviceId = null;\n    result.id = usbObj['USB Address'] || null;\n    result.name = usbObj['kUSBProductString'] || usbObj['USB Product Name'] || null;\n    result.type = getDarwinUsbType((usbObj['kUSBProductString'] || usbObj['USB Product Name'] || '').toLowerCase() + (removableDrive ? ' removable' : ''));\n    result.removable = usbObj['non-removable'] ? usbObj['non-removable'].toLowerCase() || '' === 'no' : true;\n    result.vendor = usbObj['kUSBVendorString'] || usbObj['USB Vendor Name'] || null;\n    result.manufacturer = usbObj['kUSBVendorString'] || usbObj['USB Vendor Name'] || null;\n\n    result.maxPower = null;\n    result.serialNumber = usbObj['kUSBSerialNumberString'] || null;\n\n    if (result.name) {\n      return result;\n    } else {\n      return null;\n    }\n  } catch (e) {\n    return null;\n  }\n}\n\nfunction getWindowsUsbTypeCreation(creationclass, name) {\n  let result = '';\n  if (name.indexOf('storage') >= 0) { result = 'Storage'; }\n  else if (name.indexOf('speicher') >= 0) { result = 'Storage'; }\n  else if (creationclass.indexOf('usbhub') >= 0) { result = 'Hub'; }\n  else if (creationclass.indexOf('storage') >= 0) { result = 'Storage'; }\n  else if (creationclass.indexOf('usbcontroller') >= 0) { result = 'Controller'; }\n  else if (creationclass.indexOf('keyboard') >= 0) { result = 'Keyboard'; }\n  else if (creationclass.indexOf('pointing') >= 0) { result = 'Mouse'; }\n  else if (creationclass.indexOf('disk') >= 0) { result = 'Storage'; }\n  return result;\n}\n\nfunction parseWindowsUsb(lines, id) {\n  const usbType = getWindowsUsbTypeCreation(util.getValue(lines, 'CreationClassName', ':').toLowerCase(), util.getValue(lines, 'name', ':').toLowerCase());\n\n  if (usbType) {\n    const result = {};\n    result.bus = null;\n    result.deviceId = util.getValue(lines, 'deviceid', ':');\n    result.id = id;\n    result.name = util.getValue(lines, 'name', ':');\n    result.type = usbType;\n    result.removable = null;\n    result.vendor = null;\n    result.manufacturer = util.getValue(lines, 'Manufacturer', ':');\n    result.maxPower = null;\n    result.serialNumber = null;\n\n    return result;\n  } else {\n    return null;\n  }\n}\n\nfunction usb(callback) {\n\n  return new Promise((resolve) => {\n    process.nextTick(() => {\n      let result = [];\n      if (_linux) {\n        const cmd = 'export LC_ALL=C; lsusb -v 2>/dev/null; unset LC_ALL';\n        exec(cmd, { maxBuffer: 1024 * 1024 * 128 }, function (error, stdout) {\n          if (!error) {\n            const parts = ('\\n\\n' + stdout.toString()).split('\\n\\nBus ');\n            for (let i = 1; i < parts.length; i++) {\n              const usb = parseLinuxUsb(parts[i]);\n              result.push(usb);\n            }\n          }\n          if (callback) {\n            callback(result);\n          }\n          resolve(result);\n        });\n      }\n      if (_darwin) {\n        let cmd = 'ioreg -p IOUSB -c AppleUSBRootHubDevice -w0 -l';\n        exec(cmd, { maxBuffer: 1024 * 1024 * 128 }, function (error, stdout) {\n          if (!error) {\n            const parts = (stdout.toString()).split(' +-o ');\n            for (let i = 1; i < parts.length; i++) {\n              const usb = parseDarwinUsb(parts[i]);\n              if (usb) {\n                result.push(usb);\n              }\n            }\n            if (callback) {\n              callback(result);\n            }\n            resolve(result);\n          }\n          if (callback) {\n            callback(result);\n          }\n          resolve(result);\n        });\n      }\n      if (_windows) {\n        util.powerShell('Get-CimInstance CIM_LogicalDevice | where { $_.Description -match \"USB\"} | select Name,CreationClassName,DeviceId,Manufacturer | fl').then((stdout, error) => {\n          if (!error) {\n            const parts = stdout.toString().split(/\\n\\s*\\n/);\n            for (let i = 0; i < parts.length; i++) {\n              const usb = parseWindowsUsb(parts[i].split('\\n'), i);\n              if (usb) {\n                result.push(usb);\n              }\n            }\n          }\n          if (callback) {\n            callback(result);\n          }\n          resolve(result);\n        });\n      }\n      if (_sunos || _freebsd || _openbsd || _netbsd) {\n        resolve(null);\n      }\n    });\n  });\n}\n\nexports.usb = usb;\n\n", "'use strict';\n// @ts-check\n// ==================================================================================\n// audio.js\n// ----------------------------------------------------------------------------------\n// Description:   System Information - library\n//                for Node.js\n// Copyright:     (c) 2014 - 2024\n// Author:        Sebastian Hildebrandt\n// ----------------------------------------------------------------------------------\n// License:       MIT\n// ==================================================================================\n// 16. audio\n// ----------------------------------------------------------------------------------\n\nconst exec = require('child_process').exec;\nconst execSync = require('child_process').execSync;\nconst util = require('./util');\n\nlet _platform = process.platform;\n\nconst _linux = (_platform === 'linux' || _platform === 'android');\nconst _darwin = (_platform === 'darwin');\nconst _windows = (_platform === 'win32');\nconst _freebsd = (_platform === 'freebsd');\nconst _openbsd = (_platform === 'openbsd');\nconst _netbsd = (_platform === 'netbsd');\nconst _sunos = (_platform === 'sunos');\n\nfunction parseAudioType(str, input, output) {\n  str = str.toLowerCase();\n  let result = '';\n\n  if (str.indexOf('input') >= 0) { result = 'Microphone'; }\n  if (str.indexOf('display audio') >= 0) { result = 'Speaker'; }\n  if (str.indexOf('speak') >= 0) { result = 'Speaker'; }\n  if (str.indexOf('laut') >= 0) { result = 'Speaker'; }\n  if (str.indexOf('loud') >= 0) { result = 'Speaker'; }\n  if (str.indexOf('head') >= 0) { result = 'Headset'; }\n  if (str.indexOf('mic') >= 0) { result = 'Microphone'; }\n  if (str.indexOf('mikr') >= 0) { result = 'Microphone'; }\n  if (str.indexOf('phone') >= 0) { result = 'Phone'; }\n  if (str.indexOf('controll') >= 0) { result = 'Controller'; }\n  if (str.indexOf('line o') >= 0) { result = 'Line Out'; }\n  if (str.indexOf('digital o') >= 0) { result = 'Digital Out'; }\n  if (str.indexOf('smart sound technology') >= 0) { result = 'Digital Signal Processor'; }\n  if (str.indexOf('high definition audio') >= 0) { result = 'Sound Driver'; }\n\n  if (!result && output) {\n    result = 'Speaker';\n  } else if (!result && input) {\n    result = 'Microphone';\n  }\n  return result;\n}\n\n\nfunction getLinuxAudioPci() {\n  let cmd = 'lspci -v 2>/dev/null';\n  let result = [];\n  try {\n    const parts = execSync(cmd).toString().split('\\n\\n');\n    parts.forEach(element => {\n      const lines = element.split('\\n');\n      if (lines && lines.length && lines[0].toLowerCase().indexOf('audio') >= 0) {\n        const audio = {};\n        audio.slotId = lines[0].split(' ')[0];\n        audio.driver = util.getValue(lines, 'Kernel driver in use', ':', true) || util.getValue(lines, 'Kernel modules', ':', true);\n        result.push(audio);\n      }\n    });\n    return result;\n  } catch (e) {\n    return result;\n  }\n}\n\nfunction parseLinuxAudioPciMM(lines, audioPCI) {\n  const result = {};\n  const slotId = util.getValue(lines, 'Slot');\n\n  const pciMatch = audioPCI.filter(function (item) { return item.slotId === slotId; });\n\n  result.id = slotId;\n  result.name = util.getValue(lines, 'SDevice');\n  result.manufacturer = util.getValue(lines, 'SVendor');\n  result.revision = util.getValue(lines, 'Rev');\n  result.driver = pciMatch && pciMatch.length === 1 && pciMatch[0].driver ? pciMatch[0].driver : '';\n  result.default = null;\n  result.channel = 'PCIe';\n  result.type = parseAudioType(result.name, null, null);\n  result.in = null;\n  result.out = null;\n  result.status = 'online';\n\n  return result;\n}\n\nfunction parseDarwinChannel(str) {\n  let result = '';\n\n  if (str.indexOf('builtin') >= 0) { result = 'Built-In'; }\n  if (str.indexOf('extern') >= 0) { result = 'Audio-Jack'; }\n  if (str.indexOf('hdmi') >= 0) { result = 'HDMI'; }\n  if (str.indexOf('displayport') >= 0) { result = 'Display-Port'; }\n  if (str.indexOf('usb') >= 0) { result = 'USB'; }\n  if (str.indexOf('pci') >= 0) { result = 'PCIe'; }\n\n  return result;\n}\n\nfunction parseDarwinAudio(audioObject, id) {\n  const result = {};\n  const channelStr = ((audioObject.coreaudio_device_transport || '') + ' ' + (audioObject._name || '')).toLowerCase();\n\n  result.id = id;\n  result.name = audioObject._name;\n  result.manufacturer = audioObject.coreaudio_device_manufacturer;\n  result.revision = null;\n  result.driver = null;\n  result.default = !!(audioObject.coreaudio_default_audio_input_device || '') || !!(audioObject.coreaudio_default_audio_output_device || '');\n  result.channel = parseDarwinChannel(channelStr);\n  result.type = parseAudioType(result.name, !!(audioObject.coreaudio_device_input || ''), !!(audioObject.coreaudio_device_output || ''));\n  result.in = !!(audioObject.coreaudio_device_input || '');\n  result.out = !!(audioObject.coreaudio_device_output || '');\n  result.status = 'online';\n\n  return result;\n}\n\nfunction parseWindowsAudio(lines) {\n  const result = {};\n  const status = util.getValue(lines, 'StatusInfo', ':');\n\n  result.id = util.getValue(lines, 'DeviceID', ':'); // PNPDeviceID??\n  result.name = util.getValue(lines, 'name', ':');\n  result.manufacturer = util.getValue(lines, 'manufacturer', ':');\n  result.revision = null;\n  result.driver = null;\n  result.default = null;\n  result.channel = null;\n  result.type = parseAudioType(result.name, null, null);\n  result.in = null;\n  result.out = null;\n  result.status = status;\n\n  return result;\n}\n\nfunction audio(callback) {\n\n  return new Promise((resolve) => {\n    process.nextTick(() => {\n      let result = [];\n      if (_linux || _freebsd || _openbsd || _netbsd) {\n        let cmd = 'lspci -vmm 2>/dev/null';\n        exec(cmd, function (error, stdout) {\n          // PCI\n          if (!error) {\n            const audioPCI = getLinuxAudioPci();\n            const parts = stdout.toString().split('\\n\\n');\n            parts.forEach(element => {\n              const lines = element.split('\\n');\n              if (util.getValue(lines, 'class', ':', true).toLowerCase().indexOf('audio') >= 0) {\n                const audio = parseLinuxAudioPciMM(lines, audioPCI);\n                result.push(audio);\n              }\n            });\n          }\n          if (callback) {\n            callback(result);\n          }\n          resolve(result);\n        });\n      }\n      if (_darwin) {\n        let cmd = 'system_profiler SPAudioDataType -json';\n        exec(cmd, function (error, stdout) {\n          if (!error) {\n            try {\n              const outObj = JSON.parse(stdout.toString());\n              if (outObj.SPAudioDataType && outObj.SPAudioDataType.length && outObj.SPAudioDataType[0] && outObj.SPAudioDataType[0]['_items'] && outObj.SPAudioDataType[0]['_items'].length) {\n                for (let i = 0; i < outObj.SPAudioDataType[0]['_items'].length; i++) {\n                  const audio = parseDarwinAudio(outObj.SPAudioDataType[0]['_items'][i], i);\n                  result.push(audio);\n                }\n              }\n            } catch (e) {\n              util.noop();\n            }\n          }\n          if (callback) {\n            callback(result);\n          }\n          resolve(result);\n        });\n      }\n      if (_windows) {\n        util.powerShell('Get-CimInstance Win32_SoundDevice | select DeviceID,StatusInfo,Name,Manufacturer | fl').then((stdout, error) => {\n          if (!error) {\n            const parts = stdout.toString().split(/\\n\\s*\\n/);\n            parts.forEach(element => {\n              const lines = element.split('\\n');\n              if (util.getValue(lines, 'name', ':')) {\n                result.push(parseWindowsAudio(lines));\n              }\n            });\n          }\n          if (callback) {\n            callback(result);\n          }\n          resolve(result);\n        });\n      }\n      if (_sunos) {\n        resolve(null);\n      }\n    });\n  });\n}\n\nexports.audio = audio;\n", "'use strict';\n// @ts-check\n// ==================================================================================\n// audio.js\n// ----------------------------------------------------------------------------------\n// Description:   System Information - library\n//                for Node.js\n// Copyright:     (c) 2014 - 2024\n// Author:        Sebastian Hildebrandt\n// ----------------------------------------------------------------------------------\n// License:       MIT\n// ==================================================================================\n// 17. bluetooth\n// ----------------------------------------------------------------------------------\n\nconst exec = require('child_process').exec;\nconst execSync = require('child_process').execSync;\nconst path = require('path');\nconst util = require('./util');\nconst fs = require('fs');\n\nlet _platform = process.platform;\n\nconst _linux = (_platform === 'linux' || _platform === 'android');\nconst _darwin = (_platform === 'darwin');\nconst _windows = (_platform === 'win32');\nconst _freebsd = (_platform === 'freebsd');\nconst _openbsd = (_platform === 'openbsd');\nconst _netbsd = (_platform === 'netbsd');\nconst _sunos = (_platform === 'sunos');\n\nfunction parseBluetoothType(str) {\n  let result = '';\n\n  if (str.indexOf('keyboard') >= 0) { result = 'Keyboard'; }\n  if (str.indexOf('mouse') >= 0) { result = 'Mouse'; }\n  if (str.indexOf('trackpad') >= 0) { result = 'Trackpad'; }\n  if (str.indexOf('speaker') >= 0) { result = 'Speaker'; }\n  if (str.indexOf('headset') >= 0) { result = 'Headset'; }\n  if (str.indexOf('phone') >= 0) { result = 'Phone'; }\n  if (str.indexOf('macbook') >= 0) { result = 'Computer'; }\n  if (str.indexOf('imac') >= 0) { result = 'Computer'; }\n  if (str.indexOf('ipad') >= 0) { result = 'Tablet'; }\n  if (str.indexOf('watch') >= 0) { result = 'Watch'; }\n  if (str.indexOf('headphone') >= 0) { result = 'Headset'; }\n  // to be continued ...\n\n  return result;\n}\n\nfunction parseBluetoothManufacturer(str) {\n  let result = str.split(' ')[0];\n  str = str.toLowerCase();\n  if (str.indexOf('apple') >= 0) { result = 'Apple'; }\n  if (str.indexOf('ipad') >= 0) { result = 'Apple'; }\n  if (str.indexOf('imac') >= 0) { result = 'Apple'; }\n  if (str.indexOf('iphone') >= 0) { result = 'Apple'; }\n  if (str.indexOf('magic mouse') >= 0) { result = 'Apple'; }\n  if (str.indexOf('magic track') >= 0) { result = 'Apple'; }\n  if (str.indexOf('macbook') >= 0) { result = 'Apple'; }\n  // to be continued ...\n\n  return result;\n}\n\nfunction parseLinuxBluetoothInfo(lines, macAddr1, macAddr2) {\n  const result = {};\n\n  result.device = null;\n  result.name = util.getValue(lines, 'name', '=');\n  result.manufacturer = null;\n  result.macDevice = macAddr1;\n  result.macHost = macAddr2;\n  result.batteryPercent = null;\n  result.type = parseBluetoothType(result.name.toLowerCase());\n  result.connected = false;\n\n  return result;\n}\n\nfunction parseDarwinBluetoothDevices(bluetoothObject, macAddr2) {\n  const result = {};\n  const typeStr = ((bluetoothObject.device_minorClassOfDevice_string || bluetoothObject.device_majorClassOfDevice_string || bluetoothObject.device_minorType || '') + (bluetoothObject.device_name || '')).toLowerCase();\n\n  result.device = bluetoothObject.device_services || '';\n  result.name = bluetoothObject.device_name || '';\n  result.manufacturer = bluetoothObject.device_manufacturer || parseBluetoothManufacturer(bluetoothObject.device_name || '') || '';\n  result.macDevice = (bluetoothObject.device_addr || bluetoothObject.device_address || '').toLowerCase().replace(/-/g, ':');\n  result.macHost = macAddr2;\n  result.batteryPercent = bluetoothObject.device_batteryPercent || null;\n  result.type = parseBluetoothType(typeStr);\n  result.connected = bluetoothObject.device_isconnected === 'attrib_Yes' || false;\n\n  return result;\n}\n\nfunction parseWindowsBluetooth(lines) {\n  const result = {};\n\n  result.device = null;\n  result.name = util.getValue(lines, 'name', ':');\n  result.manufacturer = util.getValue(lines, 'manufacturer', ':');\n  result.macDevice = null;\n  result.macHost = null;\n  result.batteryPercent = null;\n  result.type = parseBluetoothType(result.name.toLowerCase());\n  result.connected = null;\n\n  return result;\n}\n\nfunction bluetoothDevices(callback) {\n\n  return new Promise((resolve) => {\n    process.nextTick(() => {\n      let result = [];\n      if (_linux) {\n        // get files in /var/lib/bluetooth/ recursive\n        const btFiles = util.getFilesInPath('/var/lib/bluetooth/');\n        btFiles.forEach((element) => {\n          const filename = path.basename(element);\n          const pathParts = element.split('/');\n          const macAddr1 = pathParts.length >= 6 ? pathParts[pathParts.length - 2] : null;\n          const macAddr2 = pathParts.length >= 7 ? pathParts[pathParts.length - 3] : null;\n          if (filename === 'info') {\n            const infoFile = fs.readFileSync(element, { encoding: 'utf8' }).split('\\n');\n            result.push(parseLinuxBluetoothInfo(infoFile, macAddr1, macAddr2));\n          }\n        });\n        // determine \"connected\" with hcitool con\n        try {\n          const hdicon = execSync('hcitool con').toString().toLowerCase();\n          for (let i = 0; i < result.length; i++) {\n            if (result[i].macDevice && result[i].macDevice.length > 10 && hdicon.indexOf(result[i].macDevice.toLowerCase()) >= 0) {\n              result[i].connected = true;\n            }\n          }\n        } catch (e) {\n          util.noop();\n        }\n\n        if (callback) {\n          callback(result);\n        }\n        resolve(result);\n      }\n      if (_darwin) {\n        let cmd = 'system_profiler SPBluetoothDataType -json';\n        exec(cmd, function (error, stdout) {\n          if (!error) {\n            try {\n              const outObj = JSON.parse(stdout.toString());\n              if (outObj.SPBluetoothDataType && outObj.SPBluetoothDataType.length && outObj.SPBluetoothDataType[0] && outObj.SPBluetoothDataType[0]['device_title'] && outObj.SPBluetoothDataType[0]['device_title'].length) {\n                // missing: host BT Adapter macAddr ()\n                let macAddr2 = null;\n                if (outObj.SPBluetoothDataType[0]['local_device_title'] && outObj.SPBluetoothDataType[0].local_device_title.general_address) {\n                  macAddr2 = outObj.SPBluetoothDataType[0].local_device_title.general_address.toLowerCase().replace(/-/g, ':');\n                }\n                outObj.SPBluetoothDataType[0]['device_title'].forEach((element) => {\n                  const obj = element;\n                  const objKey = Object.keys(obj);\n                  if (objKey && objKey.length === 1) {\n                    const innerObject = obj[objKey[0]];\n                    innerObject.device_name = objKey[0];\n                    const bluetoothDevice = parseDarwinBluetoothDevices(innerObject, macAddr2);\n                    result.push(bluetoothDevice);\n                  }\n                });\n              }\n              if (outObj.SPBluetoothDataType && outObj.SPBluetoothDataType.length && outObj.SPBluetoothDataType[0] && outObj.SPBluetoothDataType[0]['device_connected'] && outObj.SPBluetoothDataType[0]['device_connected'].length) {\n                const macAddr2 = outObj.SPBluetoothDataType[0].controller_properties && outObj.SPBluetoothDataType[0].controller_properties.controller_address ? outObj.SPBluetoothDataType[0].controller_properties.controller_address.toLowerCase().replace(/-/g, ':') : null;\n                outObj.SPBluetoothDataType[0]['device_connected'].forEach((element) => {\n                  const obj = element;\n                  const objKey = Object.keys(obj);\n                  if (objKey && objKey.length === 1) {\n                    const innerObject = obj[objKey[0]];\n                    innerObject.device_name = objKey[0];\n                    innerObject.device_isconnected = 'attrib_Yes';\n                    const bluetoothDevice = parseDarwinBluetoothDevices(innerObject, macAddr2);\n                    result.push(bluetoothDevice);\n                  }\n                });\n              }\n              if (outObj.SPBluetoothDataType && outObj.SPBluetoothDataType.length && outObj.SPBluetoothDataType[0] && outObj.SPBluetoothDataType[0]['device_not_connected'] && outObj.SPBluetoothDataType[0]['device_not_connected'].length) {\n                const macAddr2 = outObj.SPBluetoothDataType[0].controller_properties && outObj.SPBluetoothDataType[0].controller_properties.controller_address ? outObj.SPBluetoothDataType[0].controller_properties.controller_address.toLowerCase().replace(/-/g, ':') : null;\n                outObj.SPBluetoothDataType[0]['device_not_connected'].forEach((element) => {\n                  const obj = element;\n                  const objKey = Object.keys(obj);\n                  if (objKey && objKey.length === 1) {\n                    const innerObject = obj[objKey[0]];\n                    innerObject.device_name = objKey[0];\n                    innerObject.device_isconnected = 'attrib_No';\n                    const bluetoothDevice = parseDarwinBluetoothDevices(innerObject, macAddr2);\n                    result.push(bluetoothDevice);\n                  }\n                });\n              }\n            } catch (e) {\n              util.noop();\n            }\n          }\n          if (callback) {\n            callback(result);\n          }\n          resolve(result);\n        });\n      }\n      if (_windows) {\n        util.powerShell('Get-CimInstance Win32_PNPEntity | select PNPClass, Name, Manufacturer | fl').then((stdout, error) => {\n          if (!error) {\n            const parts = stdout.toString().split(/\\n\\s*\\n/);\n            parts.forEach((part) => {\n              if (util.getValue(part.split('\\n'), 'PNPClass', ':') === 'Bluetooth') {\n                result.push(parseWindowsBluetooth(part.split('\\n')));\n              }\n            });\n          }\n          if (callback) {\n            callback(result);\n          }\n          resolve(result);\n        });\n      }\n      if (_freebsd || _netbsd || _openbsd || _sunos) {\n        resolve(null);\n      }\n    });\n  });\n}\n\nexports.bluetoothDevices = bluetoothDevices;\n", "'use strict';\n// @ts-check\n// ==================================================================================\n// index.js\n// ----------------------------------------------------------------------------------\n// Description:   System Information - library\n//                for Node.js\n// Copyright:     (c) 2014 - 2024\n// Author:        Sebastian Hildebrandt\n// ----------------------------------------------------------------------------------\n// Contributors:  Guillaume Legrain (https://github.com/glegrain)\n//                Riccardo Novaglia (https://github.com/richy24)\n//                Quentin Busuttil (https://github.com/Buzut)\n//                Lapsio (https://github.com/lapsio)\n//                csy (https://github.com/csy1983)\n// ----------------------------------------------------------------------------------\n// License:       MIT\n// ==================================================================================\n\n// ----------------------------------------------------------------------------------\n// Dependencies\n// ----------------------------------------------------------------------------------\n\nconst lib_version = require('../package.json').version;\nconst util = require('./util');\nconst system = require('./system');\nconst osInfo = require('./osinfo');\nconst cpu = require('./cpu');\nconst memory = require('./memory');\nconst battery = require('./battery');\nconst graphics = require('./graphics');\nconst filesystem = require('./filesystem');\nconst network = require('./network');\nconst wifi = require('./wifi');\nconst processes = require('./processes');\nconst users = require('./users');\nconst internet = require('./internet');\nconst docker = require('./docker');\nconst vbox = require('./virtualbox');\nconst printer = require('./printer');\nconst usb = require('./usb');\nconst audio = require('./audio');\nconst bluetooth = require('./bluetooth');\n\nlet _platform = process.platform;\nconst _windows = (_platform === 'win32');\nconst _freebsd = (_platform === 'freebsd');\nconst _openbsd = (_platform === 'openbsd');\nconst _netbsd = (_platform === 'netbsd');\nconst _sunos = (_platform === 'sunos');\n\n// ----------------------------------------------------------------------------------\n// init\n// ----------------------------------------------------------------------------------\n\nif (_windows) {\n  util.getCodepage();\n}\n\n// ----------------------------------------------------------------------------------\n// General\n// ----------------------------------------------------------------------------------\n\nfunction version() {\n  return lib_version;\n}\n\n// ----------------------------------------------------------------------------------\n// Get static and dynamic data (all)\n// ----------------------------------------------------------------------------------\n\n// --------------------------\n// get static data - they should not change until restarted\n\nfunction getStaticData(callback) {\n\n  return new Promise((resolve) => {\n    process.nextTick(() => {\n\n      let data = {};\n\n      data.version = version();\n\n      Promise.all([\n        system.system(),\n        system.bios(),\n        system.baseboard(),\n        system.chassis(),\n        osInfo.osInfo(),\n        osInfo.uuid(),\n        osInfo.versions(),\n        cpu.cpu(),\n        cpu.cpuFlags(),\n        graphics.graphics(),\n        network.networkInterfaces(),\n        memory.memLayout(),\n        filesystem.diskLayout()\n      ]).then((res) => {\n        data.system = res[0];\n        data.bios = res[1];\n        data.baseboard = res[2];\n        data.chassis = res[3];\n        data.os = res[4];\n        data.uuid = res[5];\n        data.versions = res[6];\n        data.cpu = res[7];\n        data.cpu.flags = res[8];\n        data.graphics = res[9];\n        data.net = res[10];\n        data.memLayout = res[11];\n        data.diskLayout = res[12];\n        if (callback) { callback(data); }\n        resolve(data);\n      });\n    });\n  });\n}\n\n\n// --------------------------\n// get all dynamic data - e.g. for monitoring agents\n// may take some seconds to get all data\n// --------------------------\n// 2 additional parameters needed\n// - srv: \t\tcomma separated list of services to monitor e.g. \"mysql, apache, postgresql\"\n// - iface:\tdefine network interface for which you like to monitor network speed e.g. \"eth0\"\n\nfunction getDynamicData(srv, iface, callback) {\n\n  if (util.isFunction(iface)) {\n    callback = iface;\n    iface = '';\n  }\n  if (util.isFunction(srv)) {\n    callback = srv;\n    srv = '';\n  }\n\n  return new Promise((resolve) => {\n    process.nextTick(() => {\n\n      iface = iface || network.getDefaultNetworkInterface();\n      srv = srv || '';\n\n      // use closure to track \u0192 completion\n      let functionProcessed = (function () {\n        let totalFunctions = 15;\n        if (_windows) { totalFunctions = 13; }\n        if (_freebsd || _openbsd || _netbsd) { totalFunctions = 11; }\n        if (_sunos) { totalFunctions = 6; }\n\n        return function () {\n          if (--totalFunctions === 0) {\n            if (callback) {\n              callback(data);\n            }\n            resolve(data);\n          }\n        };\n      })();\n\n      let data = {};\n\n      // get time\n      data.time = osInfo.time();\n\n      /**\n       * @namespace\n       * @property {Object}  versions\n       * @property {string}  versions.node\n       * @property {string}  versions.v8\n       */\n      data.node = process.versions.node;\n      data.v8 = process.versions.v8;\n\n      cpu.cpuCurrentSpeed().then((res) => {\n        data.cpuCurrentSpeed = res;\n        functionProcessed();\n      });\n\n      users.users().then((res) => {\n        data.users = res;\n        functionProcessed();\n      });\n\n      processes.processes().then((res) => {\n        data.processes = res;\n        functionProcessed();\n      });\n\n      cpu.currentLoad().then((res) => {\n        data.currentLoad = res;\n        functionProcessed();\n      });\n\n      if (!_sunos) {\n        cpu.cpuTemperature().then((res) => {\n          data.temp = res;\n          functionProcessed();\n        });\n      }\n\n      if (!_openbsd && !_freebsd && !_netbsd && !_sunos) {\n        network.networkStats(iface).then((res) => {\n          data.networkStats = res;\n          functionProcessed();\n        });\n      }\n\n      if (!_sunos) {\n        network.networkConnections().then((res) => {\n          data.networkConnections = res;\n          functionProcessed();\n        });\n      }\n\n      memory.mem().then((res) => {\n        data.mem = res;\n        functionProcessed();\n      });\n\n      if (!_sunos) {\n        battery().then((res) => {\n          data.battery = res;\n          functionProcessed();\n        });\n      }\n\n      if (!_sunos) {\n        processes.services(srv).then((res) => {\n          data.services = res;\n          functionProcessed();\n        });\n      }\n\n      if (!_sunos) {\n        filesystem.fsSize().then((res) => {\n          data.fsSize = res;\n          functionProcessed();\n        });\n      }\n\n      if (!_windows && !_openbsd && !_freebsd && !_netbsd && !_sunos) {\n        filesystem.fsStats().then((res) => {\n          data.fsStats = res;\n          functionProcessed();\n        });\n      }\n\n      if (!_windows && !_openbsd && !_freebsd && !_netbsd && !_sunos) {\n        filesystem.disksIO().then((res) => {\n          data.disksIO = res;\n          functionProcessed();\n        });\n      }\n\n      if (!_openbsd && !_freebsd && !_netbsd && !_sunos) {\n        wifi.wifiNetworks().then((res) => {\n          data.wifiNetworks = res;\n          functionProcessed();\n        });\n      }\n\n      internet.inetLatency().then((res) => {\n        data.inetLatency = res;\n        functionProcessed();\n      });\n    });\n  });\n}\n\n// --------------------------\n// get all data at once\n// --------------------------\n// 2 additional parameters needed\n// - srv: \t\tcomma separated list of services to monitor e.g. \"mysql, apache, postgresql\"\n// - iface:\tdefine network interface for which you like to monitor network speed e.g. \"eth0\"\n\nfunction getAllData(srv, iface, callback) {\n\n  return new Promise((resolve) => {\n    process.nextTick(() => {\n      let data = {};\n\n      if (iface && util.isFunction(iface) && !callback) {\n        callback = iface;\n        iface = '';\n      }\n\n      if (srv && util.isFunction(srv) && !iface && !callback) {\n        callback = srv;\n        srv = '';\n        iface = '';\n      }\n\n      getStaticData().then((res) => {\n        data = res;\n        getDynamicData(srv, iface).then((res) => {\n          for (let key in res) {\n            if ({}.hasOwnProperty.call(res, key)) {\n              data[key] = res[key];\n            }\n          }\n          if (callback) { callback(data); }\n          resolve(data);\n        });\n      });\n    });\n  });\n}\n\nfunction get(valueObject, callback) {\n  return new Promise((resolve) => {\n    process.nextTick(() => {\n      const allPromises = Object.keys(valueObject)\n        .filter(func => ({}.hasOwnProperty.call(exports, func)))\n        .map(func => {\n          const params = valueObject[func].substring(valueObject[func].lastIndexOf('(') + 1, valueObject[func].lastIndexOf(')'));\n          let funcWithoutParams = func.indexOf(')') >= 0 ? func.split(')')[1].trim() : func;\n          funcWithoutParams = func.indexOf('|') >= 0 ? func.split('|')[0].trim() : funcWithoutParams;\n          if (params) {\n            return exports[funcWithoutParams](params);\n          } else {\n            return exports[funcWithoutParams]('');\n          }\n        });\n\n      Promise.all(allPromises).then((data) => {\n        const result = {};\n        let i = 0;\n        for (let key in valueObject) {\n          if ({}.hasOwnProperty.call(valueObject, key) && {}.hasOwnProperty.call(exports, key) && data.length > i) {\n            if (valueObject[key] === '*' || valueObject[key] === 'all') {\n              result[key] = data[i];\n            } else {\n              let keys = valueObject[key];\n              let filter = '';\n              let filterParts = [];\n              // remove params\n              if (keys.indexOf(')') >= 0) {\n                keys = keys.split(')')[1].trim();\n              }\n              // extract filter and remove it from keys\n              if (keys.indexOf('|') >= 0) {\n                filter = keys.split('|')[1].trim();\n                filterParts = filter.split(':');\n\n                keys = keys.split('|')[0].trim();\n              }\n              keys = keys.replace(/,/g, ' ').replace(/ +/g, ' ').split(' ');\n              if (data[i]) {\n                if (Array.isArray(data[i])) {\n                  // result is in an array, go through all elements of array and pick only the right ones\n                  const partialArray = [];\n                  data[i].forEach(element => {\n                    let partialRes = {};\n                    if (keys.length === 1 && (keys[0] === '*' || keys[0] === 'all')) {\n                      partialRes = element;\n                    } else {\n                      keys.forEach(k => {\n                        if ({}.hasOwnProperty.call(element, k)) {\n                          partialRes[k] = element[k];\n                        }\n                      });\n                    }\n                    // if there is a filter, then just take those elements\n                    if (filter && filterParts.length === 2) {\n                      if ({}.hasOwnProperty.call(partialRes, filterParts[0].trim())) {\n                        const val = partialRes[filterParts[0].trim()];\n                        if (typeof val == 'number') {\n                          if (val === parseFloat(filterParts[1].trim())) {\n                            partialArray.push(partialRes);\n                          }\n                        } else if (typeof val == 'string') {\n                          if (val.toLowerCase() === filterParts[1].trim().toLowerCase()) {\n                            partialArray.push(partialRes);\n                          }\n                        }\n                      }\n                    } else {\n                      partialArray.push(partialRes);\n                    }\n\n                  });\n                  result[key] = partialArray;\n                } else {\n                  const partialRes = {};\n                  keys.forEach(k => {\n                    if ({}.hasOwnProperty.call(data[i], k)) {\n                      partialRes[k] = data[i][k];\n                    }\n                  });\n                  result[key] = partialRes;\n                }\n              } else {\n                result[key] = {};\n              }\n            }\n            i++;\n          }\n        }\n        if (callback) { callback(result); }\n        resolve(result);\n      });\n    });\n  });\n}\n\nfunction observe(valueObject, interval, callback) {\n  let _data = null;\n\n  const result = setInterval(() => {\n    get(valueObject).then((data) => {\n      if (JSON.stringify(_data) !== JSON.stringify(data)) {\n        _data = Object.assign({}, data);\n        callback(data);\n      }\n    });\n  }, interval);\n  return result;\n}\n\n// ----------------------------------------------------------------------------------\n// export all libs\n// ----------------------------------------------------------------------------------\n\nexports.version = version;\nexports.system = system.system;\nexports.bios = system.bios;\nexports.baseboard = system.baseboard;\nexports.chassis = system.chassis;\n\nexports.time = osInfo.time;\nexports.osInfo = osInfo.osInfo;\nexports.versions = osInfo.versions;\nexports.shell = osInfo.shell;\nexports.uuid = osInfo.uuid;\n\nexports.cpu = cpu.cpu;\nexports.cpuFlags = cpu.cpuFlags;\nexports.cpuCache = cpu.cpuCache;\nexports.cpuCurrentSpeed = cpu.cpuCurrentSpeed;\nexports.cpuTemperature = cpu.cpuTemperature;\nexports.currentLoad = cpu.currentLoad;\nexports.fullLoad = cpu.fullLoad;\n\nexports.mem = memory.mem;\nexports.memLayout = memory.memLayout;\n\nexports.battery = battery;\n\nexports.graphics = graphics.graphics;\n\nexports.fsSize = filesystem.fsSize;\nexports.fsOpenFiles = filesystem.fsOpenFiles;\nexports.blockDevices = filesystem.blockDevices;\nexports.fsStats = filesystem.fsStats;\nexports.disksIO = filesystem.disksIO;\nexports.diskLayout = filesystem.diskLayout;\n\nexports.networkInterfaceDefault = network.networkInterfaceDefault;\nexports.networkGatewayDefault = network.networkGatewayDefault;\nexports.networkInterfaces = network.networkInterfaces;\nexports.networkStats = network.networkStats;\nexports.networkConnections = network.networkConnections;\n\nexports.wifiNetworks = wifi.wifiNetworks;\nexports.wifiInterfaces = wifi.wifiInterfaces;\nexports.wifiConnections = wifi.wifiConnections;\n\nexports.services = processes.services;\nexports.processes = processes.processes;\nexports.processLoad = processes.processLoad;\n\nexports.users = users.users;\n\nexports.inetChecksite = internet.inetChecksite;\nexports.inetLatency = internet.inetLatency;\n\nexports.dockerInfo = docker.dockerInfo;\nexports.dockerImages = docker.dockerImages;\nexports.dockerContainers = docker.dockerContainers;\nexports.dockerContainerStats = docker.dockerContainerStats;\nexports.dockerContainerProcesses = docker.dockerContainerProcesses;\nexports.dockerVolumes = docker.dockerVolumes;\nexports.dockerAll = docker.dockerAll;\n\nexports.vboxInfo = vbox.vboxInfo;\n\nexports.printer = printer.printer;\n\nexports.usb = usb.usb;\n\nexports.audio = audio.audio;\nexports.bluetoothDevices = bluetooth.bluetoothDevices;\n\nexports.getStaticData = getStaticData;\nexports.getDynamicData = getDynamicData;\nexports.getAllData = getAllData;\nexports.get = get;\nexports.observe = observe;\n\nexports.powerShellStart = util.powerShellStart;\nexports.powerShellRelease = util.powerShellRelease;\n", "import { Action, ActionPanel, environment, Icon, List } from \"@raycast/api\";\nimport { exec } from \"child_process\";\nimport macosRelease from \"macos-release\";\nimport { macOSVersion } from \"macos-version\";\nimport os from \"os\";\nimport { useEffect, useState } from \"react\";\nimport si from \"systeminformation\";\n\nasync function calculateDiskStorage() {\n  const disks = await si.fsSize();\n\n  const diskObj = disks[0];\n  const totalSize = (diskObj.size / (1024 * 1024 * 1024)).toFixed(2);\n  const totalAvailableStorage = (diskObj.available / (1024 * 1024 * 1024)).toFixed(2);\n\n  return `${totalAvailableStorage} GB available of ${totalSize} GB`;\n}\n\nexport default function Command() {\n  const [storageInfo, setStorageInfo] = useState(\"\");\n  const [serialNumber, setSerialNumber] = useState(\"\");\n  const [networkDevices, setNetworkDevices] = useState([]);\n\n  useEffect(() => {\n    calculateDiskStorage().then((size) => {\n      setStorageInfo(size);\n    });\n\n    exec(\"/usr/sbin/system_profiler SPHardwareDataType\", (error, stdout, stderr) => {\n      if (error) {\n        setSerialNumber(`Error: ${error.message}`);\n        return;\n      }\n      if (stderr) {\n        setSerialNumber(`stderr: ${stderr}`);\n        return;\n      }\n\n      const serialNumberMatch = stdout.match(/Serial Number \\(system\\): (.+)/);\n      const serialNumber = serialNumberMatch ? serialNumberMatch[1] : null;\n\n      setSerialNumber(serialNumber);\n    });\n\n    const networkInterfaces = os.networkInterfaces();\n    const devices = [];\n\n    for (const [name, interfaces] of Object.entries(networkInterfaces)) {\n      for (const interfaceObj of interfaces) {\n        if (interfaceObj.family === \"IPv4\" && !interfaceObj.internal) {\n          devices.push({ name, ip: interfaceObj.address });\n        }\n      }\n    }\n\n    setNetworkDevices(devices);\n  }, []);\n\n  const releaseImage = () => {\n    switch (macosRelease().name) {\n      // TODO: macOS 15 betas doesn't report themselves as \"Sequoia\", instead \"macOS 15\" shows up\n      // case \"Sequoia\":\n      //   return `${environment.assetsPath}/macos_sequoia.png`;\n      case \"Sonoma\":\n        return `${environment.assetsPath}/macos_sonoma.png`;\n      case \"Ventura\":\n        return `${environment.assetsPath}/macos_ventura.png`;\n      case \"Monterey\":\n        return `${environment.assetsPath}/macos_monterey.png`;\n      default:\n        return \"ERROR\";\n    }\n  };\n\n  return (\n    <List>\n      <List.Section title={`About This Mac`}>\n        <List.Item\n          icon={Icon.Person}\n          title=\"Hostname\"\n          accessories={[{ text: os.hostname().replace(/\\.local/g, \"\") }]}\n          actions={\n            <ActionPanel>\n              <Action.CopyToClipboard title=\"Copy Hostname\" content={os.hostname().replace(/\\.local/g, \"\")} />\n            </ActionPanel>\n          }\n        />\n        <List.Item\n          icon={Icon.ComputerChip}\n          title=\"Chip\"\n          accessories={[{ text: os.cpus()[0].model }]}\n          actions={\n            <ActionPanel>\n              <Action.CopyToClipboard title=\"Copy Chip Model\" content={os.cpus()[0].model} />\n            </ActionPanel>\n          }\n        />\n        <List.Item\n          icon={Icon.MemoryChip}\n          title=\"Memory\"\n          accessories={[{ text: os.totalmem() / (1024 * 1024 * 1024) + \" GB\" }]}\n        />\n        <List.Item\n          icon={Icon.Hashtag}\n          title=\"Serial Number\"\n          accessories={[{ text: serialNumber || \"-\" }]}\n          actions={\n            <ActionPanel>\n              <Action.CopyToClipboard title={`Copy Serial Number`} content={serialNumber || \"-\"} />\n            </ActionPanel>\n          }\n        />\n      </List.Section>\n\n      <List.Section title=\"macOS\">\n        <List.Item\n          icon={releaseImage() == \"ERROR\" ? Icon.Gear : releaseImage()}\n          title={`macOS ${macosRelease().name == \"Unknown\" ? macOSVersion().split(\".\")[0] : `${macosRelease().name}`}`}\n          accessories={[{ text: `Version ${macOSVersion()}` }]}\n          actions={\n            <ActionPanel>\n              <Action.CopyToClipboard\n                title=\"Copy macOS Version\"\n                content={`macOS ${macosRelease().name == \"Unknown\" ? macOSVersion() : `${macosRelease().name}`}`}\n              />\n            </ActionPanel>\n          }\n        />\n\n        <List.Item\n          icon={Icon.Info}\n          title={`Darwin Kernel`}\n          accessories={[{ text: `${os.version().replace(\"Darwin Kernel\", \"\")}` }]}\n          actions={\n            <ActionPanel>\n              <Action.CopyToClipboard title=\"Copy Kernel Version\" content={os.version()} />\n            </ActionPanel>\n          }\n        />\n      </List.Section>\n\n      <List.Section title=\"Storage\">\n        <List.Item\n          icon={Icon.HardDrive}\n          title=\"Macintosh HD\"\n          accessories={[{ text: storageInfo, tooltip: \"This information may be inaccurate\" }]}\n          actions={\n            <ActionPanel>\n              <Action.Open\n                target=\"x-apple.systempreferences:com.apple.settings.Storage\"\n                title=\"Open Storage Settings\"\n              />\n            </ActionPanel>\n          }\n        />\n      </List.Section>\n\n      <List.Section title=\"Network\">\n        {networkDevices.map((device) => (\n          <List.Item\n            key={device.name}\n            icon={Icon.Globe}\n            title={device.name}\n            accessories={[{ text: device.ip }]}\n            actions={\n              <ActionPanel>\n                <Action.CopyToClipboard title=\"Copy IP Address\" content={device.ip} />\n              </ActionPanel>\n            }\n          />\n        ))}\n      </List.Section>\n    </List>\n  );\n}\n", "import os from 'node:os';\n\nconst nameMap = new Map([\n\t[23, ['Sonoma', '14']],\n\t[22, ['Ventura', '13']],\n\t[21, ['Monterey', '12']],\n\t[20, ['Big Sur', '11']],\n\t[19, ['Catalina', '10.15']],\n\t[18, ['Mojave', '10.14']],\n\t[17, ['High Sierra', '10.13']],\n\t[16, ['Sierra', '10.12']],\n\t[15, ['El Capitan', '10.11']],\n\t[14, ['Yosemite', '10.10']],\n\t[13, ['Mavericks', '10.9']],\n\t[12, ['Mountain Lion', '10.8']],\n\t[11, ['Lion', '10.7']],\n\t[10, ['Snow Leopard', '10.6']],\n\t[9, ['Leopard', '10.5']],\n\t[8, ['Tiger', '10.4']],\n\t[7, ['Panther', '10.3']],\n\t[6, ['Jaguar', '10.2']],\n\t[5, ['Puma', '10.1']],\n]);\n\nexport default function macosRelease(release) {\n\trelease = Number((release || os.release()).split('.')[0]);\n\n\tconst [name, version] = nameMap.get(release) || ['Unknown', ''];\n\n\treturn {\n\t\tname,\n\t\tversion,\n\t};\n}\n", "import process from 'node:process';\nimport fs from 'node:fs';\nimport semver from 'semver';\n\nexport const isMacOS = process.platform === 'darwin';\n\nlet version;\n\nconst clean = version => {\n\tconst {length} = version.split('.');\n\n\tif (length === 1) {\n\t\treturn `${version}.0.0`;\n\t}\n\n\tif (length === 2) {\n\t\treturn `${version}.0`;\n\t}\n\n\treturn version;\n};\n\nconst parseVersion = plist => {\n\tconst matches = /<key>ProductVersion<\\/key>\\s*<string>([\\d.]+)<\\/string>/.exec(plist);\n\tif (!matches) {\n\t\treturn;\n\t}\n\n\treturn matches[1].replace('10.16', '11');\n};\n\nexport function macOSVersion() {\n\tif (!isMacOS) {\n\t\treturn;\n\t}\n\n\tif (!version) {\n\t\tconst file = fs.readFileSync('/System/Library/CoreServices/SystemVersion.plist', 'utf8');\n\t\tconst matches = parseVersion(file);\n\n\t\tif (!matches) {\n\t\t\treturn;\n\t\t}\n\n\t\tversion = clean(matches);\n\t}\n\n\treturn version;\n}\n\nif (process.env.NODE_ENV === 'test') {\n\tmacOSVersion._parseVersion = parseVersion;\n}\n\nexport function isMacOSVersion(semverRange) {\n\tif (!isMacOS) {\n\t\treturn false;\n\t}\n\n\tsemverRange = semverRange.replace('10.16', '11');\n\n\treturn semver.satisfies(macOSVersion(), clean(semverRange));\n}\n\nexport function isMacOSVersionGreaterThanOrEqualTo(version) {\n\tif (!isMacOS) {\n\t\treturn false;\n\t}\n\n\tversion = version.replace('10.16', '11');\n\n\treturn semver.gte(macOSVersion(), clean(version));\n}\n\nexport function assertMacOSVersion(semverRange) {\n\tsemverRange = semverRange.replace('10.16', '11');\n\n\tif (!isMacOSVersion(semverRange)) {\n\t\tthrow new Error(`Requires macOS ${semverRange}`);\n\t}\n}\n\nexport function assertMacOSVersionGreaterThanOrEqualTo(version) {\n\tversion = version.replace('10.16', '11');\n\n\tif (!isMacOSVersionGreaterThanOrEqualTo(version)) {\n\t\tthrow new Error(`Requires macOS ${version} or later`);\n\t}\n}\n\nexport function assertMacOS() {\n\tif (!isMacOS) {\n\t\tthrow new Error('Requires macOS');\n\t}\n}\n"],
  "mappings": "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",
  "names": ["require_constants", "__commonJSMin", "exports", "module", "SEMVER_SPEC_VERSION", "MAX_SAFE_INTEGER", "MAX_SAFE_COMPONENT_LENGTH", "MAX_SAFE_BUILD_LENGTH", "RELEASE_TYPES", "require_debug", "__commonJSMin", "exports", "module", "debug", "args", "require_re", "__commonJSMin", "exports", "module", "MAX_SAFE_COMPONENT_LENGTH", "MAX_SAFE_BUILD_LENGTH", "MAX_LENGTH", "debug", "re", "safeRe", "src", "t", "R", "LETTERDASHNUMBER", "safeRegexReplacements", "makeSafeRegex", "value", "token", "max", "createToken", "name", "isGlobal", "safe", "index", "require_parse_options", "__commonJSMin", "exports", "module", "looseOption", "emptyOpts", "parseOptions", "options", "require_identifiers", "__commonJSMin", "exports", "module", "numeric", "compareIdentifiers", "a", "b", "anum", "bnum", "rcompareIdentifiers", "require_semver", "__commonJSMin", "exports", "module", "debug", "MAX_LENGTH", "MAX_SAFE_INTEGER", "re", "t", "parseOptions", "compareIdentifiers", "SemVer", "_SemVer", "version", "options", "m", "id", "num", "other", "i", "a", "b", "release", "identifier", "identifierBase", "base", "prerelease", "require_parse", "__commonJSMin", "exports", "module", "SemVer", "parse", "version", "options", "throwErrors", "er", "require_valid", "__commonJSMin", "exports", "module", "parse", "valid", "version", "options", "v", "require_clean", "__commonJSMin", "exports", "module", "parse", "clean", "version", "options", "s", "require_inc", "__commonJSMin", "exports", "module", "SemVer", "inc", "version", "release", "options", "identifier", "identifierBase", "require_diff", "__commonJSMin", "exports", "module", "parse", "diff", "version1", "version2", "v1", "v2", "comparison", "v1Higher", "highVersion", "lowVersion", "highHasPre", "prefix", "require_major", "__commonJSMin", "exports", "module", "SemVer", "major", "a", "loose", "require_minor", "__commonJSMin", "exports", "module", "SemVer", "minor", "a", "loose", "require_patch", "__commonJSMin", "exports", "module", "SemVer", "patch", "a", "loose", "require_prerelease", "__commonJSMin", "exports", "module", "parse", "prerelease", "version", "options", "parsed", "require_compare", "__commonJSMin", "exports", "module", "SemVer", "compare", "a", "b", "loose", "require_rcompare", "__commonJSMin", "exports", "module", "compare", "rcompare", "a", "b", "loose", "require_compare_loose", "__commonJSMin", "exports", "module", "compare", "compareLoose", "a", "b", "require_compare_build", "__commonJSMin", "exports", "module", "SemVer", "compareBuild", "a", "b", "loose", "versionA", "versionB", "require_sort", "__commonJSMin", "exports", "module", "compareBuild", "sort", "list", "loose", "a", "b", "require_rsort", "__commonJSMin", "exports", "module", "compareBuild", "rsort", "list", "loose", "a", "b", "require_gt", "__commonJSMin", "exports", "module", "compare", "gt", "a", "b", "loose", "require_lt", "__commonJSMin", "exports", "module", "compare", "lt", "a", "b", "loose", "require_eq", "__commonJSMin", "exports", "module", "compare", "eq", "a", "b", "loose", "require_neq", "__commonJSMin", "exports", "module", "compare", "neq", "a", "b", "loose", "require_gte", "__commonJSMin", "exports", "module", "compare", "gte", "a", "b", "loose", "require_lte", "__commonJSMin", "exports", "module", "compare", "lte", "a", "b", "loose", "require_cmp", "__commonJSMin", "exports", "module", "eq", "neq", "gt", "gte", "lt", "lte", "cmp", "a", "op", "b", "loose", "require_coerce", "__commonJSMin", "exports", "module", "SemVer", "parse", "re", "t", "coerce", "version", "options", "match", "coerceRtlRegex", "next", "major", "minor", "patch", "prerelease", "build", "require_lrucache", "__commonJSMin", "exports", "module", "LRUCache", "key", "value", "firstKey", "require_range", "__commonJSMin", "exports", "module", "Range", "_Range", "range", "options", "parseOptions", "Comparator", "r", "c", "first", "isNullSet", "isAny", "comps", "memoKey", "FLAG_INCLUDE_PRERELEASE", "FLAG_LOOSE", "cached", "cache", "loose", "hr", "re", "t", "hyphenReplace", "debug", "comparatorTrimReplace", "tildeTrimReplace", "caretTrimReplace", "rangeList", "comp", "parseComparator", "replaceGTE0", "rangeMap", "comparators", "result", "thisComparators", "isSatisfiable", "rangeComparators", "thisComparator", "rangeComparator", "version", "SemVer", "i", "testSet", "LRU", "remainingComparators", "testComparator", "otherComparator", "replaceCarets", "replaceTildes", "replaceXRanges", "replaceStars", "isX", "id", "replaceTilde", "_", "M", "m", "p", "pr", "ret", "replaceCaret", "z", "replaceXRange", "gtlt", "xM", "xm", "xp", "anyX", "incPr", "$0", "from", "fM", "fm", "fp", "fpr", "fb", "to", "tM", "tm", "tp", "tpr", "set", "allowed", "require_comparator", "__commonJSMin", "exports", "module", "ANY", "Comparator", "_Comparator", "comp", "options", "parseOptions", "debug", "r", "re", "t", "m", "SemVer", "version", "cmp", "Range", "require_satisfies", "__commonJSMin", "exports", "module", "Range", "satisfies", "version", "range", "options", "require_to_comparators", "__commonJSMin", "exports", "module", "Range", "toComparators", "range", "options", "comp", "c", "require_max_satisfying", "__commonJSMin", "exports", "module", "SemVer", "Range", "maxSatisfying", "versions", "range", "options", "max", "maxSV", "rangeObj", "v", "require_min_satisfying", "__commonJSMin", "exports", "module", "SemVer", "Range", "minSatisfying", "versions", "range", "options", "min", "minSV", "rangeObj", "v", "require_min_version", "__commonJSMin", "exports", "module", "SemVer", "Range", "gt", "minVersion", "range", "loose", "minver", "i", "comparators", "setMin", "comparator", "compver", "require_valid", "__commonJSMin", "exports", "module", "Range", "validRange", "range", "options", "require_outside", "__commonJSMin", "exports", "module", "SemVer", "Comparator", "ANY", "Range", "satisfies", "gt", "lt", "lte", "gte", "outside", "version", "range", "hilo", "options", "gtfn", "ltefn", "ltfn", "comp", "ecomp", "i", "comparators", "high", "low", "comparator", "require_gtr", "__commonJSMin", "exports", "module", "outside", "gtr", "version", "range", "options", "require_ltr", "__commonJSMin", "exports", "module", "outside", "ltr", "version", "range", "options", "require_intersects", "__commonJSMin", "exports", "module", "Range", "intersects", "r1", "r2", "options", "require_simplify", "__commonJSMin", "exports", "module", "satisfies", "compare", "versions", "range", "options", "set", "first", "prev", "v", "a", "b", "version", "ranges", "min", "max", "simplified", "original", "require_subset", "__commonJSMin", "exports", "module", "Range", "Comparator", "ANY", "satisfies", "compare", "subset", "sub", "dom", "options", "sawNonNull", "OUTER", "simpleSub", "simpleDom", "isSub", "simpleSubset", "minimumVersionWithPreRelease", "minimumVersion", "eqSet", "gt", "lt", "c", "higherGT", "lowerLT", "gtltComp", "eq", "higher", "lower", "hasDomLT", "hasDomGT", "needDomLTPre", "needDomGTPre", "a", "b", "comp", "require_semver", "__commonJSMin", "exports", "module", "internalRe", "constants", "SemVer", "identifiers", "parse", "valid", "clean", "inc", "diff", "major", "minor", "patch", "prerelease", "compare", "rcompare", "compareLoose", "compareBuild", "sort", "rsort", "gt", "lt", "eq", "neq", "gte", "lte", "cmp", "coerce", "Comparator", "Range", "satisfies", "toComparators", "maxSatisfying", "minSatisfying", "minVersion", "validRange", "outside", "gtr", "ltr", "intersects", "simplifyRange", "subset", "require_package", "__commonJSMin", "exports", "module", "require_util", "__commonJSMin", "exports", "os", "fs", "path", "spawn", "exec", "execSync", "util", "_platform", "_linux", "_darwin", "_windows", "_freebsd", "_openbsd", "_netbsd", "_cores", "wmicPath", "codepage", "_smartMonToolsInstalled", "_rpi_cpuinfo", "WINDIR", "_psChild", "_psResult", "_psCmds", "_psPersistent", "_psToUTF8", "_psCmdStart", "_psError", "_psCmdSeperator", "_psIdSeperator", "execOptsWin", "toInt", "value", "result", "splitByNumber", "str", "numberStarted", "num", "cpart", "c", "stringReplace", "stringToLower", "stringToString", "stringSubstr", "stringTrim", "stringStartWith", "mathMin", "isFunction", "functionToCheck", "unique", "obj", "uniques", "stringify", "i", "keys", "a", "b", "j", "sortByKey", "array", "x", "y", "key", "cores", "getValue", "lines", "property", "separator", "trimmed", "lineMatch", "line", "lineLower", "parts", "decodeEscapeSequence", "base", "detectSplit", "seperator", "part", "element", "parseTime", "pmDesignator", "hour", "min", "splitter", "isPM", "parseDateTime", "dt", "culture", "dateFormat", "dtparts", "time", "parseHead", "head", "rights", "space", "count", "from", "to", "len", "findObjectByKey", "getWmic", "wmicPathArray", "wmic", "command", "resolve", "powerShell", "stdout", "getVboxmanage", "powerShellProceedResults", "data", "id", "res", "parts2", "remove", "powerShellStart", "powerShellRelease", "cmd", "callback", "child", "execSafe", "args", "options", "getCodepage", "smartMonToolsInstalled", "pathArray", "isRaspberry", "PI_MODEL_NO", "cpuinfo", "hardware", "isRaspbian", "osrelease", "execWin", "opts", "newCmd", "error", "darwinXcodeExists", "cmdLineToolsExists", "xcodeAppExists", "xcodeExists", "nanoSeconds", "countUniqueLines", "startingWith", "uniqueLines", "countLines", "sanitizeShellString", "strict", "s", "l", "isPrototypePolluted", "notPolluted", "st", "ms", "r", "rs", "rs2", "q", "qs", "qs2", "p", "stm", "sto", "stl", "s1", "s2", "s1l", "hex2bin", "hex", "getFilesInPath", "source", "lstatSync", "readdirSync", "join", "isDirectory", "isFile", "getDirectories", "name", "getFiles", "getFilesRecursively", "dir", "decodePiCpuinfo", "oldRevisionCodes", "processorList", "manufacturerList", "typeList", "revisionCode", "model", "serial", "revision", "memSizeCode", "manufacturer", "processor", "typeCode", "getRpiGpu", "rpi", "promiseAll", "promises", "resolvingPromises", "promise", "payload", "errors", "results", "items", "promisify", "nodeStyleFunction", "reject", "err", "promisifySave", "linuxVersion", "plistParser", "xmlStr", "tags", "pos", "depth", "inTagStart", "inTagContent", "inTagEnd", "metaData", "cn", "strIsNumeric", "plistReader", "output", "lineParts", "valueString", "semverCompare", "v1", "v2", "parts1", "noop", "require_system", "__commonJSMin", "exports", "fs", "os", "util", "exec", "execSync", "execPromise", "_platform", "_linux", "_darwin", "_windows", "_freebsd", "_openbsd", "_netbsd", "_sunos", "system", "callback", "resolve", "result", "error", "stdout", "lines", "cmd", "disksById", "kernelVersion", "procLines", "model", "rPIRevision", "version", "manufacturer", "cleanDefaults", "s", "cmpStr", "bios", "datetime", "language", "features", "line", "feature", "hardwareData", "bootRomVersion", "description", "baseboard", "workload", "data", "linesRpi", "rpi", "devices", "win10plus", "maxCapacityAttribute", "macOsChassisType", "chassis", "chassisTypes", "ctype", "modelParts", "require_osinfo", "__commonJSMin", "exports", "os", "fs", "util", "exec", "execSync", "_platform", "_linux", "_darwin", "_windows", "_freebsd", "_openbsd", "_netbsd", "_sunos", "time", "getLogoFile", "distro", "result", "getFQDN", "fqdn", "stdout", "osInfo", "callback", "resolve", "error", "release", "line", "releaseVersion", "codename", "prettyName", "isUefiLinux", "uefi", "uuid", "data", "lines", "logofile", "serial", "bootmethod", "uefiConf", "workload", "hyperv", "term", "isUefiWindows", "err", "versions", "apps", "versionObject", "checkVersionParam", "el", "key", "appsObj", "totalFunctions", "functionProcessed", "cmd", "openssl", "pm2", "gulp", "tsc", "grunt", "gitHomebrewExists", "git", "apache", "nginx", "mysql", "parts", "postfix", "mongodb", "postgresql", "postgresqlBin", "item", "srvCaption", "perl", "osVersion", "gitHomebrewExists1", "gitHomebrewExists2", "python", "gcc", "dotnet", "shell", "getUniqueMacAdresses", "macs", "ifaces", "dev", "details", "mac", "a", "b", "jsonObj", "spHardware", "sysdir", "require_cpu", "__commonJSMin", "exports", "os", "exec", "execSync", "fs", "util", "_platform", "_linux", "_darwin", "_windows", "_freebsd", "_openbsd", "_netbsd", "_sunos", "_cpu_speed", "_current_cpu", "_cpus", "_corecount", "AMDBaseFrequencies", "socketTypes", "socketTypesByName", "getSocketTypesByName", "str", "result", "key", "element", "cpuManufacturer", "cpuBrandManufacturer", "res", "parts", "getAMDSpeed", "brand", "found", "item", "getCpu", "resolve", "UNKNOWN", "cpuFlags", "flags", "error", "stdout", "lines", "modellineParts", "speed", "tbFrequency", "countProcessors", "countCores", "countThreads", "clusters", "efficiencyCores", "line", "performanceCores", "cpuCache", "modelline", "current", "getCpuCurrentSpeedSync", "threadsPerCore", "processors", "threadsPerCoreInt", "processorsInt", "coresPerSocket", "linesRpi", "rPIRevision", "lines2", "error2", "stdout2", "cache", "data", "processor", "sig", "i", "voltage", "cacheType", "sizeParts", "size", "unit", "threadCount", "coreCount", "workload", "name", "description", "socketId", "socketByName", "parseWinCache", "hyperv", "cpu", "callback", "cpus", "minFreq", "maxFreq", "avgFreq", "cores", "freq", "cpuCurrentSpeed", "currCpuSpeed", "cpuTemperature", "cmd", "tdiePos", "tctl", "label", "value", "a", "b", "maxtmp", "tdieTemp", "newSectionStarts", "section", "regex", "temps", "firstPart", "err", "sum", "temp", "osxTemp", "idx", "flag_hex", "flag_bin_unpadded", "flag_bin", "all_flags", "f", "flag", "linesProc", "linesCache", "l1i", "l1d", "l2", "part", "level", "installedSize", "getLoad", "loads", "x", "avgLoad", "totalUser", "totalSystem", "totalNice", "totalIrq", "totalIdle", "totalSteal", "totalGuest", "steal", "guest", "tmpTick", "tmpLoad", "tmpUser", "tmpSystem", "tmpNice", "tmpIdle", "tmpIrq", "tmpSteal", "tmpGuest", "totalTick", "totalLoad", "currentTick", "currentLoad", "getFullLoad", "len", "totalTicks", "fullLoad", "require_memory", "__commonJSMin", "exports", "os", "exec", "execSync", "util", "fs", "_platform", "_linux", "_darwin", "_windows", "_freebsd", "_openbsd", "_netbsd", "_sunos", "OSX_RAM_manufacturers", "LINUX_RAM_manufacturers", "mem", "callback", "resolve", "result", "error", "stdout", "lines", "available", "pagesize", "inactive", "cache", "pageSize", "line", "swaptotal", "swapused", "idx", "memLayout", "getManufacturerDarwin", "manId", "getManufacturerLinux", "manIdSearch", "devices", "device", "sizeString", "size", "bank", "totalWidth", "dataWidth", "model", "version", "clockSpeed", "freq", "voltage", "allLines", "eccStatus", "hasBank", "type", "memoryTypes", "FormFactors", "tag", "tagInt", "require_battery", "__commonJSMin", "exports", "module", "exec", "fs", "util", "_platform", "_linux", "_darwin", "_windows", "_freebsd", "_openbsd", "_netbsd", "_sunos", "parseWinBatteryPart", "lines", "designedCapacity", "fullChargeCapacity", "result", "status", "statusValue", "callback", "resolve", "battery_path", "acConnected", "acPath", "error", "stdout", "desingedMinVoltage", "percent", "energy", "power", "current", "charge", "batteries", "parts", "parts2", "workload", "data", "hasValue", "value", "i", "designCapacities", "e", "fullChargeCapacities", "first", "additionalBatteries", "parsed", "require_graphics", "__commonJSMin", "exports", "fs", "exec", "execSync", "util", "_platform", "_nvidiaSmiPath", "_linux", "_darwin", "_windows", "_freebsd", "_openbsd", "_netbsd", "_sunos", "_resolutionX", "_resolutionY", "_pixelDepth", "_refreshRate", "videoTypes", "getVendorFromModel", "model", "manufacturers", "result", "manufacturer", "getVendorFromId", "id", "vendorToId", "str", "getMetalVersion", "graphics", "callback", "parseLinesDarwin", "graphicsArr", "res", "item", "bus", "vram", "vramDyn", "metalVersion", "displayItem", "connectionType", "currentResolutionParts", "currentResolution", "pixelParts", "pixelDepthString", "serial", "parseLinesLinuxControllers", "lines", "controllers", "currentController", "isGraphicsController", "pciIDs", "i", "el", "line", "subsystem", "isExternal", "vgapos", "_3dcontrollerpos", "pciIDCandidate", "endpos", "parts", "subVendor", "memparts", "parseLinesLinuxClinfo", "fieldPattern", "devices", "field", "deviceId", "device", "busAddress", "bdf", "slot", "b", "d", "f", "controller", "memory", "getNvidiaSmi", "basePath", "targetDir", "dir", "prevDir", "currentDir", "previousNvidiaSmi", "currentNvidiaSmi", "nvidiaSmi", "options", "nvidiaSmiExe", "cmd", "nvidiaDevices", "safeParseNumber", "value", "stdout", "results", "gpu", "splittedData", "mergeControllerNvidia", "nvidia", "parseLinesLinuxEdid", "edid", "start", "model_raw", "v", "parseLinesLinuxDisplays", "depth", "displays", "currentDisplay", "is_edid", "is_current", "edid_raw", "edid_decoded", "parts1", "resParts", "resolve", "error", "output", "obj", "current", "o", "nvidiaData", "contr", "workload", "data", "csections", "vsections", "parseLinesWindowsControllers", "windowsSubDeviceId", "nvidiaSubDeviceIdParts", "nvidiaSubDeviceId", "lengthDifference", "dsections", "msections", "ssections", "tsections", "isections", "element", "parseLinesWindowsDisplaysPowershell", "sections", "vections", "memorySizes", "matchingDeviceId", "quadWordmemorySize", "pnpDeviceId", "subDeviceId", "memorySize", "vendor", "deviceID", "resolutionX", "resolutionY", "linesDisplay", "linesScreen", "linesMonitor", "linesConnection", "bitsPerPixel", "bounds", "primary", "sizeX", "sizeY", "instanceName", "videoOutputTechnology", "deviceName", "displayVendor", "displayModel", "require_filesystem", "__commonJSMin", "exports", "util", "fs", "exec", "execSync", "execPromiseSave", "_platform", "_linux", "_darwin", "_windows", "_freebsd", "_openbsd", "_netbsd", "_sunos", "_fs_speed", "_disk_io", "fsSize", "drive", "callback", "macOsDisks", "osMounts", "getmacOsFsType", "parts", "fsShort", "macOsDisksSingle", "item", "isLinuxTmpFs", "linuxTmpFileSystems", "result", "linuxFs", "filterLines", "stdout", "lines", "removeLines", "i", "parseDf", "data", "line", "fsType", "size", "used", "available", "use", "rw", "mount", "el", "resolve", "cmd", "error", "device", "free", "caption", "rwValue", "fsOpenFiles", "parseBytes", "s", "parseDevices", "devices", "parseBlk", "disk", "decodeMdabmData", "raid", "label", "uuid", "members", "raidMatchLinux", "element", "mdData", "blockdevice", "getDevicesLinux", "matchDevicesLinux", "getDevicesMac", "e", "matchDevicesMac", "getDevicesWin", "diskDrives", "partitions", "partition", "matchDevicesWin", "filteresDevices", "blkStdoutToObject", "blockDevices", "drivetypes", "workload", "res", "logicalDisks", "drivetype", "calcFsSpeed", "rx", "wx", "fsStats", "fs_filter", "output", "calcDiskIO", "rIO", "wIO", "rWaitTime", "wWaitTime", "tWaitTime", "disksIO", "stats", "diskLayout", "getVendorFromModel", "model", "diskManufacturers", "manufacturer", "commitResult", "cmdFullSmart", "out", "outJSON", "out2", "mediumType", "BSDName", "logical", "interfaceType", "diskBSDName", "parts2", "status", "linesSATA", "linesNVMe", "linesUSB", "dataType", "sizeStr", "sizeValue", "smartStatusString", "linkWidth", "smartDev", "dev", "serialNum", "name", "mediaType", "smartStr", "smartData", "require_network", "__commonJSMin", "exports", "os", "exec", "execSync", "fs", "util", "_platform", "_linux", "_darwin", "_windows", "_freebsd", "_openbsd", "_netbsd", "_sunos", "_network", "_default_iface", "_ifaces", "_dhcpNics", "_networkInterfaces", "_mac", "pathToIp", "getDefaultNetworkInterface", "ifacename", "ifacenameFirst", "ifaces", "scopeid", "dev", "details", "defaultIp", "line", "parts", "cmd", "getMacAddresses", "iface", "mac", "result", "lines", "i", "nextline", "networkInterfaceDefault", "callback", "resolve", "parseLinesWindowsNics", "sections", "nconfigsections", "nics", "linesNicConfig", "netEnabled", "adapterType", "speed", "getWindowsNics", "data", "nsections", "getWindowsDNSsuffixes", "dnsSuffixes", "element", "index", "longPrimaryDNS", "primaryDNS", "name", "connectionSpecificDNS", "dnsSuffix", "getWindowsIfaceDNSsuffix", "interfaceName", "connectionDnsSuffix", "getWindowsWiredProfilesInformation", "error", "getWindowsWirelessIfaceSSID", "getWindowsIEEE8021x", "connectionType", "i8021x", "arrayIface8021xInfo", "state8021x", "protocol8021x", "i8021xState", "i8021xProtocol", "SSID", "splitSectionsNics", "section", "parseLinesDarwinNics", "nic", "first", "operstate", "getDarwinNics", "getLinuxIfaceConnectionName", "connectionName", "checkLinuxDCHPInterfaces", "file", "getLinuxDHCPNics", "parseLinuxDHCPNics", "parts2", "getLinuxIfaceDHCPstatus", "DHCPNics", "getDarwinIfaceDHCPstatus", "getLinuxIfaceDNSsuffix", "getLinuxIfaceIEEE8021xAuth", "authenticationProtocol", "getLinuxIfaceIEEE8021xState", "testVirtualNic", "ifaceName", "virtualMacs", "item", "networkInterfaces", "rescan", "defaultString", "nics8021xInfo", "defaultInterface", "ifaceSanitized", "s", "l", "ip4", "ip4subnet", "ip6", "ip6subnet", "duplex", "mtu", "carrierChanges", "dhcp", "ieee8021xAuth", "ieee8021xState", "type", "nodeMainVersion", "myspeed", "wirelessspeed", "internal", "virtual", "found", "key", "value", "foundFirst", "detail", "IEEE8021x", "calcNetworkSpeed", "rx_bytes", "tx_bytes", "rx_dropped", "rx_errors", "tx_dropped", "tx_errors", "networkStats", "ifacesArray", "workload", "allIFaces", "networkStatsSingle", "parseLinesWindowsPerfData", "perfData", "stats", "stdout", "offset", "psections", "interfaces", "det", "getProcessName", "processes", "pid", "cmdParts", "networkConnections", "localip", "localport", "localaddress", "peerip", "peerport", "peeraddress", "connstate", "proc", "process", "states", "err2", "stdout2", "hasState", "networkGatewayDefault", "require_wifi", "__commonJSMin", "exports", "os", "exec", "execSync", "util", "_platform", "_linux", "_darwin", "_windows", "wifiDBFromQuality", "quality", "qual", "wifiQualityFromDB", "db", "result", "_wifi_frequencies", "wifiFrequencyFromChannel", "channel", "wifiChannelFromFrequencs", "frequency", "key", "ifaceListLinux", "cmd", "parts", "line", "ifaceDetails", "lines", "iface", "id", "mac", "i", "type", "nmiDeviceLinux", "ssid", "nmiConnectionLinux", "bssid", "wpaConnectionLinux", "freq", "getWifiNetworkListNmi", "part", "security", "wpaFlags", "rsnFlags", "getWifiNetworkListIw", "iwlistParts", "element", "address", "mode", "dbParts", "isWpa", "isWpa2", "wpaFlag", "l", "parseWifiDarwin", "wifiObj", "wifiItem", "signalLevel", "ciphers", "wifiNetworks", "callback", "resolve", "iwconfigParts", "ifaceSanitized", "s", "res", "error", "stdout", "output", "ssidParts", "ssidPart", "ssidLines", "bssidsParts", "bssidPart", "bssidLines", "bssidLine", "getVendor", "model", "formatBssid", "wifiConnections", "ifaces", "networkList", "ifaceDetail", "ll", "nmiDetails", "wpaDetails", "network", "nw", "ssidSanitized", "t", "nmiConnection", "parts1", "lines2", "lines3", "txRate", "allLines", "wifiInterfaces", "macParts", "vendor", "require_processes", "__commonJSMin", "exports", "os", "fs", "path", "exec", "execSync", "util", "_platform", "_linux", "_darwin", "_windows", "_freebsd", "_openbsd", "_netbsd", "_sunos", "_processes_cpu", "_services_cpu", "_process_cpu", "_winStatusValues", "parseTimeUnix", "time", "result", "parts", "parseElapsedTime", "etime", "current", "elapsed", "timeIndex", "days", "timeStr", "hours", "mins", "secs", "ms", "res", "services", "srv", "callback", "resolve", "srvString", "s", "l", "i", "srvs", "dataSrv", "tmpsrv", "name", "srvStr", "args", "stdout", "lines", "ps", "e", "pids", "p", "pid", "pv", "cv", "cmd", "j", "error", "curr_processes", "all", "parseProcStat", "list_new", "resultProcess", "element", "calcProcStatLinux", "listPos", "wincommand", "srvName", "srvCaption", "started", "startMode", "line", "user", "nice", "system", "idle", "iowait", "irq", "softirq", "steal", "guest", "guest_nice", "_cpu_old", "statparts", "utime", "stime", "cutime", "cstime", "cpuu", "cpus", "calcProcStatWin", "procStat", "processes", "parsedhead", "getName", "command", "parseLine", "offset", "offset2", "checkColumn", "ppid", "cpu", "mem", "priority", "vsz", "rss", "state", "tty", "cmdPath", "params", "fullcommand", "p1", "p2", "p3", "p4", "firstParamPos", "firstParamPathPos", "firstPos", "tmpCommand", "tmpParams", "lastSlashPos", "parseProcesses", "head", "parseProcesses2", "formatDateTime", "month", "year", "day", "parseElapsed", "elapsed_parts", "pmem", "processSections", "procs", "procStats", "allcpuu", "allcpus", "parentPid", "statusValue", "commandLine", "additionalCommand", "commandPath", "memw", "processLoad", "proc", "processesString", "pname", "inList", "processFound", "item", "procName", "found", "data", "resultItemId", "require_users", "__commonJSMin", "exports", "exec", "util", "_platform", "_linux", "_darwin", "_windows", "_freebsd", "_openbsd", "_netbsd", "_sunos", "parseUsersLinux", "lines", "phase", "result", "result_who", "result_w", "w_first", "w_header", "w_pos", "who_line", "is_whopart", "line", "l", "item", "obj", "parseUsersDarwin", "users", "callback", "resolve", "error", "stdout", "cmd", "data", "sessions", "parseWinSessions", "loggedons", "parseWinLoggedOn", "queryUser", "parseWinUsersQuery", "parseWinUsers", "id", "user", "dateTime", "sessionParts", "session", "starttime", "fuzzyMatch", "name1", "name2", "eq", "len", "c1", "c2", "userParts", "userQuery", "domain", "username", "sessionid", "quser", "loggedonParts", "loggedon", "parts", "name", "header", "headerDelimiter", "start", "nextSpace", "i", "tty", "require_internet", "__commonJSMin", "exports", "util", "_platform", "_linux", "_darwin", "_windows", "_freebsd", "_openbsd", "_netbsd", "_sunos", "inetChecksite", "url", "callback", "resolve", "result", "urlSanitized", "s", "l", "i", "sl", "t", "args", "stdout", "lines", "statusCode", "http", "res", "inetLatency", "host", "hostSanitized", "params", "line", "parts", "filt", "require_dockerSocket", "__commonJSMin", "exports", "module", "net", "isWin", "socketPath", "DockerSocket", "callback", "socket", "alldata", "data", "startbody", "all", "id", "require_docker", "__commonJSMin", "exports", "util", "DockerSocket", "_platform", "_windows", "_docker_container_stats", "_docker_socket", "_docker_last_read", "dockerInfo", "callback", "resolve", "result", "data", "dockerImages", "all", "workload", "element", "dockerImagesInspect", "imageID", "payload", "imageIDSanitized", "dockerContainers", "inContainers", "containers", "id", "obj", "docker_containers", "key", "dockerContainerInspect", "containerID", "containerIdSanitized", "docker_calcCPUPercent", "cpu_stats", "precpu_stats", "nanoSecNow", "cpuPercent", "possIntervals", "intervalsUsed", "cpuDelta", "systemDelta", "docker_calcNetworkIO", "networks", "rx", "wx", "docker_calcBlockIO", "blkio_stats", "dockerContainerStats", "containerIDs", "containerArray", "containerIDsSanitized", "s", "i", "sl", "allContainers", "container", "dockerContainerStatsSingle", "dataInspect", "stats", "dockerContainerProcesses", "titles", "value", "pos_pid", "pos_ppid", "pos_pgid", "pos_vsz", "pos_time", "pos_elapsed", "pos_ni", "pos_ruser", "pos_user", "pos_rgroup", "pos_group", "pos_stat", "pos_rss", "pos_command", "process", "dockerVolumes", "dockerAll", "l", "res", "processes", "require_virtualbox", "__commonJSMin", "exports", "os", "exec", "util", "vboxInfo", "callback", "result", "resolve", "error", "stdout", "parts", "part", "lines", "state", "running", "runningSinceString", "runningSince", "sinceDateObj", "offset", "stoppedSinceString", "stoppedSince", "require_printer", "__commonJSMin", "exports", "exec", "util", "_platform", "_linux", "_darwin", "_windows", "_freebsd", "_openbsd", "_netbsd", "_sunos", "winPrinterStatus", "parseLinuxCupsHeader", "lines", "result", "parts", "parseLinuxCupsPrinter", "printerId", "parseLinuxLpstatPrinter", "id", "parseDarwinPrinters", "printerObject", "uriParts", "parseWindowsPrinters", "status", "printer", "callback", "resolve", "cmd", "error", "stdout", "printerHeader", "i", "printers", "outObj", "require_usb", "__commonJSMin", "exports", "exec", "util", "_platform", "_linux", "_darwin", "_windows", "_freebsd", "_openbsd", "_netbsd", "_sunos", "getLinuxUsbType", "type", "name", "result", "str", "parseLinuxUsb", "usb", "lines", "parts", "idVendor", "vendorParts", "vendor", "idProduct", "productParts", "product", "interfaceClassParts", "usbType", "iManufacturerParts", "manufacturer", "getDarwinUsbType", "parseDarwinUsb", "id", "i", "match", "number", "usbObj", "removableDrive", "getWindowsUsbTypeCreation", "creationclass", "parseWindowsUsb", "callback", "resolve", "error", "stdout", "require_audio", "__commonJSMin", "exports", "exec", "execSync", "util", "_platform", "_linux", "_darwin", "_windows", "_freebsd", "_openbsd", "_netbsd", "_sunos", "parseAudioType", "str", "input", "output", "result", "getLinuxAudioPci", "cmd", "element", "lines", "audio", "parseLinuxAudioPciMM", "audioPCI", "slotId", "pciMatch", "item", "parseDarwinChannel", "parseDarwinAudio", "audioObject", "id", "channelStr", "parseWindowsAudio", "status", "callback", "resolve", "error", "stdout", "outObj", "i", "require_bluetooth", "__commonJSMin", "exports", "exec", "execSync", "path", "util", "fs", "_platform", "_linux", "_darwin", "_windows", "_freebsd", "_openbsd", "_netbsd", "_sunos", "parseBluetoothType", "str", "result", "parseBluetoothManufacturer", "parseLinuxBluetoothInfo", "lines", "macAddr1", "macAddr2", "parseDarwinBluetoothDevices", "bluetoothObject", "typeStr", "parseWindowsBluetooth", "bluetoothDevices", "callback", "resolve", "element", "filename", "pathParts", "infoFile", "hdicon", "i", "error", "stdout", "outObj", "obj", "objKey", "innerObject", "bluetoothDevice", "part", "require_lib", "__commonJSMin", "exports", "lib_version", "util", "system", "osInfo", "cpu", "memory", "battery", "graphics", "filesystem", "network", "wifi", "processes", "users", "internet", "docker", "vbox", "printer", "usb", "audio", "bluetooth", "_platform", "_windows", "_freebsd", "_openbsd", "_netbsd", "_sunos", "version", "getStaticData", "callback", "resolve", "data", "res", "getDynamicData", "srv", "iface", "functionProcessed", "totalFunctions", "getAllData", "key", "get", "valueObject", "allPromises", "func", "params", "funcWithoutParams", "result", "i", "keys", "filter", "filterParts", "partialArray", "element", "partialRes", "k", "val", "observe", "interval", "_data", "src_exports", "__export", "Command", "__toCommonJS", "import_api", "import_child_process", "import_node_os", "nameMap", "macosRelease", "release", "os", "name", "version", "import_node_process", "import_node_fs", "import_semver", "isMacOS", "process", "version", "clean", "length", "parseVersion", "plist", "matches", "macOSVersion", "file", "fs", "import_os", "import_react", "import_systeminformation", "import_jsx_runtime", "calculateDiskStorage", "diskObj", "si", "totalSize", "Command", "storageInfo", "setStorageInfo", "serialNumber", "setSerialNumber", "networkDevices", "setNetworkDevices", "size", "error", "stdout", "stderr", "serialNumberMatch", "networkInterfaces", "os", "devices", "name", "interfaces", "interfaceObj", "releaseImage", "macosRelease", "macOSVersion", "device"]
}
